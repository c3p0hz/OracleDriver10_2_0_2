/*      */ package oracle.sql;
/*      */ 
/*      */ import B;
/*      */ import java.sql.SQLException;
/*      */ import java.text.DecimalFormatSymbols;
/*      */ import java.util.Locale;
/*      */ import oracle.core.lmx.CoreException;
/*      */ 
/*      */ class LnxLibThin
/*      */   implements LnxLib
/*      */ {
/* 6491 */   private static final byte[] lnxqone = { -63, 2 };
/*      */ 
/* 6494 */   private static final byte[] lnxqtwo = { -63, 3 };
/*      */   private static final int LNXQACOS = 0;
/*      */   private static final int LNXQASIN = 1;
/*      */   private static final int LNXQATAN = 2;
/*      */   private static final int LNXQCOS = 3;
/*      */   private static final int LNXQSIN = 4;
/*      */   private static final int LNXQTAN = 5;
/*      */   private static final int LNXQCSH = 6;
/*      */   private static final int LNXQSNH = 7;
/*      */   private static final int LNXQTNH = 8;
/*      */   private static final int LNXQEXP = 9;
/*      */   private static final int LNXM_NUM = 22;
/*      */   private static final int LNXDIGS = 20;
/*      */   private static final int LNXSGNBT = 128;
/*      */   private static final int LNXEXPMX = 127;
/*      */   private static final int LNXEXPMN = 0;
/*      */   private static final int LNXEXPBS = 64;
/*      */   private static final int LNXBASE = 100;
/*      */   private static final int LNXMXFMT = 64;
/*      */   private static final int LNXMXOUT = 40;
/*      */   private static final int LNXDIV_LNXBASE_SQUARED = 10000;
/*      */   private static final int MINUB1MAXVAL = 255;
/*      */   private static final double ORANUM_FBASE = 100.0D;
/*      */   private final int LNXQNOSGN = 127;
/*      */   private final char LNXNFT_COMMA = ',';
/*      */   private final int LNXBYTEMASK = 255;
/*      */   private final int LNXSHORTMASK = 65535;
/* 6556 */   private static byte[] LnxqFirstDigit = { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };
/*      */ 
/* 6563 */   private static byte[] LnxqNegate = { 0, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 };
/*      */ 
/* 6571 */   private static byte[] LnxqTruncate_P = { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91 };
/*      */ 
/* 6578 */   private static byte[] LnxqTruncate_N = { 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101 };
/*      */ 
/* 6586 */   private static byte[] LnxqRound_P = { 0, 1, 1, 1, 1, 1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 101, 101, 101, 101, 101 };
/*      */ 
/* 6594 */   private static byte[] LnxqRound_N = { 0, 0, 1, 1, 1, 1, 1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 101, 101, 101, 101, 101 };
/*      */ 
/* 6603 */   private static byte[][] LnxqComponents_P = { { 0, 0 }, { 0, 0 }, { 0, 1 }, { 0, 2 }, { 0, 3 }, { 0, 4 }, { 0, 5 }, { 0, 6 }, { 0, 7 }, { 0, 8 }, { 0, 9 }, { 1, 0 }, { 1, 1 }, { 1, 2 }, { 1, 3 }, { 1, 4 }, { 1, 5 }, { 1, 6 }, { 1, 7 }, { 1, 8 }, { 1, 9 }, { 2, 0 }, { 2, 1 }, { 2, 2 }, { 2, 3 }, { 2, 4 }, { 2, 5 }, { 2, 6 }, { 2, 7 }, { 2, 8 }, { 2, 9 }, { 3, 0 }, { 3, 1 }, { 3, 2 }, { 3, 3 }, { 3, 4 }, { 3, 5 }, { 3, 6 }, { 3, 7 }, { 3, 8 }, { 3, 9 }, { 4, 0 }, { 4, 1 }, { 4, 2 }, { 4, 3 }, { 4, 4 }, { 4, 5 }, { 4, 6 }, { 4, 7 }, { 4, 8 }, { 4, 9 }, { 5, 0 }, { 5, 1 }, { 5, 2 }, { 5, 3 }, { 5, 4 }, { 5, 5 }, { 5, 6 }, { 5, 7 }, { 5, 8 }, { 5, 9 }, { 6, 0 }, { 6, 1 }, { 6, 2 }, { 6, 3 }, { 6, 4 }, { 6, 5 }, { 6, 6 }, { 6, 7 }, { 6, 8 }, { 6, 9 }, { 7, 0 }, { 7, 1 }, { 7, 2 }, { 7, 3 }, { 7, 4 }, { 7, 5 }, { 7, 6 }, { 7, 7 }, { 7, 8 }, { 7, 9 }, { 8, 0 }, { 8, 1 }, { 8, 2 }, { 8, 3 }, { 8, 4 }, { 8, 5 }, { 8, 6 }, { 8, 7 }, { 8, 8 }, { 8, 9 }, { 9, 0 }, { 9, 1 }, { 9, 2 }, { 9, 3 }, { 9, 4 }, { 9, 5 }, { 9, 6 }, { 9, 7 }, { 9, 8 }, { 9, 9 } };
/*      */ 
/* 6708 */   private static byte[][] LnxqComponents_N = { { 0, 0 }, { 0, 0 }, { 9, 9 }, { 9, 8 }, { 9, 7 }, { 9, 6 }, { 9, 5 }, { 9, 4 }, { 9, 3 }, { 9, 2 }, { 9, 1 }, { 9, 0 }, { 8, 9 }, { 8, 8 }, { 8, 7 }, { 8, 6 }, { 8, 5 }, { 8, 4 }, { 8, 3 }, { 8, 2 }, { 8, 1 }, { 8, 0 }, { 7, 9 }, { 7, 8 }, { 7, 7 }, { 7, 6 }, { 7, 5 }, { 7, 4 }, { 7, 3 }, { 7, 2 }, { 7, 1 }, { 7, 0 }, { 6, 9 }, { 6, 8 }, { 6, 7 }, { 6, 6 }, { 6, 5 }, { 6, 4 }, { 6, 3 }, { 6, 2 }, { 6, 1 }, { 6, 0 }, { 5, 9 }, { 5, 8 }, { 5, 7 }, { 5, 6 }, { 5, 5 }, { 5, 4 }, { 5, 3 }, { 5, 2 }, { 5, 1 }, { 5, 0 }, { 4, 9 }, { 4, 8 }, { 4, 7 }, { 4, 6 }, { 4, 5 }, { 4, 4 }, { 4, 3 }, { 4, 2 }, { 4, 1 }, { 4, 0 }, { 3, 9 }, { 3, 8 }, { 3, 7 }, { 3, 6 }, { 3, 5 }, { 3, 4 }, { 3, 3 }, { 3, 2 }, { 3, 1 }, { 3, 0 }, { 2, 9 }, { 2, 8 }, { 2, 7 }, { 2, 6 }, { 2, 5 }, { 2, 4 }, { 2, 3 }, { 2, 2 }, { 2, 1 }, { 2, 0 }, { 1, 9 }, { 1, 8 }, { 1, 7 }, { 1, 6 }, { 1, 5 }, { 1, 4 }, { 1, 3 }, { 1, 2 }, { 1, 1 }, { 1, 0 }, { 0, 9 }, { 0, 8 }, { 0, 7 }, { 0, 6 }, { 0, 5 }, { 0, 4 }, { 0, 3 }, { 0, 2 }, { 0, 1 }, { 0, 0 } };
/*      */ 
/* 6814 */   private static byte[][] LnxqAdd_PPP = { { 0, 0 }, { 0, 1 }, { 1, 0 }, { 2, 0 }, { 3, 0 }, { 4, 0 }, { 5, 0 }, { 6, 0 }, { 7, 0 }, { 8, 0 }, { 9, 0 }, { 10, 0 }, { 11, 0 }, { 12, 0 }, { 13, 0 }, { 14, 0 }, { 15, 0 }, { 16, 0 }, { 17, 0 }, { 18, 0 }, { 19, 0 }, { 20, 0 }, { 21, 0 }, { 22, 0 }, { 23, 0 }, { 24, 0 }, { 25, 0 }, { 26, 0 }, { 27, 0 }, { 28, 0 }, { 29, 0 }, { 30, 0 }, { 31, 0 }, { 32, 0 }, { 33, 0 }, { 34, 0 }, { 35, 0 }, { 36, 0 }, { 37, 0 }, { 38, 0 }, { 39, 0 }, { 40, 0 }, { 41, 0 }, { 42, 0 }, { 43, 0 }, { 44, 0 }, { 45, 0 }, { 46, 0 }, { 47, 0 }, { 48, 0 }, { 49, 0 }, { 50, 0 }, { 51, 0 }, { 52, 0 }, { 53, 0 }, { 54, 0 }, { 55, 0 }, { 56, 0 }, { 57, 0 }, { 58, 0 }, { 59, 0 }, { 60, 0 }, { 61, 0 }, { 62, 0 }, { 63, 0 }, { 64, 0 }, { 65, 0 }, { 66, 0 }, { 67, 0 }, { 68, 0 }, { 69, 0 }, { 70, 0 }, { 71, 0 }, { 72, 0 }, { 73, 0 }, { 74, 0 }, { 75, 0 }, { 76, 0 }, { 77, 0 }, { 78, 0 }, { 79, 0 }, { 80, 0 }, { 81, 0 }, { 82, 0 }, { 83, 0 }, { 84, 0 }, { 85, 0 }, { 86, 0 }, { 87, 0 }, { 88, 0 }, { 89, 0 }, { 90, 0 }, { 91, 0 }, { 92, 0 }, { 93, 0 }, { 94, 0 }, { 95, 0 }, { 96, 0 }, { 97, 0 }, { 98, 0 }, { 99, 0 }, { 100, 0 }, { 1, 1 }, { 2, 1 }, { 3, 1 }, { 4, 1 }, { 5, 1 }, { 6, 1 }, { 7, 1 }, { 8, 1 }, { 9, 1 }, { 10, 1 }, { 11, 1 }, { 12, 1 }, { 13, 1 }, { 14, 1 }, { 15, 1 }, { 16, 1 }, { 17, 1 }, { 18, 1 }, { 19, 1 }, { 20, 1 }, { 21, 1 }, { 22, 1 }, { 23, 1 }, { 24, 1 }, { 25, 1 }, { 26, 1 }, { 27, 1 }, { 28, 1 }, { 29, 1 }, { 30, 1 }, { 31, 1 }, { 32, 1 }, { 33, 1 }, { 34, 1 }, { 35, 1 }, { 36, 1 }, { 37, 1 }, { 38, 1 }, { 39, 1 }, { 40, 1 }, { 41, 1 }, { 42, 1 }, { 43, 1 }, { 44, 1 }, { 45, 1 }, { 46, 1 }, { 47, 1 }, { 48, 1 }, { 49, 1 }, { 50, 1 }, { 51, 1 }, { 52, 1 }, { 53, 1 }, { 54, 1 }, { 55, 1 }, { 56, 1 }, { 57, 1 }, { 58, 1 }, { 59, 1 }, { 60, 1 }, { 61, 1 }, { 62, 1 }, { 63, 1 }, { 64, 1 }, { 65, 1 }, { 66, 1 }, { 67, 1 }, { 68, 1 }, { 69, 1 }, { 70, 1 }, { 71, 1 }, { 72, 1 }, { 73, 1 }, { 74, 1 }, { 75, 1 }, { 76, 1 }, { 77, 1 }, { 78, 1 }, { 79, 1 }, { 80, 1 }, { 81, 1 }, { 82, 1 }, { 83, 1 }, { 84, 1 }, { 85, 1 }, { 86, 1 }, { 87, 1 }, { 88, 1 }, { 89, 1 }, { 90, 1 }, { 91, 1 }, { 92, 1 }, { 93, 1 }, { 94, 1 }, { 95, 1 }, { 96, 1 }, { 97, 1 }, { 98, 1 }, { 99, 1 }, { 100, 1 } };
/*      */ 
/* 7023 */   private static byte[][] LnxqAdd_NNN = { { 0, 2 }, { 0, 1 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 2, 1 }, { 3, 1 }, { 4, 1 }, { 5, 1 }, { 6, 1 }, { 7, 1 }, { 8, 1 }, { 9, 1 }, { 10, 1 }, { 11, 1 }, { 12, 1 }, { 13, 1 }, { 14, 1 }, { 15, 1 }, { 16, 1 }, { 17, 1 }, { 18, 1 }, { 19, 1 }, { 20, 1 }, { 21, 1 }, { 22, 1 }, { 23, 1 }, { 24, 1 }, { 25, 1 }, { 26, 1 }, { 27, 1 }, { 28, 1 }, { 29, 1 }, { 30, 1 }, { 31, 1 }, { 32, 1 }, { 33, 1 }, { 34, 1 }, { 35, 1 }, { 36, 1 }, { 37, 1 }, { 38, 1 }, { 39, 1 }, { 40, 1 }, { 41, 1 }, { 42, 1 }, { 43, 1 }, { 44, 1 }, { 45, 1 }, { 46, 1 }, { 47, 1 }, { 48, 1 }, { 49, 1 }, { 50, 1 }, { 51, 1 }, { 52, 1 }, { 53, 1 }, { 54, 1 }, { 55, 1 }, { 56, 1 }, { 57, 1 }, { 58, 1 }, { 59, 1 }, { 60, 1 }, { 61, 1 }, { 62, 1 }, { 63, 1 }, { 64, 1 }, { 65, 1 }, { 66, 1 }, { 67, 1 }, { 68, 1 }, { 69, 1 }, { 70, 1 }, { 71, 1 }, { 72, 1 }, { 73, 1 }, { 74, 1 }, { 75, 1 }, { 76, 1 }, { 77, 1 }, { 78, 1 }, { 79, 1 }, { 80, 1 }, { 81, 1 }, { 82, 1 }, { 83, 1 }, { 84, 1 }, { 85, 1 }, { 86, 1 }, { 87, 1 }, { 88, 1 }, { 89, 1 }, { 90, 1 }, { 91, 1 }, { 92, 1 }, { 93, 1 }, { 94, 1 }, { 95, 1 }, { 96, 1 }, { 97, 1 }, { 98, 1 }, { 99, 1 }, { 100, 1 }, { 101, 1 }, { 2, 2 }, { 3, 2 }, { 4, 2 }, { 5, 2 }, { 6, 2 }, { 7, 2 }, { 8, 2 }, { 9, 2 }, { 10, 2 }, { 11, 2 }, { 12, 2 }, { 13, 2 }, { 14, 2 }, { 15, 2 }, { 16, 2 }, { 17, 2 }, { 18, 2 }, { 19, 2 }, { 20, 2 }, { 21, 2 }, { 22, 2 }, { 23, 2 }, { 24, 2 }, { 25, 2 }, { 26, 2 }, { 27, 2 }, { 28, 2 }, { 29, 2 }, { 30, 2 }, { 31, 2 }, { 32, 2 }, { 33, 2 }, { 34, 2 }, { 35, 2 }, { 36, 2 }, { 37, 2 }, { 38, 2 }, { 39, 2 }, { 40, 2 }, { 41, 2 }, { 42, 2 }, { 43, 2 }, { 44, 2 }, { 45, 2 }, { 46, 2 }, { 47, 2 }, { 48, 2 }, { 49, 2 }, { 50, 2 }, { 51, 2 }, { 52, 2 }, { 53, 2 }, { 54, 2 }, { 55, 2 }, { 56, 2 }, { 57, 2 }, { 58, 2 }, { 59, 2 }, { 60, 2 }, { 61, 2 }, { 62, 2 }, { 63, 2 }, { 64, 2 }, { 65, 2 }, { 66, 2 }, { 67, 2 }, { 68, 2 }, { 69, 2 }, { 70, 2 }, { 71, 2 }, { 72, 2 }, { 73, 2 }, { 74, 2 }, { 75, 2 }, { 76, 2 }, { 77, 2 }, { 78, 2 }, { 79, 2 }, { 80, 2 }, { 81, 2 }, { 82, 2 }, { 83, 2 }, { 84, 2 }, { 85, 2 }, { 86, 2 }, { 87, 2 }, { 88, 2 }, { 89, 2 }, { 90, 2 }, { 91, 2 }, { 92, 2 }, { 93, 2 }, { 94, 2 }, { 95, 2 }, { 96, 2 }, { 97, 2 }, { 98, 2 }, { 99, 2 }, { 100, 2 }, { 101, 2 } };
/*      */ 
/* 7236 */   private static byte[][] LnxqAdd_PNP = { { 0, 2 }, { 0, 1 }, { 0, 0 }, { 0, 0 }, { 1, 1 }, { 2, 1 }, { 3, 1 }, { 4, 1 }, { 5, 1 }, { 6, 1 }, { 7, 1 }, { 8, 1 }, { 9, 1 }, { 10, 1 }, { 11, 1 }, { 12, 1 }, { 13, 1 }, { 14, 1 }, { 15, 1 }, { 16, 1 }, { 17, 1 }, { 18, 1 }, { 19, 1 }, { 20, 1 }, { 21, 1 }, { 22, 1 }, { 23, 1 }, { 24, 1 }, { 25, 1 }, { 26, 1 }, { 27, 1 }, { 28, 1 }, { 29, 1 }, { 30, 1 }, { 31, 1 }, { 32, 1 }, { 33, 1 }, { 34, 1 }, { 35, 1 }, { 36, 1 }, { 37, 1 }, { 38, 1 }, { 39, 1 }, { 40, 1 }, { 41, 1 }, { 42, 1 }, { 43, 1 }, { 44, 1 }, { 45, 1 }, { 46, 1 }, { 47, 1 }, { 48, 1 }, { 49, 1 }, { 50, 1 }, { 51, 1 }, { 52, 1 }, { 53, 1 }, { 54, 1 }, { 55, 1 }, { 56, 1 }, { 57, 1 }, { 58, 1 }, { 59, 1 }, { 60, 1 }, { 61, 1 }, { 62, 1 }, { 63, 1 }, { 64, 1 }, { 65, 1 }, { 66, 1 }, { 67, 1 }, { 68, 1 }, { 69, 1 }, { 70, 1 }, { 71, 1 }, { 72, 1 }, { 73, 1 }, { 74, 1 }, { 75, 1 }, { 76, 1 }, { 77, 1 }, { 78, 1 }, { 79, 1 }, { 80, 1 }, { 81, 1 }, { 82, 1 }, { 83, 1 }, { 84, 1 }, { 85, 1 }, { 86, 1 }, { 87, 1 }, { 88, 1 }, { 89, 1 }, { 90, 1 }, { 91, 1 }, { 92, 1 }, { 93, 1 }, { 94, 1 }, { 95, 1 }, { 96, 1 }, { 97, 1 }, { 98, 1 }, { 99, 1 }, { 100, 1 }, { 1, 2 }, { 2, 2 }, { 3, 2 }, { 4, 2 }, { 5, 2 }, { 6, 2 }, { 7, 2 }, { 8, 2 }, { 9, 2 }, { 10, 2 }, { 11, 2 }, { 12, 2 }, { 13, 2 }, { 14, 2 }, { 15, 2 }, { 16, 2 }, { 17, 2 }, { 18, 2 }, { 19, 2 }, { 20, 2 }, { 21, 2 }, { 22, 2 }, { 23, 2 }, { 24, 2 }, { 25, 2 }, { 26, 2 }, { 27, 2 }, { 28, 2 }, { 29, 2 }, { 30, 2 }, { 31, 2 }, { 32, 2 }, { 33, 2 }, { 34, 2 }, { 35, 2 }, { 36, 2 }, { 37, 2 }, { 38, 2 }, { 39, 2 }, { 40, 2 }, { 41, 2 }, { 42, 2 }, { 43, 2 }, { 44, 2 }, { 45, 2 }, { 46, 2 }, { 47, 2 }, { 48, 2 }, { 49, 2 }, { 50, 2 }, { 51, 2 }, { 52, 2 }, { 53, 2 }, { 54, 2 }, { 55, 2 }, { 56, 2 }, { 57, 2 }, { 58, 2 }, { 59, 2 }, { 60, 2 }, { 61, 2 }, { 62, 2 }, { 63, 2 }, { 64, 2 }, { 65, 2 }, { 66, 2 }, { 67, 2 }, { 68, 2 }, { 69, 2 }, { 70, 2 }, { 71, 2 }, { 72, 2 }, { 73, 2 }, { 74, 2 }, { 75, 2 }, { 76, 2 }, { 77, 2 }, { 78, 2 }, { 79, 2 }, { 80, 2 }, { 81, 2 }, { 82, 2 }, { 83, 2 }, { 84, 2 }, { 85, 2 }, { 86, 2 }, { 87, 2 }, { 88, 2 }, { 89, 2 }, { 90, 2 }, { 91, 2 }, { 92, 2 }, { 93, 2 }, { 94, 2 }, { 95, 2 }, { 96, 2 }, { 97, 2 }, { 98, 2 }, { 99, 2 }, { 100, 2 } };
/*      */ 
/* 7448 */   private static byte[][] LnxqAdd_PNN = { { 0, 0 }, { 0, 1 }, { 0, 0 }, { 2, 0 }, { 3, 0 }, { 4, 0 }, { 5, 0 }, { 6, 0 }, { 7, 0 }, { 8, 0 }, { 9, 0 }, { 10, 0 }, { 11, 0 }, { 12, 0 }, { 13, 0 }, { 14, 0 }, { 15, 0 }, { 16, 0 }, { 17, 0 }, { 18, 0 }, { 19, 0 }, { 20, 0 }, { 21, 0 }, { 22, 0 }, { 23, 0 }, { 24, 0 }, { 25, 0 }, { 26, 0 }, { 27, 0 }, { 28, 0 }, { 29, 0 }, { 30, 0 }, { 31, 0 }, { 32, 0 }, { 33, 0 }, { 34, 0 }, { 35, 0 }, { 36, 0 }, { 37, 0 }, { 38, 0 }, { 39, 0 }, { 40, 0 }, { 41, 0 }, { 42, 0 }, { 43, 0 }, { 44, 0 }, { 45, 0 }, { 46, 0 }, { 47, 0 }, { 48, 0 }, { 49, 0 }, { 50, 0 }, { 51, 0 }, { 52, 0 }, { 53, 0 }, { 54, 0 }, { 55, 0 }, { 56, 0 }, { 57, 0 }, { 58, 0 }, { 59, 0 }, { 60, 0 }, { 61, 0 }, { 62, 0 }, { 63, 0 }, { 64, 0 }, { 65, 0 }, { 66, 0 }, { 67, 0 }, { 68, 0 }, { 69, 0 }, { 70, 0 }, { 71, 0 }, { 72, 0 }, { 73, 0 }, { 74, 0 }, { 75, 0 }, { 76, 0 }, { 77, 0 }, { 78, 0 }, { 79, 0 }, { 80, 0 }, { 81, 0 }, { 82, 0 }, { 83, 0 }, { 84, 0 }, { 85, 0 }, { 86, 0 }, { 87, 0 }, { 88, 0 }, { 89, 0 }, { 90, 0 }, { 91, 0 }, { 92, 0 }, { 93, 0 }, { 94, 0 }, { 95, 0 }, { 96, 0 }, { 97, 0 }, { 98, 0 }, { 99, 0 }, { 100, 0 }, { 101, 0 }, { 2, 1 }, { 3, 1 }, { 4, 1 }, { 5, 1 }, { 6, 1 }, { 7, 1 }, { 8, 1 }, { 9, 1 }, { 10, 1 }, { 11, 1 }, { 12, 1 }, { 13, 1 }, { 14, 1 }, { 15, 1 }, { 16, 1 }, { 17, 1 }, { 18, 1 }, { 19, 1 }, { 20, 1 }, { 21, 1 }, { 22, 1 }, { 23, 1 }, { 24, 1 }, { 25, 1 }, { 26, 1 }, { 27, 1 }, { 28, 1 }, { 29, 1 }, { 30, 1 }, { 31, 1 }, { 32, 1 }, { 33, 1 }, { 34, 1 }, { 35, 1 }, { 36, 1 }, { 37, 1 }, { 38, 1 }, { 39, 1 }, { 40, 1 }, { 41, 1 }, { 42, 1 }, { 43, 1 }, { 44, 1 }, { 45, 1 }, { 46, 1 }, { 47, 1 }, { 48, 1 }, { 49, 1 }, { 50, 1 }, { 51, 1 }, { 52, 1 }, { 53, 1 }, { 54, 1 }, { 55, 1 }, { 56, 1 }, { 57, 1 }, { 58, 1 }, { 59, 1 }, { 60, 1 }, { 61, 1 }, { 62, 1 }, { 63, 1 }, { 64, 1 }, { 65, 1 }, { 66, 1 }, { 67, 1 }, { 68, 1 }, { 69, 1 }, { 70, 1 }, { 71, 1 }, { 72, 1 }, { 73, 1 }, { 74, 1 }, { 75, 1 }, { 76, 1 }, { 77, 1 }, { 78, 1 }, { 79, 1 }, { 80, 1 }, { 81, 1 }, { 82, 1 }, { 83, 1 }, { 84, 1 }, { 85, 1 }, { 86, 1 }, { 87, 1 }, { 88, 1 }, { 89, 1 }, { 90, 1 }, { 91, 1 }, { 92, 1 }, { 93, 1 }, { 94, 1 }, { 95, 1 }, { 96, 1 }, { 97, 1 }, { 98, 1 }, { 99, 1 }, { 100, 1 }, { 101, 1 } };
/*      */ 
/* 7659 */   private static byte[] LnxsubIdentity = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101 };
/*      */ 
/* 7679 */   private static byte[][] LnxqDigit_P = { { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }, { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }, { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }, { 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }, { 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }, { 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }, { 61, 62, 63, 64, 65, 66, 67, 68, 69, 70 }, { 71, 72, 73, 74, 75, 76, 77, 78, 79, 80 }, { 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }, { 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 } };
/*      */ 
/* 7697 */   private static byte[][] LnxqDigit_N = { { 101, 100, 99, 98, 97, 96, 95, 94, 93, 92 }, { 91, 90, 89, 88, 87, 86, 85, 84, 83, 82 }, { 81, 80, 79, 78, 77, 76, 75, 74, 73, 72 }, { 71, 70, 69, 68, 67, 66, 65, 64, 63, 62 }, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52 }, { 51, 50, 49, 48, 47, 46, 45, 44, 43, 42 }, { 41, 40, 39, 38, 37, 36, 35, 34, 33, 32 }, { 31, 30, 29, 28, 27, 26, 25, 24, 23, 22 }, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12 }, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 } };
/*      */ 
/* 7711 */   private static final double[][] powerTable = { { 128.0D, 1.0E+256D, 1.0E-256D }, { 64.0D, 1.E+128D, 1.E-128D }, { 32.0D, 1.0E+64D, 1.0E-64D }, { 16.0D, 1.E+32D, 1.E-32D }, { 8.0D, 10000000000000000.0D, 1.0E-16D }, { 4.0D, 100000000.0D, 1.0E-08D }, { 2.0D, 10000.0D, 0.0001D }, { 1.0D, 100.0D, 0.01D } };
/*      */ 
/* 7724 */   private static final double[][] factorTable = { { 15.0D, 1.0E+30D, 1.E-30D }, { 14.0D, 1.0E+28D, 1.0E-28D }, { 13.0D, 1.0E+26D, 1.0E-26D }, { 12.0D, 1.0E+24D, 9.999999999999999E-25D }, { 11.0D, 1.0E+22D, 1.0E-22D }, { 10.0D, 1.0E+20D, 1.0E-20D }, { 9.0D, 1.0E+18D, 1.E-18D }, { 8.0D, 10000000000000000.0D, 1.0E-16D }, { 7.0D, 100000000000000.0D, 1.0E-14D }, { 6.0D, 1000000000000.0D, 1.0E-12D }, { 5.0D, 10000000000.0D, 1.0E-10D }, { 4.0D, 100000000.0D, 1.0E-08D }, { 3.0D, 1000000.0D, 1.0E-06D }, { 2.0D, 10000.0D, 0.0001D }, { 1.0D, 100.0D, 0.01D }, { 0.0D, 1.0D, 1.0D }, { -1.0D, 0.01D, 100.0D }, { -2.0D, 0.0001D, 10000.0D }, { -3.0D, 1.0E-06D, 1000000.0D }, { -4.0D, 1.0E-08D, 100000000.0D }, { -5.0D, 1.0E-10D, 10000000000.0D }, { -6.0D, 1.0E-12D, 1000000000000.0D }, { -7.0D, 1.0E-14D, 100000000000000.0D }, { -8.0D, 1.0E-16D, 10000000000000000.0D }, { -9.0D, 1.E-18D, 1.0E+18D }, { -10.0D, 1.0E-20D, 1.0E+20D }, { -11.0D, 1.0E-22D, 1.0E+22D }, { -12.0D, 9.999999999999999E-25D, 1.0E+24D }, { -13.0D, 1.0E-26D, 1.0E+26D }, { -14.0D, 1.0E-28D, 1.0E+28D }, { -15.0D, 1.E-30D, 1.0E+30D }, { -16.0D, 1.E-32D, 1.E+32D }, { -17.0D, 9.999999999999999E-35D, 1.0E+34D }, { -18.0D, 9.999999999999999E-37D, 1.0E+36D }, { -19.0D, 1.0E-38D, 1.0E+38D }, { -20.0D, 9.999999999999999E-41D, 1.0E+40D }, { -21.0D, 1.0E-42D, 1.0E+42D }, { -22.0D, 1.0E-44D, 1.E+44D }, { -23.0D, 1.0E-46D, 1.0E+46D }, { -24.0D, 1.0E-48D, 1.0E+48D }, { -25.0D, 1.0E-50D, 1.E+50D }, { -26.0D, 1.0E-52D, 1.0E+52D }, { -27.0D, 1.0E-54D, 1.E+54D }, { -28.0D, 1.0E-56D, 1.E+56D }, { -29.0D, 1.0E-58D, 9.999999999999999E+57D }, { -30.0D, 1.0E-60D, 1.0E+60D }, { -31.0D, 1.0E-62D, 1.0E+62D }, { -32.0D, 1.0E-64D, 1.0E+64D }, { -33.0D, 1.0E-66D, 1.0E+66D }, { -34.0D, 1.E-68D, 1.0E+68D } };
/*      */   private char[] lnx_chars;
/*      */ 
/*      */   LnxLibThin()
/*      */   {
/* 6545 */     this.LNXQNOSGN = 127;
/*      */ 
/* 6548 */     this.LNXNFT_COMMA = ',';
/*      */ 
/* 6551 */     this.LNXBYTEMASK = 255;
/*      */ 
/* 6554 */     this.LNXSHORTMASK = 65535;
/*      */ 
/* 7784 */     this.lnx_chars = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '-', ' ', '.', ',', '$', '<', '>', '(', ')', '#', '~', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'i', 'l', 'm', 'p', 'r', 's', 't', 'v', 'A', 'B', 'C', 'D', 'E', 'F', 'I', 'L', 'M', 'P', 'R', 'S', 'T' };
/*      */   }
/*      */ 
/*      */   public byte[] lnxabs(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/*   88 */     byte[] arrayOfByte = new byte[paramArrayOfByte.length];
/*      */ 
/*   92 */     if (NUMBER._isPositive(paramArrayOfByte))
/*      */     {
/*   95 */       System.arraycopy(paramArrayOfByte, 0, arrayOfByte, 0, paramArrayOfByte.length);
/*   96 */       return arrayOfByte;
/*      */     }
/*      */ 
/*  100 */     if (NUMBER._isNegInf(paramArrayOfByte))
/*      */     {
/*  102 */       return NUMBER.posInf().shareBytes();
/*      */     }
/*      */ 
/*  106 */     int i = paramArrayOfByte.length;
/*  107 */     if (paramArrayOfByte[(i - 1)] == 102)
/*      */     {
/*  109 */       i--;
/*      */     }
/*      */ 
/*  112 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte, 0, i);
/*      */ 
/*  117 */     _negateNumber(arrayOfByte);
/*      */ 
/*  119 */     return _setLength(arrayOfByte, i);
/*      */   }
/*      */ 
/*      */   public byte[] lnxacos(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/*  133 */     return lnxqtri(paramArrayOfByte, 0);
/*      */   }
/*      */ 
/*      */   public byte[] lnxadd(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */     throws SQLException
/*      */   {
/*  141 */     int i = paramArrayOfByte1.length;
/*  142 */     int j = 0;
/*  143 */     int k = paramArrayOfByte2.length;
/*  144 */     int m = 0;
/*      */ 
/*  146 */     byte[] arrayOfByte1 = new byte[41];
/*  147 */     int n = 0;
/*      */ 
/*  154 */     int i5 = 0;
/*  155 */     int i6 = 0;
/*      */ 
/*  166 */     int i15 = 0;
/*  167 */     int i16 = 0;
/*  168 */     int i17 = 0;
/*      */ 
/*  185 */     int i9 = n + 1;
/*      */ 
/*  189 */     boolean bool1 = NUMBER._isPositive(paramArrayOfByte1);
/*  190 */     int i19 = paramArrayOfByte1[0] < 0 ? 256 + paramArrayOfByte1[0] : 255 - paramArrayOfByte1[0];
/*      */ 
/*  194 */     if (!bool1)
/*      */     {
/*  196 */       if (paramArrayOfByte1[(i - 1)] == 102) {
/*  197 */         i--;
/*      */       }
/*      */     }
/*  200 */     int i18 = i - 1;
/*      */ 
/*  204 */     boolean bool2 = NUMBER._isPositive(paramArrayOfByte2);
/*  205 */     int i21 = paramArrayOfByte2[0] < 0 ? 256 + paramArrayOfByte2[0] : 255 - paramArrayOfByte2[0];
/*      */ 
/*  207 */     if (!bool2)
/*      */     {
/*  209 */       if (paramArrayOfByte2[(k - 1)] == 102)
/*  210 */         k--;
/*      */     }
/*  212 */     int i20 = k - 1;
/*      */     boolean bool3;
/*  216 */     if ((i19 == 255) && ((i18 == 0) || (paramArrayOfByte1[1] == 101)))
/*      */     {
/*  220 */       bool3 = bool1;
/*      */ 
/*  222 */       if (bool3) {
/*  223 */         return NUMBER._makePosInf();
/*      */       }
/*  225 */       return NUMBER._makeNegInf();
/*      */     }
/*      */ 
/*  228 */     if ((i21 == 255) && ((i20 == 0) || (paramArrayOfByte2[1] == 101)))
/*      */     {
/*  232 */       bool3 = bool2;
/*      */ 
/*  234 */       if (bool3) {
/*  235 */         return NUMBER._makePosInf();
/*      */       }
/*  237 */       return NUMBER._makeNegInf();
/*      */     }
/*      */ 
/*  242 */     if ((i19 == 128) && (i18 == 0))
/*      */     {
/*  245 */       arrayOfByte1 = new byte[k];
/*  246 */       System.arraycopy(paramArrayOfByte2, 0, arrayOfByte1, 0, k);
/*  247 */       bool3 = bool2;
/*  248 */       i26 = k;
/*      */ 
/*  250 */       return _setLength(arrayOfByte1, i26);
/*      */     }
/*      */ 
/*  253 */     if ((i21 == 128) && (i20 == 0))
/*      */     {
/*  256 */       arrayOfByte1 = new byte[i];
/*  257 */       System.arraycopy(paramArrayOfByte1, 0, arrayOfByte1, 0, i);
/*  258 */       bool3 = bool1;
/*  259 */       i26 = i;
/*      */ 
/*  261 */       return _setLength(arrayOfByte1, i26);
/*      */     }
/*      */ 
/*  265 */     int i14 = i19 - i21;
/*      */     byte[][] arrayOfByte;
/*      */     int i24;
/*      */     int i25;
/*      */     int i27;
/*      */     int i28;
/*  290 */     if (bool1 == bool2)
/*      */     {
/*  295 */       bool3 = bool1;
/*      */ 
/*  298 */       if (bool3)
/*      */       {
/*  301 */         arrayOfByte = LnxqAdd_PPP;
/*  302 */         i24 = 1;
/*  303 */         i25 = 1;
/*      */       }
/*      */       else
/*      */       {
/*  308 */         arrayOfByte = LnxqAdd_NNN;
/*  309 */         i24 = 101;
/*  310 */         i25 = -1;
/*      */       }
/*      */ 
/*      */     }
/*      */     else
/*      */     {
/*  325 */       int i30 = i14;
/*      */ 
/*  328 */       if (i30 == 0)
/*      */       {
/*  332 */         i27 = j + 1;
/*  333 */         i28 = m + 1;
/*  334 */         int i29 = j + (i18 < i20 ? i18 : i20);
/*  335 */         while ((i27 <= i29) && (paramArrayOfByte1[i27] + paramArrayOfByte2[i28] == 102))
/*      */         {
/*  338 */           i27++;
/*  339 */           i28++;
/*      */         }
/*      */ 
/*  343 */         if (i27 <= i29)
/*      */         {
/*  346 */           i30 = bool1 ? paramArrayOfByte1[i27] + paramArrayOfByte2[i28] - 102 : 102 - (paramArrayOfByte1[i27] + paramArrayOfByte2[i28]);
/*      */         }
/*      */         else
/*      */         {
/*  354 */           i30 = i18 - i20;
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/*  359 */       if (i30 == 0)
/*      */       {
/*  362 */         return NUMBER._makeZero();
/*      */       }
/*      */ 
/*  366 */       bool3 = i30 > 0 ? bool1 : bool2;
/*      */ 
/*  369 */       if (bool3)
/*      */       {
/*  372 */         arrayOfByte = LnxqAdd_PNP;
/*  373 */         i24 = 1;
/*  374 */         i25 = -1;
/*      */       }
/*      */       else
/*      */       {
/*  379 */         arrayOfByte = LnxqAdd_PNN;
/*  380 */         i24 = 101;
/*  381 */         i25 = 1;
/*      */       }
/*      */     }
/*      */     int i22;
/*      */     int i3;
/*      */     int i4;
/*      */     int i7;
/*      */     int i8;
/*      */     int i23;
/*      */     int i13;
/*  408 */     if (i14 >= 0)
/*      */     {
/*  413 */       i22 = i19;
/*      */ 
/*  416 */       if (i14 + i20 <= i18)
/*      */       {
/*  423 */         i15 = i14;
/*  424 */         i16 = i20;
/*  425 */         i17 = i18 - (i14 + i20);
/*      */ 
/*  428 */         i3 = j + i15;
/*  429 */         i4 = 1;
/*  430 */         i5 = i3 + i16;
/*  431 */         i6 = m + i20;
/*  432 */         i7 = j + i18;
/*  433 */         i8 = 1;
/*      */ 
/*  436 */         i23 = i18;
/*  437 */         i13 = (i17 != 0) && (bool1 != bool3) ? 1 : 0;
/*      */       }
/*  439 */       else if (i14 < i18)
/*      */       {
/*  446 */         i15 = i14;
/*  447 */         i16 = i18 - i14;
/*  448 */         i17 = i20 - i16;
/*      */ 
/*  451 */         i3 = j + i15;
/*  452 */         i4 = 1;
/*  453 */         i5 = j + i18;
/*  454 */         i6 = m + i16;
/*  455 */         i7 = m + i20;
/*  456 */         i8 = 2;
/*      */ 
/*  459 */         i23 = i14 + i20;
/*  460 */         i13 = bool2 != bool3 ? 1 : 0;
/*      */       }
/*      */       else
/*      */       {
/*  469 */         i15 = i18;
/*  470 */         i16 = -(i14 - i18);
/*  471 */         i17 = i20;
/*      */ 
/*  474 */         i3 = j + i18;
/*  475 */         i4 = 1;
/*  476 */         i7 = m + i20;
/*  477 */         i8 = 2;
/*      */ 
/*  480 */         i23 = i14 + i20;
/*  481 */         i13 = bool2 != bool3 ? 1 : 0;
/*      */       }
/*      */ 
/*      */     }
/*      */     else
/*      */     {
/*  489 */       i22 = i21;
/*      */ 
/*  492 */       i14 = -i14;
/*  493 */       if (i14 + i18 <= i20)
/*      */       {
/*  500 */         i15 = i14;
/*  501 */         i16 = i18;
/*  502 */         i17 = i20 - (i14 + i18);
/*      */ 
/*  505 */         i3 = m + i15;
/*  506 */         i4 = 2;
/*  507 */         i5 = j + i18;
/*  508 */         i6 = i3 + i16;
/*  509 */         i7 = m + i20;
/*  510 */         i8 = 2;
/*      */ 
/*  513 */         i23 = i20;
/*  514 */         i13 = (i17 != 0) && (bool2 != bool3) ? 1 : 0;
/*      */       }
/*  516 */       else if (i14 < i20)
/*      */       {
/*  523 */         i15 = i14;
/*  524 */         i16 = i20 - i14;
/*  525 */         i17 = i18 - i16;
/*      */ 
/*  528 */         i3 = m + i15;
/*  529 */         i4 = 2;
/*  530 */         i5 = j + i16;
/*  531 */         i6 = m + i20;
/*  532 */         i7 = j + i18;
/*  533 */         i8 = 1;
/*      */ 
/*  536 */         i23 = i14 + i18;
/*  537 */         i13 = bool1 != bool3 ? 1 : 0;
/*      */       }
/*      */       else
/*      */       {
/*  546 */         i15 = i20;
/*  547 */         i16 = -(i14 - i20);
/*  548 */         i17 = i18;
/*      */ 
/*  551 */         i3 = m + i20;
/*  552 */         i4 = 2;
/*  553 */         i7 = j + i18;
/*  554 */         i8 = 1;
/*      */ 
/*  557 */         i23 = i14 + i18;
/*  558 */         i13 = bool1 != bool3 ? 1 : 0;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/*  563 */     if (i23 > 20)
/*      */     {
/*  565 */       if (i14 > 20)
/*      */       {
/*  568 */         i16 = 0;
/*  569 */         i17 = 0;
/*  570 */         i23 = i15;
/*  571 */         i13 = 0;
/*      */       }
/*      */       else
/*      */       {
/*  575 */         i9 = 1;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/*  580 */     int i10 = i9 + (i23 - 1);
/*  581 */     int i11 = i10;
/*      */     int i12;
/*  592 */     if (i17 != 0)
/*      */     {
/*  595 */       i12 = i11 - i17;
/*      */ 
/*  598 */       if (i8 == 1)
/*  599 */         arrayOfByte1[i11] = paramArrayOfByte1[i7];
/*      */       else
/*  601 */         arrayOfByte1[i11] = paramArrayOfByte2[i7];
/*  602 */       i7--;
/*  603 */       i11--;
/*      */ 
/*  606 */       if (i13 != 0)
/*      */       {
/*  609 */         while (i11 > i12)
/*      */         {
/*  611 */           if (i8 == 1)
/*  612 */             arrayOfByte1[i11] = (byte)(paramArrayOfByte1[i7] + i25);
/*      */           else
/*  614 */             arrayOfByte1[i11] = (byte)(paramArrayOfByte2[i7] + i25);
/*  615 */           i7--;
/*  616 */           i11--;
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/*  622 */       while (i11 > i12)
/*      */       {
/*  624 */         if (i8 == 1)
/*  625 */           arrayOfByte1[i11] = paramArrayOfByte1[i7];
/*      */         else
/*  627 */           arrayOfByte1[i11] = paramArrayOfByte2[i7];
/*  628 */         i7--;
/*  629 */         i11--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/*  641 */     if (i16 > 0)
/*      */     {
/*  645 */       i12 = i11 - i16;
/*      */ 
/*  648 */       int i1 = 0;
/*  649 */       int i2 = i13 != 0 ? i1 + 1 : i1;
/*      */       do
/*      */       {
/*  654 */         i2 = i1 + paramArrayOfByte1[i5] + paramArrayOfByte2[i6] + arrayOfByte[i2][1];
/*      */ 
/*  657 */         arrayOfByte1[i11] = arrayOfByte[i2][0];
/*  658 */         i5--;
/*  659 */         i6--;
/*  660 */         i11--;
/*      */       }
/*  662 */       while (i11 > i12);
/*      */ 
/*  665 */       i13 = (arrayOfByte[i2][1] & 0x1) == 0 ? 0 : 1;
/*      */     }
/*      */     else
/*      */     {
/*  670 */       i27 = i13 != 0 ? 100 : i25 == 1 ? 2 : i24;
/*      */ 
/*  674 */       i12 = i11 + i16;
/*      */ 
/*  677 */       while (i11 > i12)
/*      */       {
/*  679 */         arrayOfByte1[i11] = (byte)i27;
/*  680 */         i11--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/*  692 */     if (i15 != 0)
/*      */     {
/*  695 */       i12 = i11 - i15;
/*      */ 
/*  698 */       if (i13 != 0)
/*      */       {
/*  701 */         i27 = (i25 == 1 ? 100 : 1) + (bool3 ? 0 : 1);
/*      */ 
/*  703 */         i28 = (i25 == 1 ? 1 : 100) + (bool3 ? 0 : 1);
/*      */         do
/*      */         {
/*  708 */           if (i4 == 1)
/*      */           {
/*  710 */             i13 = paramArrayOfByte1[i3] == i27 ? 1 : 0;
/*  711 */             arrayOfByte1[i11] = (byte)(i13 != 0 ? i28 : paramArrayOfByte1[i3] + i25);
/*      */           }
/*      */           else
/*      */           {
/*  716 */             i13 = paramArrayOfByte2[i3] == i27 ? 1 : 0;
/*  717 */             arrayOfByte1[i11] = (byte)(i13 != 0 ? i28 : paramArrayOfByte2[i3] + i25);
/*      */           }
/*      */ 
/*  720 */           i3--;
/*  721 */           i11--;
/*      */         }
/*  723 */         while ((i13 != 0) && (i11 > i12));
/*      */       }
/*      */ 
/*  727 */       while (i11 > i12)
/*      */       {
/*  729 */         if (i4 == 1)
/*  730 */           arrayOfByte1[i11] = paramArrayOfByte1[i3];
/*      */         else
/*  732 */           arrayOfByte1[i11] = paramArrayOfByte2[i3];
/*  733 */         i3--;
/*  734 */         i11--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/*  743 */     if (i13 != 0)
/*      */     {
/*  747 */       if (i22 == 255)
/*      */       {
/*  749 */         if (bool3) {
/*  750 */           return NUMBER._makePosInf();
/*      */         }
/*  752 */         return NUMBER._makeNegInf();
/*      */       }
/*      */ 
/*  756 */       i9--;
/*  757 */       arrayOfByte1[i9] = (byte)(bool3 ? 2 : 100);
/*  758 */       i22++;
/*  759 */       i23++;
/*      */     }
/*      */ 
/*  764 */     if (arrayOfByte1[i9] == i24)
/*      */     {
/*      */       do
/*      */       {
/*  769 */         i9++;
/*  770 */         i22--;
/*  771 */         i23--;
/*      */       }
/*  773 */       while (arrayOfByte1[i9] == i24);
/*      */ 
/*  776 */       if (i22 < 128) {
/*  777 */         return NUMBER._makeZero();
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/*  785 */     if (i23 > 20)
/*      */     {
/*  788 */       i10 = i9 + 19;
/*  789 */       i23 = 20;
/*      */ 
/*  792 */       if ((bool3 ? arrayOfByte1[(i10 + 1)] : LnxqNegate[arrayOfByte1[(i10 + 1)]]) > 50)
/*      */       {
/*  796 */         i27 = bool3 ? 100 : 2;
/*      */ 
/*  799 */         if (i13 == 0) {
/*  800 */           arrayOfByte1[(i9 - 1)] = (byte)i24;
/*      */         }
/*      */ 
/*  803 */         while (arrayOfByte1[i10] == i27)
/*      */         {
/*  805 */           i10--;
/*  806 */           i23--;
/*      */         }
/*      */ 
/*  809 */         if (i10 < i9)
/*      */         {
/*  811 */           if (i22 == 255)
/*      */           {
/*  813 */             if (bool3) {
/*  814 */               return NUMBER._makePosInf();
/*      */             }
/*  816 */             return NUMBER._makeNegInf();
/*      */           }
/*  818 */           i9--;
/*  819 */           i22++;
/*  820 */           i23 = 1;
/*      */         }
/*      */         int tmp1810_1808 = i10;
/*      */         byte[] tmp1810_1806 = arrayOfByte1; tmp1810_1806[tmp1810_1808] = (byte)(tmp1810_1806[tmp1810_1808] + (bool3 ? 1 : -1));
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/*  829 */     while (arrayOfByte1[i10] == i24)
/*      */     {
/*  831 */       i10--;
/*  832 */       i23--;
/*      */     }
/*      */ 
/*  838 */     if (i9 != 1)
/*      */     {
/*  840 */       byte[] arrayOfByte2 = new byte[41];
/*  841 */       System.arraycopy(arrayOfByte1, i9, arrayOfByte2, 1, i23);
/*  842 */       System.arraycopy(arrayOfByte2, 1, arrayOfByte1, 1, i23);
/*      */     }
/*      */ 
/*  847 */     int i26 = i23 + 1;
/*      */ 
/*  849 */     if (!bool3)
/*      */     {
/*  853 */       if (i26 <= 20)
/*      */       {
/*  855 */         arrayOfByte1[i26] = 102;
/*  856 */         i26++;
/*      */       }
/*      */     }
/*      */ 
/*  860 */     arrayOfByte1[n] = (byte)(bool3 ? i22 - 256 : 255 - i22);
/*  861 */     return _setLength(arrayOfByte1, i26);
/*      */   }
/*      */ 
/*      */   public byte[] lnxasin(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/*  874 */     return lnxqtri(paramArrayOfByte, 1);
/*      */   }
/*      */ 
/*      */   public byte[] lnxatan(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/*  886 */     return lnxqtri(paramArrayOfByte, 2);
/*      */   }
/*      */ 
/*      */   public byte[] lnxatan2(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */     throws SQLException
/*      */   {
/*  906 */     if ((NUMBER._isZero(paramArrayOfByte1)) && (NUMBER._isZero(paramArrayOfByte2)))
/*      */     {
/*  909 */       throw new SQLException(CoreException.getMessage(11));
/*      */     }
/*      */ 
/*  915 */     byte[] arrayOfByte1 = lnxdiv(paramArrayOfByte1, paramArrayOfByte2);
/*  916 */     arrayOfByte1 = lnxatan(arrayOfByte1);
/*      */ 
/*  918 */     if (NUMBER._isPositive(paramArrayOfByte2))
/*      */     {
/*  920 */       return arrayOfByte1;
/*      */     }
/*      */ 
/*  923 */     byte[] arrayOfByte2 = NUMBER.pi().shareBytes();
/*      */ 
/*  925 */     if (NUMBER._isPositive(paramArrayOfByte1))
/*      */     {
/*  928 */       return lnxadd(arrayOfByte1, arrayOfByte2);
/*      */     }
/*      */ 
/*  933 */     return lnxsub(arrayOfByte1, arrayOfByte2);
/*      */   }
/*      */ 
/*      */   public byte[] lnxbex(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */     throws SQLException
/*      */   {
/*      */     byte[] arrayOfByte;
/*  948 */     switch (lnxsgn(paramArrayOfByte1))
/*      */     {
/*      */     case 1:
/*  951 */       arrayOfByte = lnxln(paramArrayOfByte1);
/*  952 */       arrayOfByte = lnxmul(paramArrayOfByte2, arrayOfByte);
/*  953 */       return lnxexp(arrayOfByte);
/*      */     case 0:
/*  956 */       if (NUMBER._isZero(paramArrayOfByte2))
/*      */       {
/*  959 */         arrayOfByte = new byte[lnxqone.length];
/*  960 */         System.arraycopy(lnxqone, 0, arrayOfByte, 0, lnxqone.length);
/*  961 */         return arrayOfByte;
/*      */       }
/*      */ 
/*  966 */       return NUMBER._makeZero();
/*      */     case -1:
/*  970 */       if (new NUMBER(paramArrayOfByte2).isInt())
/*      */       {
/*  974 */         arrayOfByte = lnxneg(paramArrayOfByte1);
/*  975 */         arrayOfByte = lnxln(arrayOfByte);
/*  976 */         arrayOfByte = lnxmul(paramArrayOfByte2, arrayOfByte);
/*  977 */         arrayOfByte = lnxexp(arrayOfByte);
/*      */ 
/*  980 */         if (!NUMBER._isZero(lnxmod(paramArrayOfByte2, lnxqtwo)))
/*      */         {
/*  982 */           arrayOfByte = lnxneg(arrayOfByte);
/*      */         }
/*  984 */         return arrayOfByte;
/*      */       }
/*      */ 
/*  990 */       return NUMBER._makePosInf();
/*      */     }
/*      */ 
/*  998 */     return null;
/*      */   }
/*      */ 
/*      */   public byte[] lnxcos(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 1010 */     return lnxqtra(paramArrayOfByte, 3);
/*      */   }
/*      */ 
/*      */   public byte[] lnxcsh(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 1022 */     return lnxqtra(paramArrayOfByte, 6);
/*      */   }
/*      */ 
/*      */   public byte[] lnxdec(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 1033 */     int m = paramArrayOfByte.length;
/* 1034 */     byte[] arrayOfByte1 = new byte[22];
/*      */ 
/* 1036 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte1, 0, m);
/*      */ 
/* 1038 */     if (NUMBER._isPositive(arrayOfByte1))
/*      */     {
/* 1041 */       int i = (byte)((arrayOfByte1[0] & 0xFFFFFF7F) - 65);
/*      */ 
/* 1045 */       if ((i >= 0) && (i <= 18))
/*      */       {
/* 1051 */         int j = i + 1;
/* 1052 */         int k = m - 1;
/*      */ 
/* 1055 */         if (j <= k)
/*      */         {
/*      */           int tmp70_69 = j;
/*      */           byte[] tmp70_67 = arrayOfByte1; tmp70_67[tmp70_69] = (byte)(tmp70_67[tmp70_69] - 1);
/*      */ 
/* 1061 */           if ((arrayOfByte1[j] == 1) && (j == k))
/*      */           {
/* 1063 */             m--;
/* 1064 */             if (m == 1)
/* 1065 */               return NUMBER._makeZero();
/*      */           }
/*      */         }
/*      */         else
/*      */         {
/*      */           int tmp107_105 = k;
/*      */           byte[] tmp107_103 = arrayOfByte1; tmp107_103[tmp107_105] = (byte)(tmp107_103[tmp107_105] - 1);
/*      */ 
/* 1075 */           while (j > k)
/*      */           {
/* 1077 */             arrayOfByte1[j] = 100;
/* 1078 */             j--;
/*      */           }
/*      */ 
/* 1082 */           if (arrayOfByte1[1] == 1)
/*      */           {
/* 1084 */             for (int n = 1; n <= i; n++)
/* 1085 */               arrayOfByte1[n] = arrayOfByte1[(n + 1)];
/* 1086 */             i--;
/*      */           }
/*      */ 
/* 1090 */           m = i + 2;
/*      */         }
/*      */ 
/* 1095 */         arrayOfByte1[0] = (byte)(i + 128 + 64 + 1);
/* 1096 */         byte[] arrayOfByte2 = new byte[m];
/* 1097 */         System.arraycopy(arrayOfByte1, 0, arrayOfByte2, 0, m);
/*      */ 
/* 1099 */         return arrayOfByte2;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 1104 */     return NUMBER._makeZero();
/*      */   }
/*      */ 
/*      */   public byte[] lnxdiv(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */     throws SQLException
/*      */   {
/* 1112 */     byte[] arrayOfByte1 = paramArrayOfByte1;
/* 1113 */     int i = arrayOfByte1.length;
/* 1114 */     byte[] arrayOfByte2 = paramArrayOfByte2;
/* 1115 */     int j = arrayOfByte2.length;
/* 1116 */     byte[] arrayOfByte3 = new byte[22];
/* 1117 */     int k = arrayOfByte3.length;
/*      */ 
/* 1124 */     int[] arrayOfInt1 = new int[22];
/*      */ 
/* 1130 */     int[] arrayOfInt2 = new int[10];
/*      */ 
/* 1136 */     byte[] arrayOfByte4 = new byte[41];
/*      */ 
/* 1140 */     int[] arrayOfInt3 = new int[13];
/*      */ 
/* 1151 */     int i1 = arrayOfByte1[0] >> 7 != 0 ? 1 : 0;
/* 1152 */     int i2 = arrayOfByte1[0];
/*      */ 
/* 1154 */     if (i1 == 0)
/*      */     {
/* 1156 */       i2 = (byte)(i2 ^ 0xFFFFFFFF);
/* 1157 */       if (arrayOfByte1[(i - 1)] == 102) i--;
/*      */ 
/*      */     }
/*      */ 
/* 1162 */     int i5 = arrayOfByte2[0] >> 7 != 0 ? 1 : 0;
/* 1163 */     int i6 = arrayOfByte2[0];
/*      */ 
/* 1165 */     if (i5 == 0)
/*      */     {
/* 1167 */       i6 = (byte)(i6 ^ 0xFFFFFFFF);
/* 1168 */       if (arrayOfByte2[(j - 1)] == 102) j--;
/*      */ 
/*      */     }
/*      */ 
/* 1174 */     if (((i6 & 0xFF) == 128) && (j == 1))
/*      */     {
/* 1177 */       if (i1 == i5)
/*      */       {
/* 1179 */         return NUMBER._makePosInf();
/*      */       }
/* 1181 */       return NUMBER._makeNegInf();
/*      */     }
/*      */ 
/* 1185 */     if (((i2 & 0xFF) == 128) && (i == 1))
/*      */     {
/* 1188 */       return NUMBER._makeZero();
/*      */     }
/* 1192 */     int i18;
/* 1192 */     if (i == 1) i18 = 0; else i18 = 1;
/* 1193 */     if ((((i2 & 0xFF) == 255) && ((i == 2) || (arrayOfByte1[i18] == 101))) || ((i == 1) && (arrayOfByte1[0] == 0)))
/*      */     {
/* 1198 */       if (i1 == i5)
/*      */       {
/* 1200 */         return NUMBER._makePosInf();
/*      */       }
/*      */ 
/* 1203 */       return NUMBER._makeNegInf();
/*      */     }
/*      */ 
/* 1207 */     if (j == 1) i18 = 0; else i18 = 1;
/* 1208 */     if ((((i6 & 0xFF) == 255) && ((j == 2) || (arrayOfByte2[i18] == 101))) || ((j == 1) && (arrayOfByte2[0] == 0)))
/*      */     {
/* 1213 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 1229 */     int i3 = i / 2 - 1;
/* 1230 */     int i4 = 21;
/* 1231 */     int m = i - 2;
/*      */ 
/* 1233 */     while (i4 > i3)
/*      */     {
/* 1235 */       arrayOfInt1[i4] = 0;
/* 1236 */       i4--;
/*      */     }
/*      */ 
/* 1239 */     if (i1 != 0)
/*      */     {
/* 1242 */       if ((i & 0x1) == 0)
/*      */       {
/* 1244 */         arrayOfInt1[i4] = (arrayOfByte1[(m + 1)] * 100 - 100);
/* 1245 */         m--;
/* 1246 */         i4--;
/*      */       }
/*      */ 
/* 1249 */       while (m > 0)
/*      */       {
/* 1251 */         arrayOfInt1[i4] = (arrayOfByte1[m] * 100 + arrayOfByte1[(m + 1)] - 101);
/* 1252 */         m -= 2;
/* 1253 */         i4--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 1259 */     if ((i & 0x1) == 0)
/*      */     {
/* 1261 */       arrayOfInt1[i4] = (10100 - arrayOfByte1[(m + 1)] * 100);
/* 1262 */       m--;
/* 1263 */       i4--;
/*      */     }
/*      */ 
/* 1266 */     while (m > 0)
/*      */     {
/* 1268 */       arrayOfInt1[i4] = (10201 - (arrayOfByte1[m] * 100 + arrayOfByte1[(m + 1)]));
/* 1269 */       m -= 2;
/* 1270 */       i4--;
/*      */     }
/*      */ 
/* 1276 */     int i7 = j / 2 - 1;
/* 1277 */     int i8 = i7;
/* 1278 */     int n = j - 2;
/*      */ 
/* 1280 */     if (i5 != 0)
/*      */     {
/* 1283 */       if ((j & 0x1) == 0)
/*      */       {
/* 1285 */         arrayOfInt2[i8] = (arrayOfByte2[(n + 1)] * 100 - 100);
/* 1286 */         n--;
/* 1287 */         i8--;
/*      */       }
/*      */ 
/* 1290 */       while (n > 0)
/*      */       {
/* 1292 */         arrayOfInt2[i8] = (arrayOfByte2[n] * 100 + arrayOfByte2[(n + 1)] - 101);
/* 1293 */         n -= 2;
/* 1294 */         i8--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 1300 */     if ((j & 0x1) == 0)
/*      */     {
/* 1302 */       arrayOfInt2[i8] = (10100 - arrayOfByte2[(n + 1)] * 100);
/* 1303 */       n--;
/* 1304 */       i8--;
/*      */     }
/*      */ 
/* 1307 */     while (n > 0)
/*      */     {
/* 1309 */       arrayOfInt2[i8] = (10201 - (arrayOfByte2[n] * 100 + arrayOfByte2[(n + 1)]));
/* 1310 */       n -= 2;
/* 1311 */       i8--;
/*      */     }
/*      */ 
/* 1325 */     int i13 = 0;
/* 1326 */     int i14 = -1;
/*      */     int i21;
/* 1330 */     if (j <= 3)
/*      */     {
/* 1341 */       i4 = 0;
/*      */ 
/* 1345 */       int i19 = arrayOfInt1[0];
/* 1346 */       i21 = arrayOfInt2[0];
/*      */       do
/*      */       {
/* 1353 */         int i22 = i19 / i21;
/*      */ 
/* 1355 */         i4++;
/* 1356 */         i19 -= i22 * i21;
/* 1357 */         i19 = i19 * 10000 + arrayOfInt1[i4];
/*      */ 
/* 1359 */         i14++;
/* 1360 */         arrayOfInt3[i14] = i22;
/*      */ 
/* 1362 */         if ((i19 == 0) && (i4 >= i3)) break;
/*      */       }
/* 1364 */       while (i14 < 10 + (arrayOfInt3[0] == 0 ? 2 : 1));
/*      */     }
/*      */     else
/*      */     {
/* 1380 */       int i24 = 0;
/* 1381 */       int i25 = i7;
/*      */ 
/* 1385 */       double d1 = arrayOfInt1[i24] * 10000 + arrayOfInt1[(i24 + 1)];
/* 1386 */       double d2 = arrayOfInt2[0] * 10000 + arrayOfInt2[1];
/*      */       do
/*      */       {
/* 1393 */         int i23 = (int)(d1 / d2);
/*      */ 
/* 1395 */         if (i23 != 0)
/*      */         {
/* 1398 */           i4 = i24 + 2;
/* 1399 */           i8 = 2;
/* 1400 */           while (i4 <= i25)
/*      */           {
/* 1402 */             arrayOfInt1[i4] -= i23 * arrayOfInt2[i8];
/* 1403 */             i4++;
/* 1404 */             i8++;
/*      */           }
/*      */         }
/*      */ 
/* 1408 */         d1 -= i23 * d2;
/* 1409 */         d1 = d1 * 10000.0D + arrayOfInt1[(i24 + 2)];
/*      */ 
/* 1411 */         if (i23 >= 10000)
/*      */         {
/* 1413 */           i15 = i14;
/* 1414 */           while (arrayOfInt3[i15] == 9999)
/*      */           {
/* 1416 */             arrayOfInt3[i15] = 0;
/* 1417 */             i15--;
/*      */           }
/* 1419 */           arrayOfInt3[i15] += 1;
/* 1420 */           i23 -= 10000;
/*      */         }
/*      */ 
/* 1423 */         if (i23 < 0)
/*      */         {
/* 1425 */           i15 = i14;
/* 1426 */           while (arrayOfInt3[i15] == 0)
/*      */           {
/* 1428 */             arrayOfInt3[i15] = 9999;
/* 1429 */             i15--;
/*      */           }
/* 1431 */           arrayOfInt3[i15] -= 1;
/* 1432 */           i23 += 10000;
/*      */         }
/*      */ 
/* 1435 */         i14++;
/* 1436 */         arrayOfInt3[i14] = i23;
/*      */ 
/* 1439 */         if (i24 >= i3) if ((d1 < 0.0D ? -d1 : d1) < 0.1D)
/*      */           {
/* 1441 */             i4 = i24 + 2;
/* 1442 */             while ((i4 <= i25) && (arrayOfInt1[i4] == 0))
/*      */             {
/* 1444 */               i4++;
/*      */             }
/* 1446 */             if (i4 > i25)
/*      */             {
/*      */               break;
/*      */             }
/*      */           }
/*      */ 
/* 1452 */         i24++;
/* 1453 */         i25++;
/*      */       }
/* 1455 */       while (i14 < 10 + (arrayOfInt3[0] == 0 ? 2 : 1));
/*      */     }
/*      */ 
/* 1463 */     if (arrayOfInt3[0] == 0)
/*      */     {
/* 1465 */       i13++;
/*      */     }
/*      */ 
/* 1470 */     while (arrayOfInt3[i14] == 0)
/*      */     {
/* 1472 */       i14--;
/*      */     }
/*      */ 
/* 1477 */     int i16 = arrayOfInt3[i13] >= 100 ? 1 : 0;
/* 1478 */     int i17 = arrayOfInt3[i14] % 100 != 0 ? 1 : 0;
/*      */ 
/* 1480 */     int i11 = 2 * (i14 - i13) + i16 + i17;
/*      */ 
/* 1486 */     if (i11 > 20)
/*      */     {
/* 1490 */       if (i16 > 0)
/*      */       {
/* 1492 */         i14 = i13 + 9;
/* 1493 */         arrayOfInt3[i14] += (arrayOfInt3[(i14 + 1)] >= 5000 ? 1 : 0);
/*      */       }
/*      */       else
/*      */       {
/* 1497 */         i14 = i13 + 10;
/* 1498 */         arrayOfInt3[i14] = ((arrayOfInt3[i14] + 50) / 100 * 100);
/*      */       }
/*      */ 
/* 1503 */       if (arrayOfInt3[i14] == 10000)
/*      */       {
/*      */         do
/*      */         {
/* 1507 */           i14--;
/*      */         }
/* 1509 */         while (arrayOfInt3[i14] == 9999);
/* 1510 */         arrayOfInt3[i14] += 1;
/*      */       }
/*      */ 
/* 1514 */       if (arrayOfInt3[0] != 0)
/*      */       {
/* 1516 */         i13 = 0;
/*      */       }
/*      */ 
/* 1520 */       while (arrayOfInt3[i14] == 0)
/*      */       {
/* 1522 */         i14--;
/*      */       }
/*      */ 
/* 1526 */       i16 = arrayOfInt3[i13] >= 100 ? 1 : 0;
/* 1527 */       i17 = arrayOfInt3[i14] % 100 != 0 ? 1 : 0;
/* 1528 */       i11 = 2 * (i14 - i13) + i16 + i17;
/*      */     }
/*      */ 
/* 1534 */     int i9 = (i2 & 0xFF) - (i6 & 0xFF) - (arrayOfInt3[0] == 0 ? 1 : 0) + 193;
/*      */ 
/* 1539 */     if (i9 > 255)
/*      */     {
/* 1542 */       if (i1 == i5)
/*      */       {
/* 1544 */         return NUMBER._makePosInf();
/*      */       }
/* 1546 */       return NUMBER._makeNegInf();
/*      */     }
/*      */ 
/* 1550 */     if (i9 < 128)
/*      */     {
/* 1553 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 1567 */     int i10 = i11 + 1;
/* 1568 */     arrayOfByte3 = new byte[i10];
/*      */ 
/* 1572 */     int i12 = i11;
/* 1573 */     int i15 = i14;
/*      */ 
/* 1575 */     if (i17 == 0)
/*      */     {
/* 1578 */       arrayOfByte3[i12] = (byte)(arrayOfInt3[i15] / 100 + 1);
/* 1579 */       i12--;
/*      */ 
/* 1581 */       i15--;
/*      */     }
/*      */     int i20;
/* 1585 */     while (i12 > 1)
/*      */     {
/* 1593 */       i20 = arrayOfInt3[i15] / 100;
/* 1594 */       i21 = arrayOfInt3[i15] - i20 * 100;
/* 1595 */       arrayOfByte3[i12] = (byte)(i21 + 1);
/* 1596 */       i12--;
/* 1597 */       arrayOfByte3[i12] = (byte)(i20 + 1);
/* 1598 */       i12--;
/*      */ 
/* 1601 */       i15--;
/*      */     }
/*      */ 
/* 1606 */     if (i16 == 0)
/*      */     {
/* 1609 */       arrayOfByte3[i12] = (byte)(arrayOfInt3[i15] + 1);
/*      */     }
/*      */ 
/* 1614 */     arrayOfByte3[0] = (byte)i9;
/*      */ 
/* 1619 */     if (i1 != i5)
/*      */     {
/* 1623 */       i10++;
/*      */       byte[] arrayOfByte5;
/* 1624 */       if (i10 > 20)
/*      */       {
/* 1626 */         arrayOfByte5 = new byte[21];
/* 1627 */         i10 = 21;
/*      */       }
/*      */       else {
/* 1630 */         arrayOfByte5 = new byte[i10];
/*      */       }
/* 1632 */       arrayOfByte5[0] = (byte)(i9 ^ 0xFFFFFFFF);
/* 1633 */       for (i20 = 0; i20 < i10 - 2; i20++)
/*      */       {
/* 1635 */         arrayOfByte5[(i20 + 1)] = (byte)(102 - arrayOfByte3[(i20 + 1)]);
/*      */       }
/* 1637 */       if (i10 <= 20) {
/* 1638 */         arrayOfByte5[(i10 - 1)] = 102;
/*      */       }
/* 1642 */       else if (arrayOfByte3.length == 20)
/* 1643 */         arrayOfByte5[(i10 - 1)] = 102;
/*      */       else {
/* 1645 */         arrayOfByte5[(i20 + 1)] = (byte)(102 - arrayOfByte3[(i20 + 1)]);
/*      */       }
/* 1647 */       return arrayOfByte5;
/*      */     }
/*      */ 
/* 1650 */     return arrayOfByte3;
/*      */   }
/*      */ 
/*      */   public byte[] lnxexp(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 1663 */     return lnxqtra(paramArrayOfByte, 9);
/*      */   }
/*      */ 
/*      */   public byte[] lnxflo(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 1677 */     byte[] arrayOfByte = lnxtru(paramArrayOfByte, 0);
/*      */ 
/* 1683 */     if ((NUMBER.compareBytes(arrayOfByte, paramArrayOfByte) != 0) && (!NUMBER._isPositive(paramArrayOfByte))) {
/* 1684 */       arrayOfByte = lnxsub(arrayOfByte, lnxqone);
/*      */     }
/* 1686 */     return arrayOfByte;
/*      */   }
/*      */ 
/*      */   public byte[] lnxceil(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 1700 */     byte[] arrayOfByte = lnxtru(paramArrayOfByte, 0);
/*      */ 
/* 1705 */     if ((NUMBER.compareBytes(arrayOfByte, paramArrayOfByte) != 0) && (NUMBER._isPositive(paramArrayOfByte))) {
/* 1706 */       arrayOfByte = lnxadd(arrayOfByte, lnxqone);
/*      */     }
/* 1708 */     return arrayOfByte;
/*      */   }
/*      */ 
/*      */   public byte[] lnxfpr(byte[] paramArrayOfByte, int paramInt)
/*      */     throws SQLException
/*      */   {
/* 1726 */     int i3 = paramArrayOfByte.length;
/*      */ 
/* 1730 */     if (NUMBER._isZero(paramArrayOfByte))
/*      */     {
/* 1732 */       return NUMBER._makeZero();
/*      */     }
/* 1734 */     if (NUMBER._isNegInf(paramArrayOfByte))
/*      */     {
/* 1736 */       return NUMBER._makeNegInf();
/*      */     }
/* 1738 */     if (NUMBER._isPosInf(paramArrayOfByte))
/*      */     {
/* 1740 */       return NUMBER._makePosInf();
/*      */     }
/*      */ 
/* 1744 */     if (paramInt < 0)
/*      */     {
/* 1746 */       return NUMBER._makeZero();
/*      */     }
/*      */     boolean bool;
/*      */     int k;
/*      */     int m;
/*      */     int n;
/*      */     int i1;
/*      */     int i2;
/* 1749 */     if ((bool = NUMBER._isPositive(paramArrayOfByte)))
/*      */     {
/* 1751 */       paramInt += ((paramArrayOfByte[1] & 0xFF) < 11 ? 2 : 1);
/* 1752 */       k = paramInt >> 1;
/* 1753 */       m = (paramInt & 0x1) == 1 ? 1 : 0;
/* 1754 */       n = 1;
/* 1755 */       i1 = 100;
/* 1756 */       i2 = 1;
/*      */     }
/*      */     else
/*      */     {
/* 1760 */       paramInt += ((paramArrayOfByte[1] & 0xFF) > 91 ? 2 : 1);
/* 1761 */       k = paramInt >> 1;
/* 1762 */       m = (paramInt & 0x1) == 1 ? 1 : 0;
/* 1763 */       n = 101;
/* 1764 */       i1 = 2;
/* 1765 */       i2 = -1;
/* 1766 */       i3 -= ((paramArrayOfByte[(i3 - 1)] & 0xFF) == 102 ? 1 : 0);
/*      */     }
/*      */ 
/* 1770 */     byte[] arrayOfByte = new byte[i3];
/* 1771 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte, 0, i3);
/*      */ 
/* 1775 */     if ((k > i3 - 1) || ((k == i3 - 1) && ((m != 0) || (LnxqFirstDigit[paramArrayOfByte[k]] == 1))))
/*      */     {
/* 1779 */       return _setLength(paramArrayOfByte, i3);
/*      */     }
/*      */ 
/* 1785 */     if ((k != 0) || ((m != 0) && (bool ? paramArrayOfByte[1] >= 51 : paramArrayOfByte[1] <= 51))) { if ((k != 1) || (m != 0) || (bool ? paramArrayOfByte[1] >= 6 : paramArrayOfByte[1] <= 96));
/*      */     }
/*      */     else {
/* 1789 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 1792 */     if (k == 0)
/*      */     {
/* 1795 */       if (NUMBER._isInf(paramArrayOfByte))
/*      */       {
/* 1797 */         if (bool)
/*      */         {
/* 1799 */           return NUMBER._makePosInf();
/*      */         }
/*      */ 
/* 1803 */         return NUMBER._makeNegInf();
/*      */       }
/*      */ 
/* 1807 */       arrayOfByte[0] = (byte)(paramArrayOfByte[0] + i2);
/* 1808 */       arrayOfByte[1] = (byte)(n + i2);
/*      */ 
/* 1810 */       return _setLength(arrayOfByte, 2);
/*      */     }
/*      */ 
/* 1813 */     int i = j = (byte)k;
/*      */ 
/* 1815 */     if (m != 0)
/*      */     {
/* 1818 */       if (bool ? paramArrayOfByte[(j + 1)] > 50 : paramArrayOfByte[(j + 1)] < 52)
/*      */       {
/* 1821 */         arrayOfByte[i] = (byte)(paramArrayOfByte[j] + i2);
/*      */       }
/*      */       else
/*      */       {
/* 1826 */         arrayOfByte[i] = paramArrayOfByte[j];
/*      */       }
/*      */ 
/*      */     }
/*      */     else
/*      */     {
/* 1832 */       arrayOfByte[i] = (bool ? LnxqRound_P[paramArrayOfByte[j]] : LnxqRound_N[paramArrayOfByte[j]]);
/*      */     }
/*      */ 
/* 1835 */     int j = (byte)(j - 1);
/*      */     int i4;
/* 1839 */     if (arrayOfByte[i] == i1 + i2)
/*      */     {
/* 1844 */       while ((j > 0) && (paramArrayOfByte[j] == i1))
/*      */       {
/* 1846 */         j = (byte)(j - 1);
/*      */       }
/*      */ 
/* 1850 */       if (j == 0)
/*      */       {
/* 1853 */         if (NUMBER._isInf(paramArrayOfByte))
/*      */         {
/* 1855 */           if (bool)
/*      */           {
/* 1857 */             return NUMBER._makePosInf();
/*      */           }
/*      */ 
/* 1861 */           return NUMBER._makeNegInf();
/*      */         }
/*      */ 
/* 1865 */         arrayOfByte[0] = (byte)(paramArrayOfByte[0] + i2);
/* 1866 */         arrayOfByte[1] = (byte)(n + i2);
/*      */ 
/* 1868 */         return _setLength(arrayOfByte, 2);
/*      */       }
/*      */ 
/* 1872 */       arrayOfByte[j] = (byte)(paramArrayOfByte[j] + i2);
/*      */ 
/* 1875 */       i4 = j + 1;
/*      */ 
/* 1878 */       j = (byte)(j - 1);
/*      */     }
/* 1880 */     else if (arrayOfByte[i] == n)
/*      */     {
/* 1885 */       while (paramArrayOfByte[j] == n)
/*      */       {
/* 1887 */         j = (byte)(j - 1);
/*      */       }
/*      */ 
/* 1891 */       i4 = j + 1;
/*      */     }
/*      */     else
/*      */     {
/* 1898 */       i4 = k + 1;
/*      */     }
/*      */ 
/* 1901 */     return _setLength(arrayOfByte, i4);
/*      */   }
/*      */ 
/*      */   public byte[] lnxinc(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 1913 */     int n = paramArrayOfByte.length;
/* 1914 */     byte[] arrayOfByte1 = new byte[22];
/*      */ 
/* 1917 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte1, 0, n);
/* 1918 */     int i = 0;
/*      */ 
/* 1921 */     int m = (byte)((arrayOfByte1[0] & 0xFFFFFF7F) - 65);
/*      */ 
/* 1924 */     if ((m >= 0) && (m <= 18))
/*      */     {
/* 1930 */       int j = (byte)(m + 1);
/* 1931 */       int k = (byte)(n - 1);
/*      */ 
/* 1935 */       if (j <= k)
/*      */       {
/* 1939 */         if (arrayOfByte1[j] < 100)
/*      */         {
/*      */           int tmp79_78 = j;
/*      */           byte[] tmp79_76 = arrayOfByte1; tmp79_76[tmp79_78] = (byte)(tmp79_76[tmp79_78] + 1);
/*      */         }
/*      */         else
/*      */         {
/* 1951 */           arrayOfByte1[i] = 0;
/*      */           do
/*      */           {
/* 1956 */             j = (byte)(j - 1);
/*      */           }
/* 1958 */           while (arrayOfByte1[j] == 100);
/*      */ 
/* 1961 */           if (j > i)
/*      */           {
/*      */             int tmp115_114 = j;
/*      */             byte[] tmp115_112 = arrayOfByte1; tmp115_112[tmp115_114] = (byte)(tmp115_112[tmp115_114] + 1);
/*      */           }
/*      */           else
/*      */           {
/* 1969 */             m++;
/* 1970 */             j = (byte)(j + 1);
/* 1971 */             arrayOfByte1[j] = 2;
/*      */           }
/*      */ 
/* 1975 */           arrayOfByte1[i] = (byte)(m + 128 + 64 + 1);
/*      */ 
/* 1978 */           n = j - i + 1;
/*      */         }
/*      */ 
/*      */       }
/*      */       else
/*      */       {
/* 1986 */         arrayOfByte1[j] = 2;
/*      */ 
/* 1989 */         j = (byte)(j - 1);
/* 1990 */         while (j > k)
/*      */         {
/* 1992 */           arrayOfByte1[j] = 1;
/* 1993 */           j = (byte)(j - 1);
/*      */         }
/*      */ 
/* 1997 */         n = m + 2;
/*      */       }
/*      */ 
/*      */     }
/*      */     else
/*      */     {
/* 2005 */       arrayOfByte1[0] = -63;
/* 2006 */       arrayOfByte1[1] = 2;
/*      */ 
/* 2009 */       n = 2;
/*      */     }
/*      */ 
/* 2013 */     byte[] arrayOfByte2 = new byte[n];
/* 2014 */     System.arraycopy(arrayOfByte1, 0, arrayOfByte2, 0, n);
/*      */ 
/* 2016 */     return arrayOfByte2;
/*      */   }
/*      */ 
/*      */   public byte[] lnxln(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 2036 */     if (lnxsgn(paramArrayOfByte) <= 0) return NUMBER._makeNegInf();
/*      */ 
/* 2039 */     if (NUMBER._isPosInf(paramArrayOfByte)) return NUMBER._makePosInf();
/*      */ 
/* 2042 */     byte[] arrayOfByte1 = new byte[paramArrayOfByte.length];
/* 2043 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte1, 0, paramArrayOfByte.length);
/*      */ 
/* 2048 */     int i = (arrayOfByte1[0] & 0xFF) - 193;
/* 2049 */     arrayOfByte1[0] = -63;
/* 2050 */     double d1 = lnxnur(arrayOfByte1);
/*      */ 
/* 2053 */     double d2 = Math.log(d1);
/* 2054 */     byte[] arrayOfByte2 = NUMBER.toBytes(d2);
/*      */ 
/* 2068 */     byte[] arrayOfByte3 = lnxexp(arrayOfByte2);
/* 2069 */     byte[] arrayOfByte4 = lnxdiv(arrayOfByte1, arrayOfByte3);
/* 2070 */     arrayOfByte4 = lnxsub(arrayOfByte4, lnxqone);
/*      */ 
/* 2074 */     byte[] arrayOfByte5 = new byte[arrayOfByte4.length];
/* 2075 */     System.arraycopy(arrayOfByte4, 0, arrayOfByte5, 0, arrayOfByte4.length);
/*      */ 
/* 2078 */     byte[] arrayOfByte6 = lnxmul(arrayOfByte4, arrayOfByte4);
/*      */ 
/* 2080 */     int j = 1;
/* 2081 */     while ((arrayOfByte6[0] & 0xFF) > 172)
/*      */     {
/* 2083 */       j++;
/* 2084 */       arrayOfByte3 = lnxqIDiv(arrayOfByte6, j);
/* 2085 */       arrayOfByte5 = lnxsub(arrayOfByte5, arrayOfByte3);
/* 2086 */       arrayOfByte6 = lnxmul(arrayOfByte4, arrayOfByte6);
/* 2087 */       j++;
/* 2088 */       arrayOfByte3 = lnxqIDiv(arrayOfByte6, j);
/* 2089 */       arrayOfByte5 = lnxadd(arrayOfByte5, arrayOfByte3);
/* 2090 */       arrayOfByte6 = lnxmul(arrayOfByte4, arrayOfByte6);
/*      */     }
/*      */ 
/* 2103 */     i *= 2;
/*      */ 
/* 2110 */     byte[] arrayOfByte7 = NUMBER.ln10().shareBytes();
/* 2111 */     arrayOfByte4 = lnxmin(i);
/* 2112 */     arrayOfByte3 = lnxmul(arrayOfByte4, arrayOfByte7);
/*      */ 
/* 2114 */     arrayOfByte3 = lnxadd(arrayOfByte3, arrayOfByte2);
/* 2115 */     return lnxadd(arrayOfByte3, arrayOfByte5);
/*      */   }
/*      */ 
/*      */   public byte[] lnxlog(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */     throws SQLException
/*      */   {
/* 2132 */     double d = NUMBER.toDouble(paramArrayOfByte2);
/*      */ 
/* 2136 */     if (d > 0.0D)
/*      */     {
/* 2142 */       if (d == 10.0D)
/*      */       {
/* 2145 */         arrayOfByte1 = lnxln(paramArrayOfByte1);
/* 2146 */         byte[] arrayOfByte3 = NUMBER.ln10().shareBytes();
/* 2147 */         return lnxdiv(arrayOfByte1, arrayOfByte3);
/*      */       }
/*      */ 
/* 2152 */       byte[] arrayOfByte1 = lnxln(paramArrayOfByte1);
/* 2153 */       byte[] arrayOfByte2 = lnxln(paramArrayOfByte2);
/* 2154 */       return lnxdiv(arrayOfByte1, arrayOfByte2);
/*      */     }
/*      */ 
/* 2160 */     return NUMBER._makeNegInf();
/*      */   }
/*      */ 
/*      */   public byte[] lnxmod(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */     throws SQLException
/*      */   {
/* 2174 */     byte[] arrayOfByte1 = lnxdiv(paramArrayOfByte1, paramArrayOfByte2);
/*      */ 
/* 2177 */     byte[] arrayOfByte2 = lnxtru(arrayOfByte1, 0);
/*      */ 
/* 2179 */     arrayOfByte1 = lnxmul(paramArrayOfByte2, arrayOfByte2);
/* 2180 */     byte[] arrayOfByte3 = lnxsub(paramArrayOfByte1, arrayOfByte1);
/* 2181 */     return arrayOfByte3;
/*      */   }
/*      */ 
/*      */   public byte[] lnxmul(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */     throws SQLException
/*      */   {
/* 2190 */     Object localObject1 = paramArrayOfByte1;
/* 2191 */     int i = localObject1.length;
/* 2192 */     Object localObject2 = paramArrayOfByte2;
/* 2193 */     int j = localObject2.length;
/* 2194 */     byte[] arrayOfByte1 = new byte[22];
/* 2195 */     int k = arrayOfByte1.length;
/*      */ 
/* 2202 */     int[] arrayOfInt1 = new int[10];
/*      */ 
/* 2208 */     int[] arrayOfInt2 = new int[10];
/*      */ 
/* 2212 */     int i9 = 0;
/*      */ 
/* 2214 */     byte[] arrayOfByte2 = new byte[41];
/* 2215 */     int i11 = 0;
/*      */ 
/* 2217 */     int i13 = 0;
/* 2218 */     int i14 = 0;
/*      */ 
/* 2223 */     int i1 = localObject1[0] >> 7 != 0 ? 1 : 0;
/* 2224 */     int i2 = localObject1[0];
/*      */ 
/* 2226 */     if (i1 == 0)
/*      */     {
/* 2228 */       i2 = (byte)(i2 ^ 0xFFFFFFFF);
/* 2229 */       if (localObject1[(i - 1)] == 102) i--;
/*      */ 
/*      */     }
/*      */ 
/* 2234 */     int i5 = localObject2[0] >> 7 != 0 ? 1 : 0;
/* 2235 */     int i6 = localObject2[0];
/*      */ 
/* 2237 */     if (i5 == 0)
/*      */     {
/* 2239 */       i6 = (byte)(i6 ^ 0xFFFFFFFF);
/* 2240 */       if (localObject2[(j - 1)] == 102) j--;
/*      */ 
/*      */     }
/*      */ 
/* 2246 */     if ((-i2 == 128) && (i == 1))
/*      */     {
/* 2250 */       arrayOfByte1 = NUMBER._makeZero();
/* 2251 */       return arrayOfByte1;
/*      */     }
/*      */ 
/* 2254 */     if ((-i6 == 128) && (j == 1))
/*      */     {
/* 2257 */       arrayOfByte1 = NUMBER._makeZero();
/* 2258 */       return arrayOfByte1;
/*      */     }
/*      */ 
/* 2263 */     if (((i2 & 0xFF) == 255) && ((i == 1) || (localObject1[1] == 101)))
/*      */     {
/* 2266 */       if (i1 == i5)
/*      */       {
/* 2268 */         arrayOfByte1 = NUMBER._makePosInf();
/*      */       }
/* 2270 */       else arrayOfByte1 = NUMBER._makeNegInf();
/*      */ 
/* 2272 */       return arrayOfByte1;
/*      */     }
/* 2274 */     if (((i6 & 0xFF) == 255) && ((j == 1) || (localObject2[1] == 101)))
/*      */     {
/* 2277 */       if (i1 == i5)
/*      */       {
/* 2279 */         arrayOfByte1 = NUMBER._makePosInf();
/*      */       }
/* 2281 */       else arrayOfByte1 = NUMBER._makeNegInf();
/*      */ 
/* 2284 */       return arrayOfByte1;
/*      */     }
/*      */ 
/* 2291 */     if (i > j)
/*      */     {
/* 2298 */       Object localObject3 = localObject1;
/* 2299 */       localObject1 = localObject2;
/* 2300 */       localObject2 = localObject3;
/*      */ 
/* 2303 */       int i16 = i;
/* 2304 */       i = j;
/* 2305 */       j = i16;
/*      */ 
/* 2308 */       int i17 = i1;
/* 2309 */       i1 = i5;
/* 2310 */       i5 = i17;
/*      */     }
/*      */ 
/* 2316 */     int i3 = i / 2 - 1;
/* 2317 */     int i4 = i3;
/* 2318 */     int m = i - 2;
/*      */ 
/* 2320 */     if (i1 != 0)
/*      */     {
/* 2323 */       if ((i & 0x1) == 0)
/*      */       {
/* 2325 */         arrayOfInt1[i4] = (localObject1[(m + 1)] * 100 - 100);
/* 2326 */         m--;
/* 2327 */         i4--;
/*      */       }
/*      */ 
/* 2330 */       while (m > 0)
/*      */       {
/* 2332 */         arrayOfInt1[i4] = (localObject1[m] * 100 + localObject1[(m + 1)] - 101);
/* 2333 */         m -= 2;
/* 2334 */         i4--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 2340 */     if ((i & 0x1) == 0)
/*      */     {
/* 2342 */       arrayOfInt1[i4] = (10100 - localObject1[(m + 1)] * 100);
/* 2343 */       m--;
/* 2344 */       i4--;
/*      */     }
/*      */ 
/* 2347 */     while (m > 0)
/*      */     {
/* 2349 */       arrayOfInt1[i4] = (10201 - (localObject1[m] * 100 + localObject1[(m + 1)]));
/* 2350 */       m -= 2;
/* 2351 */       i4--;
/*      */     }
/*      */ 
/* 2357 */     int i7 = j / 2 - 1;
/* 2358 */     int i8 = i7;
/* 2359 */     int n = j - 2;
/*      */ 
/* 2361 */     if (i5 != 0)
/*      */     {
/* 2364 */       if ((j & 0x1) == 0)
/*      */       {
/* 2366 */         arrayOfInt2[i8] = (localObject2[(n + 1)] * 100 - 100);
/* 2367 */         n--;
/* 2368 */         i8--;
/*      */       }
/*      */ 
/* 2371 */       while (n > 0)
/*      */       {
/* 2373 */         arrayOfInt2[i8] = (localObject2[n] * 100 + localObject2[(n + 1)] - 101);
/* 2374 */         n -= 2;
/* 2375 */         i8--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 2381 */     if ((j & 0x1) == 0)
/*      */     {
/* 2383 */       arrayOfInt2[i8] = (10100 - localObject2[(n + 1)] * 100);
/* 2384 */       n--;
/* 2385 */       i8--;
/*      */     }
/*      */ 
/* 2388 */     while (n > 0)
/*      */     {
/* 2390 */       arrayOfInt2[i8] = (10201 - (localObject2[n] * 100 + localObject2[(n + 1)]));
/* 2391 */       n -= 2;
/* 2392 */       i8--;
/*      */     }
/*      */     int i10;
/* 2398 */     if (arrayOfInt1[0] * arrayOfInt2[0] < 1000000)
/*      */     {
/* 2400 */       i9 = (short)((i2 & 0xFF) + (i6 & 0xFF) - 193);
/* 2401 */       i10 = (i & 0xFE) + (j & 0xFE);
/*      */     }
/*      */     else
/*      */     {
/* 2405 */       i9 = (short)((i2 & 0xFF) + (i6 & 0xFF) - 192);
/* 2406 */       i10 = (i & 0xFE) + (j & 0xFE) + 1;
/*      */     }
/*      */ 
/* 2411 */     i11 = 1;
/* 2412 */     int i12 = i10;
/*      */ 
/* 2416 */     if (i <= 3)
/*      */     {
/* 2422 */       i13 = arrayOfInt1[0] * arrayOfInt2[i7];
/*      */ 
/* 2424 */       i13 = LnxmulSetDigit1(arrayOfByte2, i12, i13); i12 -= 2;
/*      */ 
/* 2427 */       i8 = i7 - 1;
/*      */ 
/* 2429 */       while (i8 >= 0)
/*      */       {
/* 2432 */         i13 += arrayOfInt1[0] * arrayOfInt2[i8];
/* 2433 */         i13 = LnxmulSetDigit1(arrayOfByte2, i12, i13); i12 -= 2;
/*      */ 
/* 2435 */         i8--;
/*      */       }
/*      */ 
/* 2439 */       LnxmulSetDigit2(arrayOfByte2, i12, i13); i12 -= 2;
/*      */     }
/*      */     else
/*      */     {
/* 2449 */       i13 += arrayOfInt1[i3] * arrayOfInt2[i7];
/*      */ 
/* 2451 */       i13 = LnxmulSetDigit1(arrayOfByte2, i12, i13); i12 -= 2;
/*      */ 
/* 2455 */       i8 = i7 - 1;
/*      */ 
/* 2457 */       while (i8 > i7 - (i / 2 - 1))
/*      */       {
/* 2460 */         switch (i7 - i8 + 1) {
/*      */         case 9:
/* 2462 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 8, i13);
/*      */         case 8:
/* 2463 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 7, i13);
/*      */         case 7:
/* 2464 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 6, i13);
/*      */         case 6:
/* 2465 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 5, i13);
/*      */         case 5:
/* 2466 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 4, i13);
/*      */         case 4:
/* 2467 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 3, i13);
/*      */         case 3:
/* 2468 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 2, i13);
/*      */         case 2:
/* 2469 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 1, i13);
/* 2470 */         }i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 0, i13);
/*      */ 
/* 2474 */         i13 = LnxmulSetDigit1(arrayOfByte2, i12, i13); i12 -= 2;
/*      */ 
/* 2476 */         i8--;
/*      */       }
/*      */ 
/*      */       do
/*      */       {
/* 2482 */         switch (i / 2)
/*      */         {
/*      */         case 10:
/* 2485 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 9, i13);
/*      */         case 9:
/* 2486 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 8, i13);
/*      */         case 8:
/* 2487 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 7, i13);
/*      */         case 7:
/* 2488 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 6, i13);
/*      */         case 6:
/* 2489 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 5, i13);
/*      */         case 5:
/* 2490 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 4, i13);
/*      */         case 4:
/* 2491 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 3, i13);
/*      */         case 3:
/* 2492 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 2, i13);
/*      */         case 2:
/* 2493 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 1, i13);
/* 2494 */         }i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i3, i8, 0, i13);
/*      */ 
/* 2498 */         i13 = LnxmulSetDigit1(arrayOfByte2, i12, i13); i12 -= 2;
/*      */ 
/* 2501 */         i8--;
/*      */       }
/*      */ 
/* 2504 */       while (i8 >= 0);
/*      */ 
/* 2508 */       i4 = i3 - 1;
/*      */ 
/* 2510 */       while (i4 > 0)
/*      */       {
/* 2514 */         switch (i4 + 1) {
/*      */         case 9:
/* 2516 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 8, i13);
/*      */         case 8:
/* 2517 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 7, i13);
/*      */         case 7:
/* 2518 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 6, i13);
/*      */         case 6:
/* 2519 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 5, i13);
/*      */         case 5:
/* 2520 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 4, i13);
/*      */         case 4:
/* 2521 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 3, i13);
/*      */         case 3:
/* 2522 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 2, i13);
/*      */         case 2:
/* 2523 */           i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 1, i13);
/* 2524 */         }i13 = LnxmulSetSum(arrayOfInt1, arrayOfInt2, i4, 0, 0, i13);
/*      */ 
/* 2528 */         i13 = LnxmulSetDigit1(arrayOfByte2, i12, i13); i12 -= 2;
/*      */ 
/* 2530 */         i4--;
/*      */       }
/*      */ 
/* 2535 */       i13 += arrayOfInt1[0] * arrayOfInt2[0];
/*      */ 
/* 2537 */       i13 = LnxmulSetDigit1(arrayOfByte2, i12, i13); i12 -= 2;
/*      */ 
/* 2541 */       LnxmulSetDigit2(arrayOfByte2, i12, i13); i12 -= 2;
/*      */     }
/*      */ 
/* 2547 */     if (((i10 & 0x1) == 0) && (arrayOfByte2[i12] != 1))
/*      */     {
/* 2549 */       i9 = (short)(i9 + 1);
/* 2550 */       i10++;
/* 2551 */       i11--;
/*      */     }
/*      */ 
/* 2556 */     while (arrayOfByte2[(i11 + i10 - 2)] == 1)
/*      */     {
/* 2558 */       i10--;
/*      */     }
/*      */ 
/* 2563 */     if (i10 > 21)
/*      */     {
/* 2566 */       i12 = i11 + 19;
/* 2567 */       i10 = 21;
/*      */ 
/* 2570 */       if (arrayOfByte2[(i12 + 1)] > 50)
/*      */       {
/* 2573 */         while (arrayOfByte2[i12] == 100)
/*      */         {
/* 2575 */           i12--;
/* 2576 */           i10--;
/*      */         }
/*      */ 
/* 2579 */         if (i12 < i11)
/*      */         {
/* 2581 */           arrayOfByte2[i11] = 2;
/* 2582 */           i9 = (short)(i9 + 1);
/* 2583 */           i10++;
/*      */         }
/*      */         int tmp1772_1770 = i12;
/*      */         byte[] tmp1772_1768 = arrayOfByte2; tmp1772_1768[tmp1772_1770] = (byte)(tmp1772_1768[tmp1772_1770] + 1);
/*      */       }
/*      */       else
/*      */       {
/* 2592 */         while (arrayOfByte2[(i11 + i10 - 2)] == 1)
/*      */         {
/* 2594 */           i10--;
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 2601 */     if ((i9 & 0xFFFF) > 255)
/*      */     {
/* 2604 */       if (i1 == i5)
/*      */       {
/* 2606 */         return NUMBER._makePosInf();
/*      */       }
/*      */ 
/* 2610 */       return NUMBER._makeNegInf();
/*      */     }
/*      */ 
/* 2613 */     if ((i9 & 0xFFFF) < 128)
/*      */     {
/* 2617 */       return NUMBER._makeZero();
/*      */     }
/*      */     int i15;
/* 2622 */     if (i1 != i5)
/*      */     {
/* 2624 */       i10++;
/* 2625 */       arrayOfByte1 = new byte[i10];
/* 2626 */       arrayOfByte1[0] = (byte)(i9 ^ 0xFFFFFFFF);
/* 2627 */       for (i15 = 0; i15 < i10 - 1; i15++)
/*      */       {
/* 2629 */         arrayOfByte1[(i15 + 1)] = (byte)(102 - arrayOfByte2[(i11 + i15)]);
/*      */       }
/* 2631 */       arrayOfByte1[(i10 - 1)] = 102;
/*      */     } else {
/* 2633 */       arrayOfByte1 = new byte[i10];
/* 2634 */       arrayOfByte1[0] = (byte)i9;
/* 2635 */       for (i15 = 0; i15 < i10 - 1; i15++)
/*      */       {
/* 2637 */         arrayOfByte1[(i15 + 1)] = arrayOfByte2[(i11 + i15)];
/*      */       }
/*      */     }
/*      */ 
/* 2641 */     return (B)(B)arrayOfByte1;
/*      */   }
/*      */ 
/*      */   private static int LnxmulSetSum(int[] paramArrayOfInt1, int[] paramArrayOfInt2, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
/*      */   {
/* 2647 */     return paramInt4 + paramArrayOfInt1[(paramInt1 - paramInt3)] * paramArrayOfInt2[(paramInt2 + paramInt3)];
/*      */   }
/*      */ 
/*      */   private static int LnxmulSetDigit1(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
/*      */   {
/* 2652 */     int i = paramInt2 / 100;
/* 2653 */     int j = paramInt2 / 10000;
/* 2654 */     paramInt1 -= 2;
/* 2655 */     paramArrayOfByte[(paramInt1 + 1)] = (byte)(paramInt2 - i * 100 + 1);
/* 2656 */     paramArrayOfByte[paramInt1] = (byte)(i - j * 100 + 1);
/* 2657 */     return j;
/*      */   }
/*      */ 
/*      */   private static void LnxmulSetDigit2(byte[] paramArrayOfByte, int paramInt1, int paramInt2) {
/* 2661 */     int i = paramInt2 / 100;
/* 2662 */     paramInt1 -= 2;
/* 2663 */     paramArrayOfByte[paramInt1] = (byte)(i + 1);
/* 2664 */     paramArrayOfByte[(paramInt1 + 1)] = (byte)(paramInt2 - i * 100 + 1);
/*      */   }
/*      */ 
/*      */   public byte[] lnxneg(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 2672 */     if (NUMBER._isZero(paramArrayOfByte))
/*      */     {
/* 2674 */       return NUMBER._makeZero();
/*      */     }
/* 2676 */     if (NUMBER._isPosInf(paramArrayOfByte))
/*      */     {
/* 2678 */       return NUMBER._makeNegInf();
/*      */     }
/* 2680 */     if (NUMBER._isNegInf(paramArrayOfByte))
/*      */     {
/* 2682 */       return NUMBER._makePosInf();
/*      */     }
/*      */ 
/* 2686 */     int i = paramArrayOfByte.length;
/* 2687 */     if ((!NUMBER._isPositive(paramArrayOfByte)) && (paramArrayOfByte[(i - 1)] == 102)) {
/* 2688 */       i--;
/*      */     }
/* 2690 */     byte[] arrayOfByte = new byte[i];
/*      */ 
/* 2692 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte, 0, i);
/*      */ 
/* 2694 */     _negateNumber(arrayOfByte);
/*      */ 
/* 2696 */     return _setLength(arrayOfByte, i);
/*      */   }
/*      */ 
/*      */   public byte[] lnxpow(byte[] paramArrayOfByte, int paramInt)
/*      */     throws SQLException
/*      */   {
/*      */     byte[] arrayOfByte1;
/* 2714 */     if (paramInt >= 0)
/*      */     {
/* 2717 */       arrayOfByte1 = new byte[paramArrayOfByte.length];
/* 2718 */       System.arraycopy(paramArrayOfByte, 0, arrayOfByte1, 0, paramArrayOfByte.length);
/*      */     }
/*      */     else
/*      */     {
/* 2722 */       int i = -2147483648;
/*      */ 
/* 2725 */       if (paramInt == i)
/*      */       {
/* 2727 */         arrayOfByte1 = lnxpow(paramArrayOfByte, i + 1);
/* 2728 */         return lnxdiv(arrayOfByte1, paramArrayOfByte);
/*      */       }
/*      */ 
/* 2732 */       paramInt = -paramInt;
/*      */ 
/* 2735 */       arrayOfByte1 = lnxdiv(lnxqone, paramArrayOfByte);
/*      */     }
/*      */ 
/* 2739 */     byte[] arrayOfByte2 = lnxqone;
/*      */ 
/* 2742 */     while (paramInt > 0)
/*      */     {
/* 2745 */       if ((paramInt & 0x1) == 1)
/*      */       {
/* 2748 */         arrayOfByte2 = lnxmul(arrayOfByte2, arrayOfByte1);
/*      */       }
/*      */ 
/* 2751 */       if (paramInt >>= 1 <= 0) {
/*      */         continue;
/*      */       }
/* 2754 */       arrayOfByte1 = lnxmul(arrayOfByte1, arrayOfByte1);
/*      */     }
/*      */ 
/* 2758 */     return arrayOfByte2;
/*      */   }
/*      */ 
/*      */   public byte[] lnxrou(byte[] paramArrayOfByte, int paramInt)
/*      */     throws SQLException
/*      */   {
/* 2766 */     int i = paramArrayOfByte.length;
/* 2767 */     int j = 0;
/*      */ 
/* 2781 */     if (i == 1)
/*      */     {
/* 2783 */       if (paramArrayOfByte[j] == -128) {
/* 2784 */         return NUMBER._makeZero();
/*      */       }
/* 2786 */       return NUMBER._makeNegInf();
/*      */     }
/*      */ 
/* 2790 */     if (i == 2)
/*      */     {
/* 2792 */       if ((paramArrayOfByte[0] == -1) && (paramArrayOfByte[1] == 101))
/*      */       {
/* 2794 */         return NUMBER._makePosInf();
/*      */       }
/*      */     }
/* 2797 */     int i6 = paramArrayOfByte[0] < 0 ? 256 + paramArrayOfByte[0] : paramArrayOfByte[0];
/*      */     boolean bool;
/*      */     int i2;
/*      */     int i3;
/*      */     int m;
/*      */     int n;
/*      */     int i1;
/* 2800 */     if ((bool = NUMBER._isPositive(paramArrayOfByte)))
/*      */     {
/* 2802 */       if (paramInt >= 0)
/*      */       {
/* 2804 */         i2 = i6 + (paramInt + 1 >> 1) - 192;
/*      */ 
/* 2806 */         i3 = (paramInt & 0x1) == 0 ? 0 : 1;
/*      */       }
/*      */       else
/*      */       {
/* 2810 */         paramInt = -paramInt;
/* 2811 */         i2 = i6 - (paramInt >> 1) - 192;
/*      */ 
/* 2813 */         i3 = (paramInt & 0x1) == 0 ? 0 : 1;
/*      */       }
/* 2815 */       m = 1;
/* 2816 */       n = 100;
/* 2817 */       i1 = 1;
/*      */     }
/*      */     else
/*      */     {
/* 2821 */       if (paramInt >= 0)
/*      */       {
/* 2823 */         i2 = 63 + (paramInt + 1 >> 1) - i6;
/*      */ 
/* 2825 */         i3 = (paramInt & 0x1) == 0 ? 0 : 1;
/*      */       }
/*      */       else
/*      */       {
/* 2829 */         paramInt = -paramInt;
/* 2830 */         i2 = 63 - (paramInt >> 1) - i6;
/*      */ 
/* 2832 */         i3 = (paramInt & 0x1) == 0 ? 0 : 1;
/*      */       }
/* 2834 */       m = 101;
/* 2835 */       n = 2;
/* 2836 */       i1 = -1;
/*      */ 
/* 2839 */       i -= (paramArrayOfByte[(i - 1)] == 102 ? 1 : 0);
/*      */     }
/*      */ 
/* 2843 */     byte[] arrayOfByte = new byte[i];
/* 2844 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte, 0, i);
/*      */ 
/* 2848 */     if ((i2 > i - 1) || ((i2 == i - 1) && ((i3 == 0) || (LnxqFirstDigit[paramArrayOfByte[i2]] == 1))))
/*      */     {
/* 2852 */       return _setLength(paramArrayOfByte, i);
/*      */     }
/*      */ 
/* 2858 */     if ((i2 >= 0) && ((i2 != 0) || ((i3 == 0) && (bool ? paramArrayOfByte[1] >= 51 : paramArrayOfByte[1] <= 51)))) {
/* 2858 */       if ((i2 != 1) || (i3 == 0) || (bool ? paramArrayOfByte[1] >= 6 : paramArrayOfByte[1] <= 96));
/*      */     }
/*      */     else {
/* 2863 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 2868 */     if (i2 == 0)
/*      */     {
/* 2871 */       if (bool ? paramArrayOfByte[j] == -1 : paramArrayOfByte[j] == 0)
/*      */       {
/* 2873 */         if (bool) {
/* 2874 */           return NUMBER._makePosInf();
/*      */         }
/* 2876 */         return NUMBER._makeNegInf();
/*      */       }
/*      */ 
/* 2881 */       arrayOfByte[0] = (byte)(paramArrayOfByte[j] + i1);
/* 2882 */       arrayOfByte[1] = (byte)(m + i1);
/*      */ 
/* 2884 */       return _setLength(arrayOfByte, 2);
/*      */     }
/*      */     int i4;
/* 2889 */     int k = i4 = (byte)i2;
/*      */ 
/* 2891 */     if (i3 != 0)
/*      */     {
/* 2894 */       arrayOfByte[i4] = (bool ? LnxqRound_P[paramArrayOfByte[k]] : LnxqRound_N[paramArrayOfByte[k]]);
/*      */     }
/* 2900 */     else if (bool ? paramArrayOfByte[(k + 1)] > 50 : paramArrayOfByte[(k + 1)] < 52)
/*      */     {
/* 2903 */       arrayOfByte[i4] = (byte)(paramArrayOfByte[k] + i1);
/*      */     }
/*      */     else
/*      */     {
/* 2908 */       arrayOfByte[i4] = paramArrayOfByte[k];
/*      */     }
/*      */ 
/* 2914 */     k = (byte)(k - 1);
/*      */     int i5;
/* 2918 */     if (arrayOfByte[i4] == n + i1)
/*      */     {
/* 2923 */       while ((k > j) && (paramArrayOfByte[k] == n)) {
/* 2924 */         k = (byte)(k - 1);
/*      */       }
/*      */ 
/* 2927 */       if (k == j)
/*      */       {
/* 2930 */         if (bool ? paramArrayOfByte[j] == -1 : paramArrayOfByte[j] == 0)
/*      */         {
/* 2933 */           if (bool) {
/* 2934 */             return NUMBER._makePosInf();
/*      */           }
/* 2936 */           return NUMBER._makeNegInf();
/*      */         }
/*      */ 
/* 2941 */         arrayOfByte[0] = (byte)(paramArrayOfByte[j] + i1);
/* 2942 */         arrayOfByte[1] = (byte)(m + i1);
/*      */ 
/* 2944 */         return _setLength(arrayOfByte, 2);
/*      */       }
/*      */ 
/* 2948 */       arrayOfByte[(k - j)] = (byte)(paramArrayOfByte[k] + i1);
/*      */ 
/* 2951 */       i5 = k - j + 1;
/*      */ 
/* 2954 */       k = (byte)(k - 1);
/*      */     }
/* 2956 */     else if (arrayOfByte[i4] == m)
/*      */     {
/* 2961 */       while (paramArrayOfByte[k] == m) {
/* 2962 */         k = (byte)(k - 1);
/*      */       }
/*      */ 
/* 2965 */       i5 = k - j + 1;
/*      */     }
/*      */     else
/*      */     {
/* 2972 */       i5 = i2 + 1;
/*      */     }
/*      */ 
/* 2976 */     return _setLength(arrayOfByte, i5);
/*      */   }
/*      */ 
/*      */   public byte[] lnxsca(byte[] paramArrayOfByte, int paramInt1, int paramInt2, boolean[] paramArrayOfBoolean)
/*      */     throws SQLException
/*      */   {
/* 2988 */     int m = paramArrayOfByte.length;
/*      */ 
/* 2990 */     if (m != 1)
/*      */     {
/*      */       int i;
/*      */       int j;
/*      */       int k;
/* 2995 */       if (NUMBER._isPositive(paramArrayOfByte))
/*      */       {
/* 2997 */         i = (byte)((paramArrayOfByte[0] & 0xFFFFFF7F) - 65);
/* 2998 */         j = paramArrayOfByte[1];
/* 2999 */         k = paramArrayOfByte[(m - 1)];
/*      */       }
/*      */       else
/*      */       {
/* 3003 */         m--;
/* 3004 */         i = (byte)(((paramArrayOfByte[0] ^ 0xFFFFFFFF) & 0xFFFFFF7F) - 65);
/* 3005 */         j = LnxqNegate[paramArrayOfByte[1]];
/* 3006 */         k = LnxqNegate[paramArrayOfByte[(m - 1)]];
/*      */       }
/*      */ 
/* 3010 */       if (2 * (m - i) - (k % 10 == 1 ? 1 : 0) > paramInt2)
/*      */       {
/* 3013 */         byte[] arrayOfByte1 = lnxrou(paramArrayOfByte, paramInt2);
/*      */ 
/* 3015 */         if (NUMBER._isPositive(arrayOfByte1))
/*      */         {
/* 3017 */           i = (byte)((arrayOfByte1[0] & 0xFFFFFF7F) - 65);
/* 3018 */           j = arrayOfByte1.length != 1 ? arrayOfByte1[1] : 1;
/*      */         }
/*      */         else
/*      */         {
/* 3022 */           i = (byte)(((arrayOfByte1[0] ^ 0xFFFFFFFF) & 0xFFFFFF7F) - 65);
/* 3023 */           j = LnxqNegate[arrayOfByte1[1]];
/*      */         }
/*      */ 
/* 3027 */         paramArrayOfBoolean[0] = (2 * (i + 1) - (j < 11 ? 1 : 0) > paramInt1 ? 1 : false);
/*      */ 
/* 3029 */         return arrayOfByte1;
/*      */       }
/*      */ 
/* 3034 */       int n = paramArrayOfByte.length;
/*      */ 
/* 3036 */       byte[] arrayOfByte2 = new byte[n];
/* 3037 */       System.arraycopy(paramArrayOfByte, 0, arrayOfByte2, 0, n);
/*      */ 
/* 3040 */       paramArrayOfBoolean[0] = (2 * (i + 1) - (j < 11 ? 1 : 0) > paramInt1 ? 1 : false);
/*      */ 
/* 3042 */       return arrayOfByte2;
/*      */     }
/*      */ 
/* 3050 */     paramArrayOfBoolean[0] = false;
/* 3051 */     return NUMBER._makeZero();
/*      */   }
/*      */ 
/*      */   public byte[] lnxshift(byte[] paramArrayOfByte, int paramInt)
/*      */     throws SQLException
/*      */   {
/* 3061 */     byte[] arrayOfByte1 = paramArrayOfByte;
/* 3062 */     int i = arrayOfByte1.length;
/*      */ 
/* 3067 */     byte[] arrayOfByte3 = new byte[22];
/* 3068 */     int j = arrayOfByte3.length;
/*      */ 
/* 3071 */     int k = 0;
/*      */ 
/* 3078 */     byte[] arrayOfByte6 = new byte[22];
/*      */ 
/* 3085 */     int i4 = 0;
/*      */ 
/* 3090 */     if (i == 1) i5 = 0; else i5 = 1;
/* 3091 */     if ((((arrayOfByte1[0] & 0xFF) == 128) && (i == 1)) || ((i == 2) && ((arrayOfByte1[0] & 0xFF) == 255) && (arrayOfByte1[i5] == 101)) || ((i == 1) && (arrayOfByte1[0] == 0)))
/*      */     {
/* 3100 */       arrayOfByte2 = new byte[i];
/* 3101 */       for (i5 = 0; i5 < i; i5++) arrayOfByte2[i5] = arrayOfByte1[i5];
/* 3102 */       return arrayOfByte2;
/*      */     }
/*      */ 
/* 3105 */     int m = arrayOfByte1[0] >> 7 == 0 ? 1 : 0;
/*      */ 
/* 3109 */     int i1 = m != 0 ? 255 - arrayOfByte1[0] & 0xFF : arrayOfByte1[0] & 0xFF;
/* 3110 */     int i2 = i;
/*      */ 
/* 3113 */     if ((paramInt & 0x1) > 0)
/*      */     {
/*      */       byte[][] arrayOfByte4;
/*      */       byte[][] arrayOfByte5;
/*      */       int i3;
/* 3119 */       if (m != 0)
/*      */       {
/* 3121 */         if (arrayOfByte1[(i2 - 1)] == 102) i2--;
/* 3122 */         arrayOfByte4 = LnxqComponents_N;
/* 3123 */         arrayOfByte5 = LnxqDigit_N;
/* 3124 */         i3 = 101;
/*      */       }
/*      */       else
/*      */       {
/* 3128 */         arrayOfByte4 = LnxqComponents_P;
/* 3129 */         arrayOfByte5 = LnxqDigit_P;
/* 3130 */         i3 = 1;
/*      */       }
/*      */ 
/* 3135 */       if (arrayOfByte4[arrayOfByte1[1]][0] != 0)
/*      */       {
/* 3141 */         i1 = paramInt >= 0 ? i1 + (paramInt / 2 + 1) : i1 - -paramInt / 2;
/*      */ 
/* 3144 */         k = i2 - 2;
/* 3145 */         i4 = i2 - 1;
/*      */         int n;
/* 3148 */         if (i2 > 20)
/*      */         {
/* 3150 */           n = arrayOfByte4[arrayOfByte1[(k + 1)]][1] >= 5 ? 1 : 0;
/*      */         }
/*      */         else
/*      */         {
/* 3154 */           arrayOfByte3[(i4 + 1)] = arrayOfByte5[arrayOfByte4[arrayOfByte1[(k + 1)]][1]][0];
/* 3155 */           i2++;
/* 3156 */           n = 0;
/*      */         }
/*      */ 
/* 3160 */         while (k > 0)
/*      */         {
/* 3162 */           arrayOfByte3[i4] = arrayOfByte5[arrayOfByte4[arrayOfByte1[(k + 0)]][1]][arrayOfByte4[arrayOfByte1[(k + 1)]][0]];
/* 3163 */           k--;
/* 3164 */           i4--;
/*      */         }
/*      */ 
/* 3169 */         arrayOfByte3[1] = arrayOfByte5[0][arrayOfByte4[arrayOfByte1[(k + 1)]][0]];
/*      */ 
/* 3172 */         if (n != 0)
/*      */         {
/* 3175 */           int i6 = m != 0 ? 2 : 100;
/* 3176 */           int i7 = m != 0 ? -1 : 1;
/*      */ 
/* 3178 */           i4 = 20;
/* 3179 */           while (arrayOfByte3[i4] == i6)
/*      */           {
/* 3181 */             i4--;
/* 3182 */             i2--;
/*      */           }
/*      */           int tmp470_468 = i4;
/*      */           byte[] tmp470_466 = arrayOfByte3; tmp470_466[tmp470_468] = (byte)(tmp470_466[tmp470_468] + i7);
/*      */         }
/*      */ 
/*      */       }
/*      */       else
/*      */       {
/* 3196 */         i1 = paramInt >= 0 ? i1 + paramInt / 2 : i1 - (-paramInt / 2 + 1);
/*      */ 
/* 3199 */         k = 1;
/* 3200 */         i4 = 1;
/*      */ 
/* 3203 */         while (i4 < i2 - 1)
/*      */         {
/* 3205 */           arrayOfByte3[i4] = arrayOfByte5[arrayOfByte4[arrayOfByte1[(k + 0)]][1]][arrayOfByte4[arrayOfByte1[(k + 1)]][0]];
/* 3206 */           k++;
/* 3207 */           i4++;
/*      */         }
/*      */ 
/* 3212 */         arrayOfByte3[i4] = arrayOfByte5[arrayOfByte4[arrayOfByte1[(k + 0)]][1]][0];
/*      */       }
/*      */ 
/* 3218 */       while (arrayOfByte3[(i2 - 1)] == i3)
/*      */       {
/* 3220 */         i2--;
/*      */       }
/*      */ 
/* 3225 */       if (m != 0)
/*      */       {
/* 3227 */         i2++;
/* 3228 */         arrayOfByte3[(i2 - 1)] = 102;
/*      */       }
/*      */ 
/*      */     }
/*      */     else
/*      */     {
/* 3238 */       i1 = paramInt >= 0 ? i1 + paramInt / 2 : i1 - -paramInt / 2;
/*      */ 
/* 3241 */       for (i5 = 1; i5 < i2; i5++)
/*      */       {
/* 3243 */         arrayOfByte3[i5] = arrayOfByte1[i5];
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 3249 */     if (i1 > 255)
/*      */     {
/* 3252 */       if (m != 0)
/*      */       {
/* 3254 */         arrayOfByte2 = new byte[1];
/* 3255 */         arrayOfByte2[0] = 0;
/*      */       } else {
/* 3257 */         arrayOfByte2 = new byte[2];
/* 3258 */         arrayOfByte2[0] = -1; arrayOfByte2[1] = 101;
/*      */       }
/* 3260 */       return arrayOfByte2;
/*      */     }
/* 3262 */     if (i1 < 128)
/*      */     {
/* 3265 */       arrayOfByte2 = new byte[1];
/* 3266 */       arrayOfByte2[0] = -128;
/* 3267 */       return arrayOfByte2;
/*      */     }
/*      */ 
/* 3273 */     arrayOfByte3[0] = (m != 0 ? (byte)(255 - i1) : (byte)i1);
/* 3274 */     byte[] arrayOfByte2 = new byte[i2];
/* 3275 */     for (int i5 = 0; i5 < i2; i5++)
/*      */     {
/* 3277 */       arrayOfByte2[i5] = arrayOfByte3[i5];
/*      */     }
/* 3279 */     return arrayOfByte2;
/*      */   }
/*      */ 
/*      */   public byte[] lnxsin(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 3291 */     return lnxqtra(paramArrayOfByte, 4);
/*      */   }
/*      */ 
/*      */   public byte[] lnxsnh(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 3303 */     return lnxqtra(paramArrayOfByte, 7);
/*      */   }
/*      */ 
/*      */   public byte[] lnxsqr(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 3310 */     int i = paramArrayOfByte.length;
/* 3311 */     int[] arrayOfInt1 = new int[29];
/* 3312 */     int[] arrayOfInt2 = new int[29];
/*      */ 
/* 3335 */     if (!NUMBER._isPositive(paramArrayOfByte)) {
/* 3336 */       return NUMBER._makeNegInf();
/*      */     }
/*      */ 
/* 3339 */     if (NUMBER._isPosInf(paramArrayOfByte)) {
/* 3340 */       return NUMBER._makePosInf();
/*      */     }
/*      */ 
/* 3343 */     if (NUMBER._isZero(paramArrayOfByte)) {
/* 3344 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 3347 */     int i9 = (paramArrayOfByte[0] & 0xFF) - 193;
/*      */ 
/* 3354 */     for (int i10 = 1; i10 < i; i10++) {
/* 3355 */       paramArrayOfByte[i10] -= 1;
/*      */     }
/*      */ 
/* 3358 */     int i5 = 1;
/* 3359 */     int i6 = i5 + 20 + 3;
/*      */     int k;
/* 3364 */     if ((i9 + 128 & 0x1) != 0)
/*      */     {
/* 3366 */       k = ((arrayOfInt1[i5] * 100 + arrayOfInt1[(i5 + 1)]) * 100 + arrayOfInt1[(i5 + 2)]) * 100 + arrayOfInt1[(i5 + 3)];
/*      */ 
/* 3368 */       i5 += 3;
/*      */     }
/*      */     else
/*      */     {
/* 3372 */       k = (arrayOfInt1[i5] * 100 + arrayOfInt1[(i5 + 1)]) * 100 + arrayOfInt1[(i5 + 2)];
/*      */ 
/* 3374 */       i5 += 2;
/*      */     }
/*      */ 
/* 3379 */     int j = (int)(Math.sqrt(k) * 100.0D);
/*      */ 
/* 3382 */     arrayOfInt2[1] = (j / 10000);
/* 3383 */     arrayOfInt2[2] = (j / 100 % 100);
/* 3384 */     arrayOfInt2[3] = (j % 100);
/*      */ 
/* 3388 */     k -= arrayOfInt2[1] * j;
/* 3389 */     int m = m * 100 + arrayOfInt1[(i5 + 1)];
/* 3390 */     m -= arrayOfInt2[2] * j;
/* 3391 */     m = m * 100 + arrayOfInt1[(i5 + 2)];
/* 3392 */     m -= arrayOfInt2[3] * j;
/*      */ 
/* 3394 */     i5 += 3;
/*      */ 
/* 3397 */     j *= 2;
/*      */ 
/* 3400 */     int i1 = 3;
/* 3401 */     int i2 = i1 + 1;
/*      */ 
/* 3403 */     while (i5 < i6)
/*      */     {
/* 3406 */       m = m * 100 + arrayOfInt1[i5];
/*      */ 
/* 3409 */       int n = m / j;
/*      */ 
/* 3412 */       m -= n * j;
/*      */ 
/* 3415 */       arrayOfInt2[i2] = n;
/*      */ 
/* 3418 */       i3 = i1 + (i6 - i5) < i2 ? i1 + (i6 - i5) : i2;
/*      */       int i7;
/* 3422 */       if (n != 0)
/*      */       {
/* 3425 */         i7 = i5 + 1;
/* 3426 */         int i8 = i1 + 1;
/* 3427 */         while (i8 < i3)
/*      */         {
/* 3429 */           arrayOfInt1[i7] -= 2 * n * arrayOfInt2[i8];
/* 3430 */           i7++;
/* 3431 */           i8++;
/*      */         }
/* 3433 */         if (i7 < i6)
/* 3434 */           arrayOfInt1[i7] -= n * n;
/*      */       }
/* 3436 */       else if (m == 0)
/*      */       {
/* 3439 */         i7 = i5 + 1;
/* 3440 */         while ((i7 < i6) && (arrayOfInt1[i7] == 0)) {
/* 3441 */           i7++;
/*      */         }
/* 3443 */         if (i7 == i6)
/*      */           break;
/*      */       }
/* 3446 */       i5++;
/* 3447 */       i2++;
/*      */     }
/*      */ 
/* 3451 */     int i3 = i2;
/* 3452 */     i2--;
/*      */ 
/* 3455 */     arrayOfInt2[0] = 0;
/*      */ 
/* 3457 */     while (i2 > 0)
/*      */     {
/* 3459 */       while (arrayOfInt2[i2] > 99)
/*      */       {
/* 3461 */         arrayOfInt2[i2] -= 100;
/* 3462 */         arrayOfInt2[(i2 - 1)] += 1;
/*      */       }
/* 3464 */       while (arrayOfInt2[i2] < 0)
/*      */       {
/* 3466 */         arrayOfInt2[i2] += 100;
/* 3467 */         arrayOfInt2[(i2 - 1)] -= 1;
/*      */       }
/* 3469 */       i2--;
/*      */     }
/*      */ 
/* 3475 */     i9 = (i9 - (i9 + 128 & 0x1)) / 2 + 1;
/*      */ 
/* 3478 */     while (arrayOfInt2[i2] == 0)
/*      */     {
/* 3480 */       i2++;
/* 3481 */       i9--;
/* 3482 */       if (i9 < -65) {
/* 3483 */         return NUMBER._makeZero();
/*      */       }
/*      */     }
/*      */ 
/*      */     do
/*      */     {
/* 3489 */       i3--;
/*      */     }
/* 3491 */     while (arrayOfInt2[i3] == 0);
/*      */ 
/* 3494 */     int i4 = i3 - i2 + 2;
/* 3495 */     if (i4 > 21)
/*      */     {
/* 3504 */       i3 = i2 + 20;
/* 3505 */       if (arrayOfInt2[i3] >= 50)
/*      */       {
/*      */         do
/*      */         {
/* 3510 */           i3--;
/*      */         }
/* 3512 */         while (arrayOfInt2[i3] == 99);
/* 3513 */         arrayOfInt2[i3] += 1;
/*      */       }
/*      */       else
/*      */       {
/*      */         do
/*      */         {
/* 3520 */           i3--;
/*      */         }
/* 3522 */         while (arrayOfInt2[i3] == 0);
/*      */       }
/*      */ 
/* 3526 */       if (i3 < i2)
/*      */       {
/* 3528 */         i2 = i3;
/* 3529 */         i9++;
/* 3530 */         if (i9 > 62) {
/* 3531 */           return NUMBER._makePosInf();
/*      */         }
/*      */       }
/* 3534 */       i4 = i3 - i2 + 2;
/*      */     }
/*      */ 
/* 3538 */     byte[] arrayOfByte = new byte[i4];
/*      */ 
/* 3541 */     arrayOfByte[0] = (byte)(i9 - 63);
/*      */ 
/* 3545 */     for (i10 = i2; i10 <= i3; i10++) {
/* 3546 */       arrayOfByte[(i10 - (i2 - 1))] = (byte)(arrayOfInt2[i10] + 1);
/*      */     }
/*      */ 
/* 3549 */     return arrayOfByte;
/*      */   }
/*      */ 
/*      */   public byte[] lnxsub(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */     throws SQLException
/*      */   {
/* 3560 */     return lnxadd(paramArrayOfByte1, lnxneg(paramArrayOfByte2));
/*      */   }
/*      */ 
/*      */   public byte[] lnxtan(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 3572 */     return lnxqtra(paramArrayOfByte, 5);
/*      */   }
/*      */ 
/*      */   public byte[] lnxtnh(byte[] paramArrayOfByte)
/*      */     throws SQLException
/*      */   {
/* 3584 */     return lnxqtra(paramArrayOfByte, 8);
/*      */   }
/*      */ 
/*      */   public byte[] lnxtru(byte[] paramArrayOfByte, int paramInt)
/*      */     throws SQLException
/*      */   {
/* 3598 */     int i1 = paramArrayOfByte.length;
/*      */ 
/* 3602 */     if (NUMBER._isZero(paramArrayOfByte))
/*      */     {
/* 3604 */       return NUMBER._makeZero();
/*      */     }
/* 3606 */     if (NUMBER._isNegInf(paramArrayOfByte))
/*      */     {
/* 3608 */       return NUMBER._makeNegInf();
/*      */     }
/* 3610 */     if (NUMBER._isPosInf(paramArrayOfByte))
/*      */     {
/* 3612 */       return NUMBER._makePosInf();
/*      */     }
/*      */ 
/* 3617 */     int i3 = paramArrayOfByte[0] < 0 ? 256 + paramArrayOfByte[0] : paramArrayOfByte[0];
/*      */     boolean bool;
/*      */     int k;
/*      */     int m;
/*      */     int n;
/* 3619 */     if ((bool = NUMBER._isPositive(paramArrayOfByte)))
/*      */     {
/* 3621 */       if (paramInt >= 0)
/*      */       {
/* 3623 */         k = i3 + (paramInt + 1 >> 1) - 192;
/* 3624 */         m = (paramInt & 0x1) == 1 ? 1 : 0;
/*      */       }
/*      */       else
/*      */       {
/* 3628 */         paramInt = -paramInt;
/* 3629 */         k = i3 - (paramInt >> 1) - 192;
/* 3630 */         m = (paramInt & 0x1) == 1 ? 1 : 0;
/*      */       }
/* 3632 */       n = 1;
/*      */     }
/*      */     else
/*      */     {
/* 3636 */       if (paramInt >= 0)
/*      */       {
/* 3638 */         k = 63 + (paramInt + 1 >> 1) - i3;
/* 3639 */         m = (paramInt & 0x1) == 1 ? 1 : 0;
/*      */       }
/*      */       else
/*      */       {
/* 3643 */         paramInt = -paramInt;
/* 3644 */         k = 63 - (paramInt >> 1) - i3;
/* 3645 */         m = (paramInt & 0x1) == 1 ? 1 : 0;
/*      */       }
/*      */ 
/* 3648 */       n = 101;
/*      */ 
/* 3650 */       if (paramArrayOfByte[(i1 - 1)] == 102)
/*      */       {
/* 3652 */         i1--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 3658 */     byte[] arrayOfByte = new byte[i1];
/* 3659 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte, 0, i1);
/*      */ 
/* 3664 */     if ((k > i1 - 1) || ((k == i1 - 1) && ((m != 0) || (LnxqFirstDigit[paramArrayOfByte[k]] == 1))))
/*      */     {
/* 3667 */       return _setLength(paramArrayOfByte, i1);
/*      */     }
/*      */ 
/* 3673 */     if ((k <= 0) || ((k == 1) && (m != 0) && (bool ? paramArrayOfByte[1] < 11 : paramArrayOfByte[1] > 91)))
/*      */     {
/* 3676 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 3680 */     int i = j = (byte)k;
/*      */ 
/* 3683 */     if (m != 0)
/*      */     {
/* 3686 */       if (bool)
/*      */       {
/* 3688 */         arrayOfByte[i] = LnxqTruncate_P[paramArrayOfByte[j]];
/*      */       }
/*      */       else
/*      */       {
/* 3692 */         arrayOfByte[i] = LnxqTruncate_N[paramArrayOfByte[j]];
/*      */       }
/*      */ 
/*      */     }
/*      */     else
/*      */     {
/* 3699 */       arrayOfByte[i] = paramArrayOfByte[j];
/*      */     }
/*      */ 
/* 3703 */     int j = (byte)(j - 1);
/*      */     int i2;
/* 3705 */     if (arrayOfByte[i] == n)
/*      */     {
/* 3709 */       while (paramArrayOfByte[j] == n)
/*      */       {
/* 3711 */         j = (byte)(j - 1);
/*      */       }
/*      */ 
/* 3715 */       i2 = j + 1;
/*      */     }
/*      */     else
/*      */     {
/* 3720 */       i2 = k + 1;
/*      */     }
/*      */ 
/* 3723 */     return _setLength(arrayOfByte, i2);
/*      */   }
/*      */ 
/*      */   public byte[] lnxcpn(String paramString1, boolean paramBoolean1, int paramInt1, boolean paramBoolean2, int paramInt2, String paramString2)
/*      */     throws SQLException
/*      */   {
/* 3739 */     int n = 0;
/*      */ 
/* 3744 */     int i4 = 0;
/* 3745 */     boolean bool = false;
/* 3746 */     int i5 = 0;
/*      */ 
/* 3749 */     int i6 = 0;
/* 3750 */     int i7 = 0;
/* 3751 */     int i8 = 0;
/* 3752 */     int i9 = 0;
/* 3753 */     int i10 = 0;
/* 3754 */     int i11 = 0;
/*      */ 
/* 3759 */     int i15 = 0;
/* 3760 */     int i16 = 0;
/* 3761 */     int i17 = 0;
/* 3762 */     int i18 = 0;
/*      */ 
/* 3772 */     int i27 = 0;
/*      */     Locale localLocale;
/* 3783 */     if (paramString2 != null)
/*      */     {
/* 3786 */       int i28 = paramString2.indexOf("_");
/* 3787 */       if (i28 == -1)
/*      */       {
/* 3789 */         localLocale = LxMetaData.getJavaLocale(paramString2, "");
/*      */       }
/*      */       else
/*      */       {
/* 3794 */         String str1 = paramString2.substring(0, i28);
/* 3795 */         String str2 = paramString2.substring(i28 + 1);
/* 3796 */         localLocale = LxMetaData.getJavaLocale(str1, str2);
/*      */       }
/*      */ 
/* 3799 */       if (localLocale == null)
/* 3800 */         localLocale = Locale.getDefault();
/*      */     }
/*      */     else
/*      */     {
/* 3804 */       localLocale = Locale.getDefault();
/*      */     }
/*      */ 
/* 3807 */     DecimalFormatSymbols localDecimalFormatSymbols = new DecimalFormatSymbols(localLocale);
/* 3808 */     int i22 = localDecimalFormatSymbols.getDecimalSeparator();
/* 3809 */     int i26 = localDecimalFormatSymbols.getMinusSign();
/*      */ 
/* 3812 */     char[] arrayOfChar = paramString1.toCharArray();
/*      */ 
/* 3816 */     int j = 0;
/* 3817 */     int k = arrayOfChar.length - 1;
/*      */ 
/* 3820 */     while ((j <= k) && (Character.isSpaceChar(arrayOfChar[j])))
/*      */     {
/* 3822 */       j++;
/*      */     }
/*      */ 
/* 3826 */     if ((j <= k) && ((arrayOfChar[j] == i26) || (arrayOfChar[j] == '+')))
/*      */     {
/* 3831 */       bool = arrayOfChar[j] == i26;
/* 3832 */       j++;
/*      */     }
/*      */ 
/* 3836 */     int i = j;
/*      */ 
/* 3839 */     while ((j <= k) && (arrayOfChar[j] == '0'))
/*      */     {
/* 3841 */       j++;
/*      */     }
/*      */ 
/* 3845 */     int m = j;
/*      */ 
/* 3848 */     while ((j <= k) && (Character.isDigit(arrayOfChar[j])))
/*      */     {
/* 3850 */       j++;
/*      */     }
/*      */ 
/* 3854 */     i6 = j - i;
/* 3855 */     i7 = j - m;
/*      */ 
/* 3858 */     if ((j <= k) && (arrayOfChar[j] == i22))
/*      */     {
/* 3860 */       j++;
/*      */ 
/* 3863 */       n = j;
/*      */ 
/* 3866 */       while ((j <= k) && (Character.isDigit(arrayOfChar[j])))
/*      */       {
/* 3868 */         j++;
/*      */       }
/*      */ 
/* 3872 */       i8 = j - n;
/*      */ 
/* 3875 */       i = j;
/*      */       do
/*      */       {
/* 3881 */         j--;
/*      */       }
/* 3883 */       while ((j >= n) && (arrayOfChar[j] == '0'));
/*      */ 
/* 3886 */       i9 = j - n + 1;
/*      */ 
/* 3889 */       j = i;
/*      */     }
/*      */ 
/* 3893 */     if (i6 + i8 != 0)
/*      */     {
/* 3896 */       if ((j <= k) && ((arrayOfChar[j] == 'E') || (arrayOfChar[j] == 'e')))
/*      */       {
/* 3902 */         j++;
/*      */ 
/* 3904 */         if ((j <= k) && ((arrayOfChar[j] == i26) || (arrayOfChar[j] == '+')))
/*      */         {
/* 3908 */           i5 = arrayOfChar[j] == i26 ? 1 : 0;
/*      */ 
/* 3910 */           j++;
/*      */         }
/*      */ 
/* 3914 */         i = j;
/*      */ 
/* 3917 */         while ((j <= k) && (arrayOfChar[j] == '0'))
/*      */         {
/* 3919 */           j++;
/*      */         }
/*      */ 
/* 3923 */         int i1 = j;
/*      */ 
/* 3926 */         while ((j <= k) && (Character.isDigit(arrayOfChar[j])))
/*      */         {
/* 3928 */           i4 = i4 * 10 + (arrayOfChar[j] - '0');
/* 3929 */           j++;
/*      */         }
/*      */ 
/* 3933 */         i10 = j - i;
/* 3934 */         i11 = j - i1;
/*      */ 
/* 3936 */         if (i10 != 0)
/*      */         {
/* 3938 */           if (i5 != 0)
/*      */           {
/* 3940 */             i4 = -i4;
/*      */           }
/*      */ 
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/* 3949 */       while ((j <= k) && (Character.isSpaceChar(arrayOfChar[j])))
/*      */       {
/* 3951 */         j++;
/*      */       }
/*      */     }
/*      */     int i19;
/*      */     int i20;
/*      */     int i3;
/* 3962 */     if (i7 != 0)
/*      */     {
/* 3964 */       if (i9 != 0)
/*      */       {
/* 3969 */         i4 += i7 - 1;
/*      */ 
/* 3972 */         i19 = i7;
/* 3973 */         i20 = i9;
/*      */ 
/* 3976 */         i3 = m;
/*      */       }
/*      */       else
/*      */       {
/* 3983 */         i4 += i7 - 1;
/*      */ 
/* 3986 */         j = m + (i7 - 1);
/* 3987 */         while (arrayOfChar[j] == '0')
/*      */         {
/* 3989 */           j--;
/*      */         }
/*      */ 
/* 3993 */         i19 = j - m + 1;
/* 3994 */         i20 = 0;
/*      */ 
/* 3997 */         i3 = m;
/*      */       }
/*      */ 
/*      */     }
/* 4002 */     else if (i9 != 0)
/*      */     {
/* 4008 */       j = n;
/* 4009 */       while (arrayOfChar[j] == '0')
/*      */       {
/* 4011 */         j++;
/*      */       }
/*      */ 
/* 4015 */       i4 -= j - n + 1;
/*      */ 
/* 4018 */       i19 = i9 - (j - n);
/* 4019 */       i20 = 0;
/*      */ 
/* 4022 */       i3 = j;
/*      */     }
/*      */     else
/*      */     {
/* 4027 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 4032 */     int i14 = (i4 & 0x1) == 1 ? 40 : 39;
/*      */ 
/* 4037 */     int i12 = i19 + i20;
/*      */ 
/* 4040 */     if ((paramBoolean1) || (paramBoolean2))
/*      */     {
/* 4043 */       if (!paramBoolean1)
/*      */       {
/* 4045 */         paramInt1 = 2147483647;
/*      */       }
/*      */ 
/* 4048 */       if (!paramBoolean2)
/*      */       {
/* 4050 */         paramInt2 = 0;
/*      */       }
/*      */ 
/* 4053 */       i13 = i4 + 1 + paramInt2;
/*      */     }
/*      */     else
/*      */     {
/* 4058 */       i13 = i12;
/*      */     }
/*      */ 
/* 4063 */     int i13 = Math.min(i13, i14);
/*      */ 
/* 4067 */     if ((i13 < 0) || ((i13 == 0) && (arrayOfChar[i3] < '5')))
/*      */     {
/* 4070 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 4075 */     int i21 = 0;
/*      */ 
/* 4077 */     if (i13 < i12)
/*      */     {
/* 4083 */       j = i3 + i13 + (i13 < i19 ? 0 : 1);
/*      */ 
/* 4086 */       if (arrayOfChar[j] < '5')
/*      */       {
/*      */         do
/*      */         {
/* 4091 */           j--;
/*      */ 
/* 4093 */           if (j < i3) break; 
/* 4093 */         }while ((arrayOfChar[j] == '0') || (arrayOfChar[j] == i22));
/*      */       }
/*      */       else
/*      */       {
/*      */         do
/*      */         {
/* 4101 */           j--;
/*      */         }
/* 4103 */         while ((j >= i3) && ((arrayOfChar[j] == '9') || (arrayOfChar[j] == i22)));
/*      */ 
/* 4105 */         i21 = 1;
/*      */       }
/*      */ 
/* 4109 */       if (j < i3)
/*      */       {
/* 4111 */         arrayOfChar[1] = '1';
/* 4112 */         arrayOfChar[2] = '0';
/* 4113 */         i3 = 1;
/*      */ 
/* 4115 */         i4++;
/*      */ 
/* 4118 */         i15 = 0;
/* 4119 */         i17 = (i4 & 0x1) == 1 ? 0 : 1;
/* 4120 */         i18 = 0;
/* 4121 */         i19 = (i4 & 0x1) == 1 ? 2 : 0;
/* 4122 */         i20 = 0;
/* 4123 */         i21 = 0;
/* 4124 */         i27 = 1;
/*      */       }
/* 4129 */       else if (i20 != 0)
/*      */       {
/* 4132 */         if (j - i3 < i19)
/*      */         {
/* 4135 */           i19 = j - i3 + 1;
/* 4136 */           i20 = 0;
/*      */         }
/*      */         else
/*      */         {
/* 4141 */           i20 = j - i3 - i19;
/*      */         }
/*      */ 
/*      */       }
/*      */       else
/*      */       {
/* 4147 */         i19 = j - i3 + 1;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 4153 */     if (i27 == 0)
/*      */     {
/* 4155 */       if (i20 != 0)
/*      */       {
/* 4158 */         i15 = 1;
/* 4159 */         i16 = (i4 & 0x1) == (i19 & 0x1) ? 1 : 0;
/* 4160 */         i17 = (i4 & 0x1) == 1 ? 0 : 1;
/* 4161 */         i18 = i16 != ((i20 & 0x1) == 1 ? 1 : 0) ? 1 : 0;
/*      */ 
/* 4163 */         i19 -= (i17 != 0 ? 1 : 0) + (i16 != 0 ? 1 : 0);
/* 4164 */         i20 -= (i16 != 0 ? 1 : 0) + (i18 != 0 ? 1 : 0);
/*      */       }
/*      */       else
/*      */       {
/* 4169 */         i15 = 0;
/* 4170 */         i17 = (i4 & 0x1) == 1 ? 0 : 1;
/* 4171 */         i18 = (i4 & 0x1) == (i19 & 0x1) ? 1 : 0;
/* 4172 */         i19 -= (i17 != 0 ? 1 : 0) + (i18 != 0 ? 1 : 0);
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 4177 */     if ((i5 == 0) && ((i11 > 3) || (i4 > 125)))
/*      */     {
/* 4179 */       if (bool)
/*      */       {
/* 4181 */         return NUMBER._makeNegInf();
/*      */       }
/*      */ 
/* 4185 */       return NUMBER._makePosInf();
/*      */     }
/*      */ 
/* 4190 */     if ((i5 != 0) && ((i11 > 3) || (i4 < -130)))
/*      */     {
/* 4192 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 4195 */     byte[] arrayOfByte = new byte[22];
/* 4196 */     int i25 = 1;
/* 4197 */     j = i3;
/*      */ 
/* 4201 */     if (i17 != 0)
/*      */     {
/* 4204 */       arrayOfByte[i25] = digitPtr(0, lnxqctn(arrayOfChar[j]), bool);
/*      */ 
/* 4207 */       i25++;
/* 4208 */       j++;
/*      */     }
/*      */     int i2;
/* 4213 */     if (i19 != 0)
/*      */     {
/* 4215 */       i2 = j + i19;
/* 4216 */       while (j < i2)
/*      */       {
/* 4219 */         arrayOfByte[i25] = digitPtr(lnxqctn(arrayOfChar[j]), lnxqctn(arrayOfChar[(j + 1)]), bool);
/*      */ 
/* 4222 */         i25++;
/* 4223 */         j += 2;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 4229 */     if (i15 != 0)
/*      */     {
/* 4231 */       if (i16 != 0)
/*      */       {
/* 4233 */         arrayOfByte[i25] = digitPtr(lnxqctn(arrayOfChar[j]), lnxqctn(arrayOfChar[(j + 2)]), bool);
/*      */ 
/* 4236 */         i25++;
/* 4237 */         j += 3;
/*      */       }
/*      */       else
/*      */       {
/* 4241 */         j++;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 4247 */     if (i20 != 0)
/*      */     {
/* 4249 */       i2 = j + i20;
/* 4250 */       while (j < i2)
/*      */       {
/* 4254 */         arrayOfByte[i25] = digitPtr(lnxqctn(arrayOfChar[j]), lnxqctn(arrayOfChar[(j + 1)]), bool);
/*      */ 
/* 4257 */         i25++;
/* 4258 */         j += 2;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 4264 */     if (i18 != 0)
/*      */     {
/* 4266 */       arrayOfByte[i25] = digitPtr(lnxqctn(arrayOfChar[j]), 0, bool);
/*      */ 
/* 4269 */       i25++;
/* 4270 */       j++;
/*      */     }
/*      */ 
/* 4275 */     if (i21 != 0)
/*      */     {
/*      */       int tmp1571_1570 = (i25 - 1);
/*      */       byte[] tmp1571_1565 = arrayOfByte; tmp1571_1565[tmp1571_1570] = (byte)(tmp1571_1565[tmp1571_1570] + (bool ? -1 : 1) * (i18 != 0 ? 10 : 1));
/*      */     }
/*      */     int i24;
/* 4282 */     if (i4 < 0)
/*      */     {
/* 4284 */       i24 = (byte)(193 - (1 - i4) / 2);
/*      */     }
/*      */     else
/*      */     {
/* 4289 */       i24 = (byte)(193 + i4 / 2);
/*      */     }
/*      */ 
/* 4293 */     int i23 = i25;
/*      */ 
/* 4296 */     arrayOfByte[0] = (byte)(bool ? i24 ^ 0xFFFFFFFF : i24);
/*      */ 
/* 4298 */     return _setLength(arrayOfByte, i23);
/*      */   }
/*      */ 
/*      */   private static byte digitPtr(int paramInt1, int paramInt2, boolean paramBoolean)
/*      */   {
/* 4310 */     return paramBoolean ? LnxqDigit_N[paramInt1][paramInt2] : LnxqDigit_P[paramInt1][paramInt2];
/*      */   }
/*      */ 
/*      */   private static int lnxqctn(char paramChar)
/*      */   {
/* 4319 */     return Character.digit(paramChar, 10);
/*      */   }
/*      */ 
/*      */   public byte[] lnxfcn(String paramString1, String paramString2, String paramString3)
/*      */     throws SQLException
/*      */   {
/* 4354 */     if ((paramString3 != null) && (!paramString3.equals("AMERICAN_AMERICAN")))
/*      */     {
/* 4356 */       throw new SQLException(CoreException.getMessage(12));
/*      */     }
/*      */ 
/* 4360 */     LnxLibThinFormat localLnxLibThinFormat = new LnxLibThinFormat();
/* 4361 */     localLnxLibThinFormat.parseFormat(paramString2);
/*      */ 
/* 4363 */     localLnxLibThinFormat.LNXNFRDX = true;
/*      */ 
/* 4365 */     int i = localLnxLibThinFormat.lnxnflhd;
/* 4366 */     int j = localLnxLibThinFormat.lnxnfrhd;
/* 4367 */     int k = localLnxLibThinFormat.lnxnfsiz;
/* 4368 */     int m = localLnxLibThinFormat.lnxnfzld;
/*      */ 
/* 4371 */     if ((localLnxLibThinFormat.LNXNFFDA | localLnxLibThinFormat.LNXNFFED | localLnxLibThinFormat.LNXNFFRN | localLnxLibThinFormat.LNXNFFTM))
/*      */     {
/* 4376 */       throw new SQLException(CoreException.getMessage(5));
/*      */     }
/*      */ 
/* 4381 */     if ((localLnxLibThinFormat.LNXNFFRC | localLnxLibThinFormat.LNXNFFCH | localLnxLibThinFormat.LNXNFFCT))
/*      */     {
/* 4383 */       throw new SQLException(CoreException.getMessage(12));
/*      */     }
/*      */ 
/* 4388 */     char[] arrayOfChar1 = paramString1.toCharArray();
/* 4389 */     int n = 0;
/* 4390 */     int i1 = arrayOfChar1.length - 1;
/*      */ 
/* 4392 */     int i2 = 0;
/*      */ 
/* 4395 */     while ((n <= i1) && (Character.isSpaceChar(arrayOfChar1[n])))
/*      */     {
/* 4397 */       n++;
/* 4398 */       i2++;
/*      */     }
/*      */ 
/* 4401 */     if ((localLnxLibThinFormat.LNXNFFBL) && (i2 == k) && (i2 == arrayOfChar1.length))
/*      */     {
/* 4404 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 4408 */     if (n > i1)
/*      */     {
/* 4410 */       throw new SQLException(CoreException.getMessage(14));
/*      */     }
/*      */ 
/* 4414 */     char[] arrayOfChar2 = new char['ÿ'];
/* 4415 */     int i3 = 0;
/*      */ 
/* 4419 */     if (localLnxLibThinFormat.LNXNFFSH)
/*      */     {
/* 4422 */       if ((arrayOfChar1[n] != '-') && (arrayOfChar1[n] != '+'))
/*      */       {
/* 4424 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/* 4427 */       arrayOfChar2[(i3++)] = arrayOfChar1[(n++)];
/*      */     }
/* 4429 */     else if (localLnxLibThinFormat.LNXNFFPR)
/*      */     {
/* 4432 */       if (arrayOfChar1[n] == '<')
/*      */       {
/* 4434 */         arrayOfChar2[(i3++)] = '-';
/* 4435 */         n++;
/*      */       }
/*      */       else
/*      */       {
/* 4439 */         arrayOfChar2[(i3++)] = '+';
/*      */       }
/*      */     }
/* 4442 */     else if (localLnxLibThinFormat.LNXNFFPT)
/*      */     {
/* 4445 */       if (arrayOfChar1[n] == '(')
/*      */       {
/* 4447 */         arrayOfChar2[(i3++)] = '-';
/* 4448 */         n++;
/*      */       }
/*      */       else
/*      */       {
/* 4452 */         arrayOfChar2[(i3++)] = '+';
/*      */       }
/*      */     }
/* 4455 */     else if ((!localLnxLibThinFormat.LNXNFFMI) && (!localLnxLibThinFormat.LNXNFFST))
/*      */     {
/* 4458 */       if (arrayOfChar1[n] == '-')
/*      */       {
/* 4460 */         arrayOfChar2[(i3++)] = arrayOfChar1[(n++)];
/*      */       }
/*      */ 
/*      */     }
/*      */     else
/*      */     {
/* 4466 */       i3++;
/*      */     }
/*      */ 
/* 4470 */     if (n > i1)
/*      */     {
/* 4472 */       throw new SQLException(CoreException.getMessage(14));
/*      */     }
/*      */ 
/* 4478 */     if (localLnxLibThinFormat.LNXNFFDS)
/*      */     {
/* 4481 */       if (arrayOfChar1[n] != '$')
/*      */       {
/* 4483 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/* 4487 */       n++;
/*      */ 
/* 4489 */       if (n > i1)
/*      */       {
/* 4491 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/*      */     }
/* 4495 */     else if (localLnxLibThinFormat.LNXNFFCH)
/*      */     {
/* 4499 */       throw new SQLException(CoreException.getMessage(12)); } 
/*      */ byte[] arrayOfByte = new byte[40];
/* 4506 */     int i4 = 0;
/*      */ 
/* 4508 */     int i5 = 0;
/*      */ 
/* 4510 */     int i6 = 0;
/* 4511 */     int i7 = 0;
/*      */     int i8;
/*      */     while (true) { if (n > i1)
/*      */         break label1046;
/* 4516 */       if ((Character.isDigit(arrayOfChar1[n])) || ((localLnxLibThinFormat.LNXNFFHX) && (((arrayOfChar1[n] >= 'a') && (arrayOfChar1[n] <= 'f')) || ((arrayOfChar1[n] >= 'A') && (arrayOfChar1[n] <= 'F')))))
/*      */       {
/* 4521 */         arrayOfChar2[(i3++)] = arrayOfChar1[(n++)];
/* 4522 */         i6++;
/* 4523 */         continue;
/*      */       }
/* 4525 */       if (i7 == 0)
/*      */       {
/* 4527 */         if (localLnxLibThinFormat.LNXNFRDX)
/*      */         {
/* 4530 */           if (arrayOfChar1[n] == ',')
/*      */           {
/* 4536 */             n++;
/* 4537 */             arrayOfByte[(i4++)] = (byte)i6;
/* 4538 */             continue;
/*      */           }
/* 4540 */           if (arrayOfChar1[n] == '.')
/*      */           {
/* 4543 */             if ((i6 > i) || (i6 < m))
/*      */             {
/* 4545 */               throw new SQLException(CoreException.getMessage(14));
/*      */             }
/*      */ 
/* 4553 */             i6 = i - i6;
/*      */ 
/* 4557 */             i4 = 0;
/* 4558 */             while (localLnxLibThinFormat.lnxnfgps[i5] != 0)
/*      */             {
/* 4569 */               i8 = (byte)(localLnxLibThinFormat.lnxnfgps[i5] & 0x7F);
/*      */ 
/* 4583 */               if (i8 > i6)
/*      */               {
/* 4585 */                 if (arrayOfByte[i4] != i8 - i6)
/*      */                 {
/* 4587 */                   throw new SQLException(CoreException.getMessage(14));
/*      */                 }
/*      */ 
/* 4591 */                 i4++;
/*      */               }
/*      */ 
/* 4595 */               i5++;
/*      */             }
/*      */ 
/* 4599 */             i6 = 0;
/* 4600 */             i7 = 1;
/* 4601 */             arrayOfChar2[i3] = '.';
/* 4602 */             i3++;
/* 4603 */             n++;
/* 4604 */             continue;
/*      */           }
/*      */ 
/*      */         }
/*      */         else
/*      */         {
/* 4610 */           throw new SQLException(CoreException.getMessage(12));
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/* 4615 */       if (((arrayOfChar1[n] != 'E') && (arrayOfChar1[n] != 'e')) || (!localLnxLibThinFormat.LNXNFFSN)) {
/*      */         break;
/*      */       }
/* 4618 */       if ((i6 <= 0) && (i7 == 0))
/*      */       {
/* 4620 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/* 4623 */       arrayOfChar2[(i3++)] = arrayOfChar1[(n++)];
/* 4624 */       if (n > i1)
/*      */       {
/* 4626 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/* 4629 */       if ((arrayOfChar1[n] == '+') || (arrayOfChar1[n] == '-'))
/*      */       {
/* 4631 */         arrayOfChar2[(i3++)] = arrayOfChar1[(n++)];
/*      */       }
/* 4633 */       i8 = n;
/* 4634 */       while ((n <= i1) && (Character.isDigit(arrayOfChar1[n])))
/*      */       {
/* 4636 */         arrayOfChar2[(i3++)] = arrayOfChar1[(n++)];
/*      */       }
/*      */ 
/* 4639 */       if (i8 != n)
/*      */         continue;
/* 4641 */       throw new SQLException(CoreException.getMessage(14));
/*      */     }
/*      */ 
/* 4645 */     if (localLnxLibThinFormat.LNXNFFRC)
/*      */     {
/* 4649 */       throw new SQLException(CoreException.getMessage(12));
/*      */     }
/*      */ 
/* 4660 */     label1046: if (i7 == 0)
/*      */     {
/* 4662 */       i8 = i - i6;
/* 4663 */       i4 = 0;
/*      */ 
/* 4665 */       while (localLnxLibThinFormat.lnxnfgps[i5] != 0)
/*      */       {
/* 4667 */         int i9 = (byte)(localLnxLibThinFormat.lnxnfgps[i5] & 0x7F);
/* 4668 */         if (i9 > i8)
/*      */         {
/* 4670 */           if (arrayOfByte[i4] != i9 - i8)
/*      */           {
/* 4672 */             throw new SQLException(CoreException.getMessage(14));
/*      */           }
/*      */ 
/* 4675 */           i4++;
/*      */         }
/* 4677 */         i5++;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 4683 */     if (localLnxLibThinFormat.LNXNFFCT)
/*      */     {
/* 4685 */       throw new SQLException(CoreException.getMessage(12));
/*      */     }
/*      */ 
/* 4691 */     if (localLnxLibThinFormat.LNXNFFST)
/*      */     {
/* 4694 */       if (n > i1)
/*      */       {
/* 4696 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/* 4699 */       if ((arrayOfChar1[n] != '-') && (arrayOfChar1[n] != '+'))
/*      */       {
/* 4701 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/* 4704 */       arrayOfChar2[0] = arrayOfChar1[n];
/* 4705 */       n++;
/*      */     }
/* 4707 */     else if (localLnxLibThinFormat.LNXNFFMI)
/*      */     {
/* 4710 */       if (n > i1)
/*      */       {
/* 4712 */         if ((localLnxLibThinFormat.LNXNFFIL) || (n != arrayOfChar1.length))
/*      */         {
/* 4714 */           throw new SQLException(CoreException.getMessage(14));
/*      */         }
/*      */ 
/* 4718 */         arrayOfChar2[0] = '+';
/*      */       }
/*      */       else
/*      */       {
/* 4722 */         arrayOfChar2[0] = (arrayOfChar1[n] == '-' ? 45 : '+');
/* 4723 */         n++;
/*      */       }
/*      */     }
/* 4726 */     else if (localLnxLibThinFormat.LNXNFFPR)
/*      */     {
/* 4729 */       if ((arrayOfChar1[n] == '>') && (arrayOfChar2[0] == '-'))
/*      */       {
/* 4731 */         n++;
/*      */       }
/*      */     }
/* 4734 */     else if (localLnxLibThinFormat.LNXNFFPT)
/*      */     {
/* 4737 */       if ((n < arrayOfChar1.length) && (arrayOfChar1[n] == ')') && (arrayOfChar2[0] == '-'))
/*      */       {
/* 4741 */         n++;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 4747 */     if (n <= i1)
/*      */     {
/* 4749 */       throw new SQLException(CoreException.getMessage(14));
/*      */     }
/*      */ 
/* 4755 */     if (i7 != 0)
/*      */     {
/* 4757 */       if (i6 > j)
/*      */       {
/* 4759 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/*      */     }
/*      */     else
/*      */     {
/* 4766 */       if (i6 > i)
/*      */       {
/* 4768 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/* 4772 */       if (i6 < m)
/*      */       {
/* 4774 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 4785 */     if ((localLnxLibThinFormat.LNXNFF05) && (((i7 != 0) && (i6 == j)) || (j == 0)))
/*      */     {
/* 4788 */       i3--;
/* 4789 */       if ((arrayOfChar2[i3] != '0') && (arrayOfChar2[i3] != '5'))
/*      */       {
/* 4791 */         throw new SQLException(CoreException.getMessage(14));
/*      */       }
/*      */ 
/* 4794 */       i3++;
/*      */     }
/*      */ 
/* 4799 */     if (localLnxLibThinFormat.LNXNFFHX)
/*      */     {
/* 4801 */       return lnxqh2n(arrayOfChar2);
/*      */     }
/*      */ 
/* 4805 */     return lnxcpn(new String(arrayOfChar2), false, 0, false, 0, paramString3);
/*      */   }
/*      */ 
/*      */   public String lnxnfn(byte[] paramArrayOfByte, String paramString1, String paramString2)
/*      */     throws SQLException
/*      */   {
/* 4817 */     char[] arrayOfChar1 = null;
/*      */ 
/* 4819 */     int i = 0;
/* 4820 */     int j = 0;
/* 4821 */     int k = 0;
/* 4822 */     int m = 0;
/* 4823 */     int n = 0;
/* 4824 */     int i1 = 0;
/* 4825 */     int i2 = 0;
/* 4826 */     int i3 = 0;
/* 4827 */     int i4 = 0;
/* 4828 */     int i5 = 0;
/* 4829 */     int i6 = 0;
/* 4830 */     int i7 = 0;
/* 4831 */     int i8 = 0;
/* 4832 */     int i9 = 0;
/* 4833 */     int i10 = 0;
/* 4834 */     int i11 = 0;
/* 4835 */     int i12 = 0;
/* 4836 */     int i13 = 0;
/*      */ 
/* 4838 */     Object localObject = null;
/* 4839 */     boolean[] arrayOfBoolean = new boolean[1];
/* 4840 */     int i14 = 0;
/* 4841 */     int i15 = 1;
/*      */ 
/* 4843 */     int i17 = 1;
/*      */ 
/* 4845 */     String str = null;
/*      */ 
/* 4852 */     LnxLibThinFormat localLnxLibThinFormat = new LnxLibThinFormat();
/* 4853 */     localLnxLibThinFormat.parseFormat(paramString1);
/*      */ 
/* 4855 */     i = localLnxLibThinFormat.lnxnflhd;
/* 4856 */     j = localLnxLibThinFormat.lnxnfrhd;
/* 4857 */     k = localLnxLibThinFormat.lnxnfsiz;
/* 4858 */     m = localLnxLibThinFormat.lnxnfzld;
/* 4859 */     n = localLnxLibThinFormat.lnxnfztr;
/*      */ 
/* 4861 */     if ((localLnxLibThinFormat.LNXNFFRN) || (localLnxLibThinFormat.LNXNFFHX))
/*      */     {
/* 4871 */       if (localLnxLibThinFormat.LNXNFFRN)
/*      */       {
/* 4888 */         throw new SQLException(CoreException.getMessage(1));
/*      */       }
/*      */ 
/* 4893 */       throw new SQLException(CoreException.getMessage(1));
/*      */     }
/*      */     int i19;
/*      */     int i20;
/* 4936 */     if (localLnxLibThinFormat.LNXNFFTM)
/*      */     {
/* 4938 */       i19 = paramArrayOfByte.length;
/*      */       int i21;
/*      */       int i22;
/*      */       int i23;
/* 4946 */       if (!NUMBER._isZero(paramArrayOfByte))
/*      */       {
/* 4948 */         if (NUMBER._isPositive(paramArrayOfByte))
/*      */         {
/* 4950 */           i20 = i19 - 1;
/* 4951 */           i21 = 2 * ((paramArrayOfByte[0] & 0xFF) - 193) + ((paramArrayOfByte[1] & 0xFF) > 10 ? 1 : 0);
/*      */ 
/* 4953 */           i22 = 2 * i20 - ((paramArrayOfByte[1] & 0xFF) < 11 ? 1 : 0) - LnxqFirstDigit[paramArrayOfByte[i20]];
/* 4954 */           i23 = 0;
/*      */         }
/*      */         else
/*      */         {
/* 4958 */           if ((paramArrayOfByte[(i19 - 1)] & 0xFF) == 102) {
/* 4959 */             i19--;
/*      */           }
/* 4961 */           i20 = i19 - 1;
/* 4962 */           i21 = 2 * (62 - paramArrayOfByte[0]) + ((paramArrayOfByte[1] & 0xFF) < 92 ? 1 : 0);
/*      */ 
/* 4964 */           i22 = 2 * i20 - ((paramArrayOfByte[1] & 0xFF) > 91 ? 1 : 0) - LnxqFirstDigit[paramArrayOfByte[i20]];
/* 4965 */           i23 = 1;
/*      */         }
/*      */       }
/*      */       else
/*      */       {
/* 4970 */         i21 = 0;
/* 4971 */         i22 = 1;
/* 4972 */         i23 = 0;
/*      */       }
/*      */ 
/* 4976 */       if (i21 >= 0)
/*      */       {
/* 4978 */         i23 += (i22 > i21 + 1 ? i22 + 1 : i21 + 1);
/*      */       }
/*      */       else
/*      */       {
/* 4982 */         i23 += -(i21 + 1) + i22 + 1;
/*      */       }
/*      */ 
/* 4986 */       if ((!localLnxLibThinFormat.LNXNFFSN) && (i23 > 64))
/*      */       {
/* 4988 */         localLnxLibThinFormat.LNXNFFSN = true;
/*      */       }
/*      */ 
/* 4992 */       if (localLnxLibThinFormat.LNXNFFSN)
/*      */       {
/* 4994 */         i = 1;
/* 4995 */         j = i22 - 1;
/* 4996 */         k = i22 > 1 ? i22 + 7 : 7;
/*      */       }
/*      */       else
/*      */       {
/* 5000 */         i = i21 + 1 > 0 ? i21 + 1 : 0;
/* 5001 */         j = i22 - (i21 + 1) > 0 ? i22 - (i21 + 1) : 0;
/* 5002 */         k = j != 0 ? i + j + 2 : i + 1;
/*      */       }
/*      */ 
/* 5006 */       if (j == 0)
/*      */       {
/* 5008 */         localLnxLibThinFormat.LNXNFNRD = true;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5018 */     int i18 = (paramArrayOfByte[0] & 0xFF) >= 128 ? 1 : 0;
/*      */     byte[] arrayOfByte;
/* 5023 */     if (localLnxLibThinFormat.LNXNFFSN)
/*      */     {
/* 5025 */       arrayOfByte = lnxfpr(paramArrayOfByte, j + i);
/*      */     }
/*      */     else
/*      */     {
/* 5029 */       arrayOfByte = lnxsca(paramArrayOfByte, i, j, arrayOfBoolean);
/*      */ 
/* 5031 */       if (arrayOfBoolean[0] != 0)
/*      */       {
/* 5033 */         throw new SQLException(CoreException.getMessage(4));
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5038 */     arrayOfChar1 = new char[64];
/* 5039 */     i5 = 0;
/*      */ 
/* 5041 */     if (NUMBER._isZero(arrayOfByte))
/*      */     {
/* 5044 */       if (localLnxLibThinFormat.LNXNFFBL)
/*      */       {
/* 5046 */         if (localLnxLibThinFormat.LNXNFFIL)
/*      */         {
/* 5049 */           arrayOfChar1 = new char[k];
/*      */ 
/* 5051 */           for (i19 = 0; i19 < k; i19++) {
/* 5052 */             arrayOfChar1[i19] = ' ';
/*      */           }
/* 5054 */           return new String(arrayOfChar1);
/*      */         }
/*      */ 
/* 5058 */         return null;
/*      */       }
/*      */ 
/* 5064 */       i15 = i18;
/* 5065 */       i14 = 0;
/* 5066 */       i2 = 0;
/* 5067 */       i4 = 0;
/* 5068 */       i1 = i2;
/*      */ 
/* 5080 */       i3 = (i > 0) && (n == 0) ? 1 : 0;
/*      */     }
/*      */     else {
/* 5083 */       if ((NUMBER._isNegInf(arrayOfByte)) || (NUMBER._isPosInf(arrayOfByte)))
/*      */       {
/* 5085 */         throw new SQLException(CoreException.getMessage(4));
/*      */       }
/*      */ 
/* 5094 */       i4 = arrayOfByte.length - 1;
/* 5095 */       i15 = (arrayOfByte[0] & 0x80) != 0 ? 1 : 0;
/*      */ 
/* 5097 */       if (i15 == 0)
/*      */       {
/* 5099 */         localObject = new byte[i4];
/* 5100 */         if (arrayOfByte[i4] == 102) {
/* 5101 */           i4--;
/*      */         }
/* 5103 */         for (i19 = 1; i19 <= i4; i19++) {
/* 5104 */           localObject[i19] = (byte)(102 - arrayOfByte[i19]);
/*      */         }
/* 5106 */         localObject[0] = (byte)(arrayOfByte[0] ^ 0xFFFFFFFF);
/*      */       }
/*      */       else
/*      */       {
/* 5110 */         localObject = arrayOfByte;
/*      */       }
/*      */ 
/* 5114 */       int i16 = (localObject[i4] & 0xFF) % 10 == 1 ? 1 : 0;
/* 5115 */       i1 = 2 * ((localObject[0] & 0xFF) - 192);
/*      */ 
/* 5118 */       i6 = 1;
/* 5119 */       if ((i17 = (localObject[i6] & 0xFF) < 11 ? 1 : 0) != 0)
/*      */       {
/* 5121 */         i10 = ((localObject[i6] & 0xFF) - 1) / 10;
/*      */       }
/*      */ 
/* 5124 */       if (localLnxLibThinFormat.LNXNFFSN)
/*      */       {
/* 5126 */         i2 = 2 * i4 - (i17 != 0 ? 1 : 0) - (i16 != 0 ? 1 : 0) - (i3 = 1);
/* 5127 */         i1 -= (i17 != 0 ? 1 : 0) + 1;
/*      */ 
/* 5129 */         if ((i14 = i1 < 0 ? 1 : 0) != 0)
/*      */         {
/* 5131 */           i1 = -i1;
/*      */         }
/* 5133 */         if ((i1 < 100) && (localLnxLibThinFormat.LNXNFFIL))
/*      */         {
/* 5136 */           arrayOfChar1[i5] = ' ';
/* 5137 */           i5++;
/*      */         }
/*      */       }
/*      */       else
/*      */       {
/* 5142 */         i2 = 2 * i4 - i1 - (i16 != 0 ? 1 : 0);
/* 5143 */         i3 = i1 - (i17 != 0 ? 1 : 0);
/*      */ 
/* 5146 */         if ((localLnxLibThinFormat.LNXNFF05) && ((j == 0) || (i2 == j)))
/*      */         {
/* 5157 */           i19 = i6 + i4 - 1;
/*      */ 
/* 5160 */           if (i16 == 0)
/*      */           {
/* 5163 */             i20 = (localObject[i19] & 0xFF) % 10;
/* 5164 */             i20 = i20 != 0 ? i20 - 1 : 9;
/* 5165 */             if (i20 <= 2)
/*      */             {
/* 5167 */               localObject[i19] = (byte)((localObject[i19] & 0xFF) - i20);
/*      */             }
/* 5169 */             else if (i20 <= 7)
/*      */             {
/* 5171 */               localObject[i19] = (byte)((localObject[i19] & 0xFF) + (5 - i20));
/*      */             }
/*      */ 
/*      */           }
/*      */           else
/*      */           {
/* 5177 */             i20 = (localObject[i19] & 0xFF) / 10;
/* 5178 */             if (i20 <= 2)
/*      */             {
/* 5180 */               localObject[i19] = 1;
/*      */             }
/* 5182 */             else if (i20 <= 7)
/*      */             {
/* 5184 */               localObject[i19] = 51;
/*      */             }
/*      */           }
/*      */ 
/* 5188 */           if (i20 > 7)
/*      */           {
/* 5192 */             i6--;
/* 5193 */             localObject = lnxrou(localObject, i2 - 1);
/*      */ 
/* 5196 */             i4 = localObject.length - 1;
/* 5197 */             i16 = (localObject[i6] & 0xFF) % 10 == 1 ? 1 : 0;
/* 5198 */             i1 = 2 * ((localObject[i6] & 0xFF) - 192);
/*      */ 
/* 5201 */             i6++;
/*      */ 
/* 5203 */             if ((i17 = (localObject[i6] & 0xFF) < 11 ? 1 : 0) != 0)
/*      */             {
/* 5205 */               i10 = ((localObject[i6] & 0xFF) - 1) / 10;
/*      */             }
/*      */ 
/* 5208 */             i2 = 2 * i4 - i1 - (i16 != 0 ? 1 : 0);
/* 5209 */             i3 = i1 - (i17 != 0 ? 1 : 0);
/*      */ 
/* 5211 */             if (i3 > i)
/*      */             {
/* 5213 */               throw new SQLException(CoreException.getMessage(4));
/*      */             }
/*      */ 
/*      */           }
/*      */ 
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5230 */     i11 = i - (m > i3 ? m : i3);
/*      */ 
/* 5232 */     if ((i11 != 0) && (localLnxLibThinFormat.LNXNFFIL))
/*      */     {
/* 5234 */       i19 = i11 + i5;
/* 5235 */       for (i20 = 0; i20 < i19; i5++) {
/* 5236 */         arrayOfChar1[i20] = ' ';
/*      */ 
/* 5235 */         i20++;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5240 */     if ((!localLnxLibThinFormat.LNXNFFMI) && (!localLnxLibThinFormat.LNXNFFST))
/*      */     {
/* 5244 */       if (i15 != 0)
/*      */       {
/* 5247 */         i19 = localLnxLibThinFormat.LNXNFFSH ? 43 : 32;
/*      */       }
/*      */       else
/*      */       {
/* 5252 */         i19 = localLnxLibThinFormat.LNXNFFPT ? 40 : localLnxLibThinFormat.LNXNFFPR ? 60 : 45;
/*      */       }
/*      */ 
/* 5255 */       if ((localLnxLibThinFormat.LNXNFFIL) || (i19 != 32))
/*      */       {
/* 5258 */         arrayOfChar1[i5] = i19;
/* 5259 */         i5++;
/*      */       }
/*      */     }
/*      */ 
/* 5263 */     if (localLnxLibThinFormat.LNXNFFIC)
/*      */     {
/* 5266 */       str = new String("USD");
/*      */     }
/* 5268 */     else if (localLnxLibThinFormat.LNXNFFUN)
/*      */     {
/* 5271 */       str = new String("$");
/*      */     }
/*      */     else
/*      */     {
/* 5275 */       str = new String("$");
/*      */     }
/*      */ 
/* 5278 */     if (localLnxLibThinFormat.LNXNFFDS)
/*      */     {
/* 5282 */       arrayOfChar1[i5] = '$';
/* 5283 */       i5++;
/*      */     }
/* 5285 */     else if (localLnxLibThinFormat.LNXNFFCH)
/*      */     {
/* 5287 */       for (i19 = 0; i19 < str.length(); i5++) {
/* 5288 */         arrayOfChar1[i5] = str.charAt(i19);
/*      */ 
/* 5287 */         i19++;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5293 */     i7 = 0;
/* 5294 */     while ((i8 = localLnxLibThinFormat.lnxnfgps[i7] & 0x7F) != 0)
/*      */     {
/* 5296 */       if (i8 > i11)
/*      */       {
/*      */         break;
/*      */       }
/* 5300 */       i7++;
/*      */     }
/*      */ 
/* 5304 */     if ((i9 = m - (i3 > 0 ? i3 : 0)) > 0)
/*      */     {
/* 5306 */       while (i9 > 0)
/*      */       {
/* 5309 */         arrayOfChar1[i5] = '0';
/* 5310 */         i5++;
/* 5311 */         i11++;
/*      */ 
/* 5314 */         while (i11 == i8)
/*      */         {
/* 5319 */           arrayOfChar1[i5] = ',';
/* 5320 */           i5++;
/* 5321 */           i7++;
/*      */ 
/* 5323 */           i8 = localLnxLibThinFormat.lnxnfgps[i7] & 0x7F;
/*      */         }
/* 5325 */         i9--;
/*      */       }
/*      */     }
/*      */ 
/* 5329 */     if (i3 > 0)
/*      */     {
/* 5332 */       while ((i3 > 0) && (i4 != 0))
/*      */       {
/* 5335 */         if (i17 != 0)
/*      */         {
/* 5337 */           i13 = (localObject[i6] & 0xFF) - 1 - i10 * 10;
/* 5338 */           i6++;
/* 5339 */           i4--;
/*      */         }
/*      */         else
/*      */         {
/* 5343 */           i13 = ((localObject[i6] & 0xFF) - 1) / 10;
/* 5344 */           i10 = i13;
/*      */         }
/*      */ 
/* 5348 */         arrayOfChar1[i5] = this.lnx_chars[i13];
/* 5349 */         i5++;
/* 5350 */         i11++;
/*      */ 
/* 5352 */         while (i11 == i8)
/*      */         {
/* 5357 */           arrayOfChar1[i5] = ',';
/* 5358 */           i5++;
/* 5359 */           i7++;
/* 5360 */           i8 = localLnxLibThinFormat.lnxnfgps[i7] & 0x7F;
/*      */         }
/* 5362 */         i3--;
/* 5363 */         i17 = i17 == 0 ? 1 : 0;
/*      */       }
/*      */ 
/* 5367 */       while (i3 > 0)
/*      */       {
/* 5370 */         arrayOfChar1[i5] = '0';
/* 5371 */         i5++;
/* 5372 */         i11++;
/*      */ 
/* 5375 */         while (i11 == i8)
/*      */         {
/* 5380 */           arrayOfChar1[i5] = ',';
/* 5381 */           i5++;
/* 5382 */           i7++;
/* 5383 */           i8 = localLnxLibThinFormat.lnxnfgps[i7] & 0x7F;
/*      */         }
/*      */ 
/* 5386 */         i3--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5392 */     if (!localLnxLibThinFormat.LNXNFNRD)
/*      */     {
/* 5395 */       if (localLnxLibThinFormat.LNXNFRDX)
/*      */       {
/* 5398 */         arrayOfChar1[i5] = '.';
/* 5399 */         i5++;
/*      */       }
/*      */       else
/*      */       {
/* 5403 */         if (localLnxLibThinFormat.LNXNFFRC)
/*      */         {
/* 5406 */           for (i19 = 0; i19 < str.length(); i5++) {
/* 5407 */             arrayOfChar1[i5] = str.charAt(i19);
/*      */ 
/* 5406 */             i19++;
/*      */           }
/*      */ 
/*      */         }
/*      */ 
/* 5412 */         arrayOfChar1[i5] = '.';
/* 5413 */         i5++;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5418 */     i11 = 0;
/* 5419 */     if ((i12 = n - (i2 > 0 ? i2 : 0)) < 0)
/*      */     {
/* 5421 */       i12 = 0;
/*      */     }
/*      */ 
/* 5425 */     if (i3 != 0)
/*      */     {
/* 5428 */       i3 = -i3;
/* 5429 */       i2 -= i3;
/* 5430 */       while (i3 != 0)
/*      */       {
/* 5433 */         arrayOfChar1[i5] = '0';
/* 5434 */         i5++;
/* 5435 */         i3--;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5440 */     while ((i4 != 0) && (i2 != 0))
/*      */     {
/* 5442 */       if (i17 != 0)
/*      */       {
/* 5444 */         i13 = (localObject[i6] & 0xFF) - 1 - i10 * 10;
/* 5445 */         i6++;
/* 5446 */         i4--;
/*      */       }
/*      */       else
/*      */       {
/* 5450 */         i13 = ((localObject[i6] & 0xFF) - 1) / 10;
/* 5451 */         i10 = i13;
/*      */       }
/*      */ 
/* 5455 */       arrayOfChar1[i5] = this.lnx_chars[i13];
/* 5456 */       i5++;
/* 5457 */       i2--;
/* 5458 */       i17 = i17 == 0 ? 1 : 0;
/*      */     }
/*      */ 
/* 5461 */     while (i12 != 0)
/*      */     {
/* 5464 */       arrayOfChar1[i5] = '0';
/* 5465 */       i5++;
/* 5466 */       i12--;
/*      */     }
/*      */ 
/* 5470 */     if (localLnxLibThinFormat.LNXNFFSN)
/*      */     {
/* 5473 */       arrayOfChar1[i5] = 'E';
/* 5474 */       i5++;
/*      */ 
/* 5479 */       arrayOfChar1[i5] = (i14 != 0 ? 45 : '+');
/* 5480 */       i5++;
/*      */ 
/* 5483 */       if (i1 > 99)
/*      */       {
/* 5486 */         arrayOfChar1[i5] = '1';
/* 5487 */         i5++;
/* 5488 */         i1 -= 100;
/*      */       }
/*      */ 
/* 5492 */       arrayOfChar1[i5] = this.lnx_chars[(i1 / 10)];
/* 5493 */       i5++;
/*      */ 
/* 5496 */       arrayOfChar1[i5] = this.lnx_chars[(i1 % 10)];
/* 5497 */       i5++;
/*      */     }
/*      */ 
/* 5500 */     if (localLnxLibThinFormat.LNXNFFCT)
/*      */     {
/* 5503 */       for (i19 = 0; i19 < str.length(); i5++) {
/* 5504 */         arrayOfChar1[i5] = str.charAt(i19);
/*      */ 
/* 5503 */         i19++;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 5508 */     if (i15 != 0)
/*      */     {
/* 5510 */       if (localLnxLibThinFormat.LNXNFFST)
/*      */       {
/* 5514 */         arrayOfChar1[i5] = '+';
/* 5515 */         i5++;
/*      */       }
/* 5517 */       else if (((localLnxLibThinFormat.LNXNFFPR) || (localLnxLibThinFormat.LNXNFFMI) || (localLnxLibThinFormat.LNXNFFPT)) && (localLnxLibThinFormat.LNXNFFIL))
/*      */       {
/* 5522 */         arrayOfChar1[i5] = ' ';
/* 5523 */         i5++;
/*      */       }
/*      */ 
/*      */     }
/* 5528 */     else if (localLnxLibThinFormat.LNXNFFPR)
/*      */     {
/* 5531 */       arrayOfChar1[i5] = '>';
/* 5532 */       i5++;
/*      */     }
/* 5535 */     else if (localLnxLibThinFormat.LNXNFFPT)
/*      */     {
/* 5538 */       arrayOfChar1[i5] = ')';
/* 5539 */       i5++;
/*      */     }
/* 5541 */     else if ((localLnxLibThinFormat.LNXNFFMI) || (localLnxLibThinFormat.LNXNFFST))
/*      */     {
/* 5544 */       arrayOfChar1[i5] = '-';
/* 5545 */       i5++;
/*      */     }
/*      */ 
/* 5550 */     i12 = i5;
/*      */ 
/* 5555 */     if ((localLnxLibThinFormat.LNXNFFIL) && (i12 != k))
/*      */     {
/* 5559 */       i9 = k - i12;
/*      */ 
/* 5561 */       char[] arrayOfChar2 = new char[i9];
/* 5562 */       for (i20 = 0; i20 < i9; i20++) {
/* 5563 */         arrayOfChar2[i20] = ' ';
/*      */       }
/* 5565 */       StringBuffer localStringBuffer = new StringBuffer();
/* 5566 */       localStringBuffer.append(arrayOfChar2);
/* 5567 */       localStringBuffer.append(arrayOfChar1, 0, i12);
/*      */ 
/* 5569 */       return localStringBuffer.toString();
/*      */     }
/*      */ 
/* 5572 */     return (String)new String(arrayOfChar1, 0, i12);
/*      */   }
/*      */ 
/*      */   public String lnxnuc(byte[] paramArrayOfByte, int paramInt, String paramString)
/*      */     throws SQLException
/*      */   {
/* 5592 */     byte[] arrayOfByte1 = new byte[22];
/*      */ 
/* 5614 */     int i13 = 0;
/*      */ 
/* 5623 */     if (paramString != null)
/*      */     {
/* 5625 */       throw new SQLException(CoreException.getMessage(12));
/*      */     }
/*      */ 
/* 5631 */     char[] arrayOfChar1 = this.lnx_chars;
/* 5632 */     int i5 = 46;
/*      */ 
/* 5635 */     if (paramInt == 0)
/*      */     {
/* 5637 */       throw new SQLException(CoreException.getMessage(13));
/*      */     }
/*      */     int k;
/* 5643 */     if ((k = paramInt >= 0 ? 1 : 0) == 0)
/*      */     {
/* 5645 */       paramInt = -paramInt;
/*      */     }
/*      */ 
/* 5648 */     char[] arrayOfChar2 = new char[paramInt];
/*      */     int i7;
/*      */     byte[][] arrayOfByte;
/*      */     int i6;
/* 5652 */     if ((i7 = !NUMBER._isPositive(paramArrayOfByte) ? 1 : 0) != 0)
/*      */     {
/* 5654 */       arrayOfByte = LnxqComponents_N;
/* 5655 */       i6 = paramInt - 1;
/*      */     }
/*      */     else
/*      */     {
/* 5659 */       arrayOfByte = LnxqComponents_P;
/* 5660 */       i6 = paramInt;
/*      */     }
/*      */ 
/* 5663 */     int i19 = 1;
/*      */ 
/* 5665 */     while (i19 != 0)
/*      */     {
/* 5669 */       int m = k;
/*      */ 
/* 5673 */       int i20 = paramArrayOfByte.length;
/*      */       int i4;
/*      */       int i18;
/* 5675 */       if (i20 == 1)
/*      */       {
/* 5678 */         if ((paramArrayOfByte[0] & 0xFF) == 128)
/*      */         {
/* 5681 */           if (m != 0)
/*      */           {
/* 5683 */             i4 = paramInt - 1;
/* 5684 */             arrayOfChar2[i4] = arrayOfChar1[0];
/*      */           }
/*      */           else
/*      */           {
/* 5688 */             if (paramInt < 5)
/*      */             {
/* 5690 */               throw new SQLException(CoreException.getMessage(13));
/*      */             }
/*      */ 
/* 5693 */             i4 = paramInt - 5;
/* 5694 */             arrayOfChar2[i4] = arrayOfChar1[0];
/* 5695 */             arrayOfChar2[(i4 + 1)] = arrayOfChar1[41];
/* 5696 */             arrayOfChar2[(i4 + 2)] = arrayOfChar1[10];
/* 5697 */             arrayOfChar2[(i4 + 3)] = arrayOfChar1[0];
/* 5698 */             arrayOfChar2[(i4 + 4)] = arrayOfChar1[0];
/*      */           }
/*      */ 
/* 5701 */           if (i4 != 0) {
/* 5702 */             for (i18 = 0; i18 < i4; i18++) arrayOfChar2[i18] = arrayOfChar1[12];
/*      */           }
/* 5704 */           return new String(arrayOfChar2);
/*      */         }
/*      */ 
/* 5708 */         if (paramInt < 2)
/*      */         {
/* 5710 */           throw new SQLException(CoreException.getMessage(13));
/*      */         }
/*      */ 
/* 5713 */         i4 = paramInt - 2;
/* 5714 */         arrayOfChar2[i4] = arrayOfChar1[11];
/* 5715 */         arrayOfChar2[(i4 + 1)] = arrayOfChar1[21];
/*      */ 
/* 5717 */         if (i4 != 0) {
/* 5718 */           for (i18 = 0; i18 < i4; i18++) arrayOfChar2[i18] = arrayOfChar1[12];
/*      */         }
/* 5720 */         return new String(arrayOfChar2);
/*      */       }
/*      */ 
/* 5726 */       if ((i20 == 2) && ((paramArrayOfByte[0] & 0xFF) == 255) && ((paramArrayOfByte[1] & 0xFF) == 101))
/*      */       {
/* 5730 */         i4 = paramInt - 1;
/* 5731 */         arrayOfChar2[i4] = arrayOfChar1[21];
/*      */ 
/* 5733 */         if (i4 != 0) {
/* 5734 */           for (i18 = 0; i18 < i4; i18++) arrayOfChar2[i18] = arrayOfChar1[12];
/*      */         }
/* 5736 */         return new String(arrayOfChar2);
/*      */       }
/*      */       int i2;
/*      */       int i8;
/*      */       int i3;
/* 5741 */       if (i7 != 0)
/*      */       {
/* 5743 */         if (paramArrayOfByte[(i20 - 1)] == 102) i20--;
/* 5744 */         i2 = i20 - 1;
/* 5745 */         i8 = 2 * (62 - (paramArrayOfByte[0] & 0xFF)) + ((paramArrayOfByte[1] & 0xFF) < 92 ? 1 : 0);
/*      */ 
/* 5747 */         i3 = 2 * i2 - ((paramArrayOfByte[1] & 0xFF) > 91 ? 1 : 0) - LnxqFirstDigit[paramArrayOfByte[i2]];
/*      */       }
/*      */       else
/*      */       {
/* 5751 */         i2 = i20 - 1;
/* 5752 */         i8 = 2 * ((paramArrayOfByte[0] & 0xFF) - 193) + ((paramArrayOfByte[1] & 0xFF) > 10 ? 1 : 0);
/*      */ 
/* 5754 */         i3 = 2 * i2 - ((paramArrayOfByte[1] & 0xFF) < 11 ? 1 : 0) - LnxqFirstDigit[paramArrayOfByte[i2]];
/*      */       }
/*      */ 
/* 5759 */       if (m != 0)
/*      */       {
/* 5762 */         if (i8 >= 0)
/*      */         {
/* 5765 */           m = i8 < i6 ? 1 : 0;
/*      */         }
/*      */         else
/*      */         {
/* 5770 */           m = (i8 >= -5) || (i3 - i8 <= i6) || (i6 <= 6) ? 1 : 0;
/*      */         }
/*      */       }
/*      */       int i9;
/*      */       int i12;
/*      */       int i14;
/*      */       int i15;
/*      */       int i16;
/*      */       int i17;
/*      */       int i1;
/*      */       int i11;
/* 5776 */       if (m != 0)
/*      */       {
/* 5783 */         if (i8 >= 0)
/*      */         {
/* 5785 */           i9 = i6 <= i8 + 1 ? i6 : i6 - 1;
/*      */         }
/*      */         else
/*      */         {
/* 5789 */           i9 = i6 + i8;
/*      */         }
/*      */ 
/* 5794 */         if (i9 < i3)
/*      */         {
/* 5797 */           paramArrayOfByte = lnxfpr(paramArrayOfByte, i9);
/*      */ 
/* 5799 */           continue;
/*      */         }
/*      */ 
/* 5803 */         i19 = 0;
/*      */ 
/* 5808 */         if (i8 >= 0)
/*      */         {
/* 5810 */           if (i3 > i8 + 1)
/*      */           {
/* 5816 */             i4 = i6 - (i3 + 1);
/* 5817 */             i12 = 1;
/* 5818 */             i13 = 0;
/* 5819 */             i14 = (i8 & 0x1) > 0 ? 0 : 1;
/* 5820 */             i15 = (i3 - i8 & 0x1) > 0 ? 0 : 1;
/* 5821 */             int i21 = 2147483647;
/* 5822 */             i16 = i8 + 1 & i21 - 1;
/* 5823 */             i17 = i3 - (i8 + 1) & i21 - 1;
/*      */ 
/* 5826 */             i1 = i4;
/*      */           }
/*      */           else
/*      */           {
/* 5834 */             i4 = i6 - (i8 + 1);
/* 5835 */             i11 = i8 + 1 - i3;
/* 5836 */             i12 = 0;
/* 5837 */             i14 = (i8 & 0x1) > 0 ? 0 : 1;
/* 5838 */             i15 = (i11 & 0x1) > 0 ? 1 : 0;
/* 5839 */             i16 = i3 - (i14 != 0 ? 1 : 0) - (i15 != 0 ? 1 : 0);
/* 5840 */             i17 = 0;
/*      */ 
/* 5843 */             if (i11 != 0)
/*      */             {
/* 5845 */               n = i4 + (i7 != 0 ? 1 : 0) + i3;
/* 5846 */               for (i18 = 0; i18 < i11; i18++) {
/* 5847 */                 arrayOfChar2[(n + i18)] = arrayOfChar1[0];
/*      */               }
/*      */             }
/*      */ 
/* 5851 */             i1 = i4;
/*      */           }
/*      */ 
/*      */         }
/*      */         else
/*      */         {
/* 5860 */           i4 = i6 - (i3 - i8);
/* 5861 */           int i10 = -(i8 + 1);
/* 5862 */           i12 = 0;
/* 5863 */           i14 = (i10 & 0x1) > 0 ? 1 : 0;
/* 5864 */           i15 = (i10 + i3 & 0x1) > 0 ? 1 : 0;
/* 5865 */           i16 = 0;
/* 5866 */           i17 = i3 - (i14 != 0 ? 1 : 0) - (i15 != 0 ? 1 : 0);
/*      */ 
/* 5869 */           n = i4;
/*      */ 
/* 5872 */           if (i7 != 0)
/*      */           {
/* 5874 */             arrayOfChar2[n] = arrayOfChar1[11];
/* 5875 */             n++;
/* 5876 */             i7 = 0;
/*      */           }
/*      */ 
/* 5880 */           arrayOfChar2[n] = i5;
/* 5881 */           n++;
/*      */ 
/* 5884 */           if (i10 != 0)
/*      */           {
/* 5886 */             for (i18 = 0; i18 < i10; i18++)
/* 5887 */               arrayOfChar2[(n + i18)] = arrayOfChar1[0];
/* 5888 */             n += i10;
/*      */           }
/*      */ 
/* 5892 */           i1 = n;
/*      */         }
/*      */ 
/* 5898 */         if (i4 != 0)
/*      */         {
/* 5900 */           for (i18 = 0; i18 < i4; i18++) arrayOfChar2[i18] = arrayOfChar1[12];
/*      */ 
/*      */         }
/*      */ 
/*      */       }
/*      */       else
/*      */       {
/* 5908 */         i9 = i6 - ((i8 > 99) || (i8 < -99) ? 6 : 5);
/*      */ 
/* 5912 */         if (i9 < 2)
/*      */         {
/* 5914 */           throw new SQLException(CoreException.getMessage(13));
/*      */         }
/*      */ 
/* 5920 */         if (i9 < i3)
/*      */         {
/* 5923 */           paramArrayOfByte = lnxfpr(paramArrayOfByte, i9);
/*      */ 
/* 5925 */           continue;
/*      */         }
/*      */ 
/* 5929 */         i19 = 0;
/*      */ 
/* 5934 */         if (i3 == 1)
/*      */         {
/* 5937 */           i11 = i9 - 1;
/* 5938 */           i12 = 1;
/* 5939 */           i13 = (i8 & 0x1) > 0 ? 1 : 0;
/* 5940 */           i14 = i13 == 0 ? 1 : 0;
/* 5941 */           i15 = 0;
/* 5942 */           i16 = 0;
/* 5943 */           i17 = 0;
/*      */         }
/*      */         else
/*      */         {
/* 5948 */           i11 = i9 - i3;
/* 5949 */           i12 = 1;
/* 5950 */           i13 = (i8 & 0x1) > 0 ? 1 : 0;
/* 5951 */           i14 = i13 == 0 ? 1 : 0;
/* 5952 */           i15 = i13 == ((i3 & 0x1) > 0 ? 1 : 0) ? 1 : 0;
/* 5953 */           i16 = 0;
/* 5954 */           i17 = i3 - (i14 != 0 ? 1 : 2) - (i15 != 0 ? 1 : 0);
/*      */         }
/*      */ 
/* 5959 */         n = (i7 != 0 ? 1 : 0) + 1 + i3;
/*      */ 
/* 5963 */         if (i11 != 0)
/*      */         {
/* 5965 */           for (i18 = 0; i18 < i11; i18++)
/* 5966 */             arrayOfChar2[(n + i18)] = arrayOfChar1[0];
/* 5967 */           n += i11;
/*      */         }
/*      */ 
/* 5972 */         if (i8 < 0)
/*      */         {
/* 5974 */           i8 = -i8;
/* 5975 */           arrayOfChar2[n] = arrayOfChar1[41];
/* 5976 */           arrayOfChar2[(n + 1)] = arrayOfChar1[11];
/*      */         }
/*      */         else
/*      */         {
/* 5980 */           arrayOfChar2[n] = arrayOfChar1[41];
/* 5981 */           arrayOfChar2[(n + 1)] = arrayOfChar1[10];
/*      */         }
/*      */ 
/* 5984 */         if (i8 > 99)
/*      */         {
/* 5986 */           arrayOfChar2[(n + 2)] = arrayOfChar1[1];
/* 5987 */           arrayOfByte1[0] = (byte)(i8 - 99);
/* 5988 */           arrayOfChar2[(n + 3)] = arrayOfChar1[LnxqComponents_P[(arrayOfByte1[0] & 0xFF)][0]];
/* 5989 */           arrayOfChar2[(n + 4)] = arrayOfChar1[LnxqComponents_P[(arrayOfByte1[0] & 0xFF)][1]];
/*      */         }
/*      */         else
/*      */         {
/* 5993 */           arrayOfByte1[0] = (byte)(i8 + 1);
/* 5994 */           arrayOfChar2[(n + 2)] = arrayOfChar1[LnxqComponents_P[(arrayOfByte1[0] & 0xFF)][0]];
/* 5995 */           arrayOfChar2[(n + 3)] = arrayOfChar1[LnxqComponents_P[(arrayOfByte1[0] & 0xFF)][1]];
/*      */         }
/*      */ 
/* 5999 */         i1 = 0;
/*      */       }
/*      */ 
/* 6005 */       int i = 1;
/* 6006 */       int n = i1;
/*      */ 
/* 6010 */       if (i7 != 0)
/*      */       {
/* 6012 */         arrayOfChar2[n] = arrayOfChar1[11];
/* 6013 */         n++;
/*      */       }
/*      */ 
/* 6018 */       if (i14 != 0)
/*      */       {
/* 6020 */         arrayOfChar2[n] = arrayOfChar1[arrayOfByte[paramArrayOfByte[i]][1]];
/* 6021 */         n++;
/* 6022 */         i++;
/*      */       }
/*      */       int j;
/* 6027 */       if (i16 != 0)
/*      */       {
/* 6029 */         j = n + i16;
/* 6030 */         while (n < j)
/*      */         {
/* 6032 */           arrayOfChar2[n] = arrayOfChar1[arrayOfByte[paramArrayOfByte[i]][0]];
/* 6033 */           n++;
/* 6034 */           arrayOfChar2[n] = arrayOfChar1[arrayOfByte[paramArrayOfByte[i]][1]];
/* 6035 */           n++;
/* 6036 */           i++;
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/* 6042 */       if (i12 != 0)
/*      */       {
/* 6044 */         if (i13 != 0)
/*      */         {
/* 6046 */           arrayOfChar2[n] = arrayOfChar1[arrayOfByte[paramArrayOfByte[i]][0]];
/* 6047 */           n++;
/* 6048 */           arrayOfChar2[n] = i5;
/* 6049 */           n++;
/* 6050 */           arrayOfChar2[n] = arrayOfChar1[arrayOfByte[paramArrayOfByte[i]][1]];
/* 6051 */           n++;
/* 6052 */           i++;
/*      */         }
/*      */         else
/*      */         {
/* 6056 */           arrayOfChar2[n] = i5;
/* 6057 */           n++;
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/* 6063 */       if (i17 != 0)
/*      */       {
/* 6065 */         j = n + i17;
/* 6066 */         while (n < j)
/*      */         {
/* 6068 */           arrayOfChar2[n] = arrayOfChar1[arrayOfByte[paramArrayOfByte[i]][0]];
/* 6069 */           n++;
/* 6070 */           arrayOfChar2[n] = arrayOfChar1[arrayOfByte[paramArrayOfByte[i]][1]];
/* 6071 */           n++;
/* 6072 */           i++;
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/* 6078 */       if (i15 == 0)
/*      */         continue;
/* 6080 */       arrayOfChar2[n] = arrayOfChar1[arrayOfByte[paramArrayOfByte[i]][0]];
/* 6081 */       n++;
/* 6082 */       i++;
/*      */     }
/*      */ 
/* 6087 */     return new String(arrayOfChar2);
/*      */   }
/*      */ 
/*      */   public byte[] lnxren(double paramDouble)
/*      */     throws SQLException
/*      */   {
/* 6096 */     byte[] arrayOfByte1 = new byte[20];
/* 6097 */     int i = 0;
/*      */ 
/* 6107 */     boolean bool = paramDouble >= 0.0D;
/*      */ 
/* 6109 */     paramDouble = Math.abs(paramDouble);
/*      */     int i1;
/* 6113 */     if (paramDouble < 1.0D)
/*      */     {
/* 6115 */       for (i1 = 0; i1 < 8; i1++)
/*      */       {
/* 6117 */         if (powerTable[i1][2] < paramDouble)
/*      */           continue;
/* 6119 */         i -= (int)powerTable[i1][0];
/* 6120 */         paramDouble *= powerTable[i1][1];
/*      */       }
/*      */ 
/* 6124 */       if (paramDouble < 1.0D)
/*      */       {
/* 6126 */         i--;
/* 6127 */         paramDouble *= 100.0D;
/*      */       }
/*      */     }
/*      */     else
/*      */     {
/* 6132 */       for (i1 = 0; i1 < 8; i1++)
/*      */       {
/* 6134 */         if (powerTable[i1][1] > paramDouble)
/*      */           continue;
/* 6136 */         i += (int)powerTable[i1][0];
/* 6137 */         paramDouble *= powerTable[i1][2];
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 6146 */     if (i > 62) {
/* 6147 */       throw new SQLException(CoreException.getMessage(3));
/*      */     }
/*      */ 
/* 6150 */     if (i < -65) {
/* 6151 */       throw new SQLException(CoreException.getMessage(2));
/*      */     }
/*      */ 
/* 6157 */     int j = paramDouble >= 10.0D ? 0 : 1;
/*      */ 
/* 6163 */     int k = 8;
/*      */ 
/* 6167 */     int n = 0; for (int m = (byte)(int)paramDouble; n < k; n++)
/*      */     {
/* 6169 */       arrayOfByte1[n] = m;
/* 6170 */       paramDouble = (paramDouble - m) * 100.0D;
/* 6171 */       m = (byte)(int)paramDouble;
/*      */     }
/*      */ 
/* 6178 */     n = 7;
/* 6179 */     if (j != 0)
/*      */     {
/* 6181 */       if (m >= 50)
/*      */       {
/*      */         int tmp276_274 = n;
/*      */         byte[] tmp276_273 = arrayOfByte1; tmp276_273[tmp276_274] = (byte)(tmp276_273[tmp276_274] + 1);
/*      */       }
/*      */ 
/*      */     }
/* 6189 */     else if ((i == 62) && ((arrayOfByte1[n] + 5) / 10 * 10 == 100))
/* 6190 */       arrayOfByte1[n] = (byte)((arrayOfByte1[n] - 5) / 10 * 10);
/*      */     else {
/* 6192 */       arrayOfByte1[n] = (byte)((arrayOfByte1[n] + 5) / 10 * 10);
/*      */     }
/*      */ 
/* 6196 */     while (arrayOfByte1[n] == 100)
/*      */     {
/* 6198 */       if (n == 0)
/*      */       {
/* 6200 */         i++;
/* 6201 */         arrayOfByte1[n] = 1;
/* 6202 */         break;
/*      */       }
/* 6204 */       arrayOfByte1[n] = 0;
/* 6205 */       n--;
/*      */       int tmp382_380 = n;
/*      */       byte[] tmp382_379 = arrayOfByte1; tmp382_379[tmp382_380] = (byte)(tmp382_379[tmp382_380] + 1);
/*      */     }
/*      */ 
/* 6211 */     n = 7;
/* 6212 */     while ((n != 0) && (arrayOfByte1[n] == 0))
/*      */     {
/* 6214 */       k = (byte)(k - 1);
/* 6215 */       n--;
/*      */     }
/*      */ 
/* 6220 */     byte[] arrayOfByte2 = new byte[k + 1];
/* 6221 */     arrayOfByte2[0] = (byte)i;
/* 6222 */     System.arraycopy(arrayOfByte1, 0, arrayOfByte2, 1, k);
/*      */ 
/* 6226 */     return NUMBER._toLnxFmt(arrayOfByte2, bool);
/*      */   }
/*      */ 
/*      */   public byte[] lnxmin(long paramLong)
/*      */   {
/* 6233 */     byte[] arrayOfByte1 = new byte[20];
/*      */ 
/* 6236 */     byte[] arrayOfByte2 = new byte[20];
/* 6237 */     int k = 0;
/*      */ 
/* 6239 */     if (paramLong == 0L)
/*      */     {
/* 6241 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 6246 */     boolean bool = paramLong >= 0L;
/*      */ 
/* 6257 */     for (int i = 0; paramLong != 0L; i++)
/*      */     {
/* 6260 */       arrayOfByte1[i] = (byte)(int)Math.abs(paramLong % 100L);
/* 6261 */       paramLong /= 100L;
/*      */     }
/*      */ 
/* 6266 */     i--; int j = (byte)i;
/*      */ 
/* 6271 */     for (int m = j; k <= j; m--) {
/* 6272 */       arrayOfByte2[k] = arrayOfByte1[m];
/*      */ 
/* 6271 */       k = (byte)(k + 1);
/*      */     }
/*      */ 
/* 6276 */     while (i > 0)
/*      */     {
/* 6278 */       if (arrayOfByte2[(i--)] != 0) {
/*      */         break;
/*      */       }
/* 6281 */       k = (byte)(k - 1);
/*      */     }
/*      */ 
/* 6286 */     byte[] arrayOfByte3 = new byte[k + 1];
/* 6287 */     arrayOfByte3[0] = j;
/* 6288 */     System.arraycopy(arrayOfByte2, 0, arrayOfByte3, 1, k);
/*      */ 
/* 6292 */     return NUMBER._toLnxFmt(arrayOfByte3, bool);
/*      */   }
/*      */ 
/*      */   public double lnxnur(byte[] paramArrayOfByte)
/*      */   {
/* 6297 */     double d1 = 0.0D;
/*      */ 
/* 6299 */     int j = 1;
/*      */ 
/* 6303 */     int i1 = 0;
/*      */ 
/* 6308 */     int i4 = factorTable.length;
/*      */ 
/* 6315 */     byte[] arrayOfByte = NUMBER._fromLnxFmt(paramArrayOfByte);
/*      */ 
/* 6321 */     int i2 = arrayOfByte[1] < 10 ? 1 : 0;
/*      */ 
/* 6323 */     double d3 = factorTable[0][0];
/* 6324 */     double d4 = factorTable[0][0] - (i4 - 20);
/*      */     int i;
/*      */     int i3;
/* 6326 */     if ((arrayOfByte[0] > d3) || (arrayOfByte[0] < d4))
/*      */     {
/* 6328 */       if (arrayOfByte[0] > d3)
/*      */       {
/* 6330 */         i = -1;
/* 6331 */         i3 = (int)(arrayOfByte[0] - d3);
/*      */       }
/*      */       else
/*      */       {
/* 6335 */         i = -1 + (i4 - 20);
/* 6336 */         i3 = (int)(arrayOfByte[0] - d4);
/*      */       }
/*      */     }
/*      */     else
/*      */     {
/* 6341 */       i = -1 + (int)(d3 - arrayOfByte[0]);
/* 6342 */       i3 = 0;
/*      */     }
/*      */ 
/* 6346 */     int n = arrayOfByte.length - 1;
/*      */ 
/* 6348 */     if (i2 != 0 ? n > 8 : n >= 8)
/*      */     {
/* 6350 */       n = 8;
/* 6351 */       i1 = 1;
/*      */     }
/*      */     int m;
/*      */     double d2;
/* 6354 */     switch (n % 4)
/*      */     {
/*      */     case 3:
/* 6357 */       m = (arrayOfByte[1] * 100 + arrayOfByte[2]) * 100 + arrayOfByte[3];
/* 6358 */       i += 3;
/* 6359 */       d2 = factorTable[i][1];
/* 6360 */       if (d2 < 1.0D)
/* 6361 */         d1 = m / factorTable[i][2];
/*      */       else
/* 6363 */         d1 = m * factorTable[i][1];
/* 6364 */       j += 3;
/* 6365 */       n -= 3;
/* 6366 */       break;
/*      */     case 2:
/* 6368 */       m = arrayOfByte[1] * 100 + arrayOfByte[2];
/* 6369 */       i += 2;
/* 6370 */       d2 = factorTable[i][1];
/* 6371 */       if (d2 < 1.0D)
/* 6372 */         d1 = m / factorTable[i][2];
/*      */       else
/* 6374 */         d1 = m * factorTable[i][1];
/* 6375 */       j += 2;
/* 6376 */       n -= 2;
/* 6377 */       break;
/*      */     case 1:
/* 6379 */       m = arrayOfByte[1];
/* 6380 */       i++;
/* 6381 */       d2 = factorTable[i][1];
/* 6382 */       if (d2 < 1.0D)
/* 6383 */         d1 = m / factorTable[i][2];
/*      */       else
/* 6385 */         d1 = m * factorTable[i][1];
/* 6386 */       j++;
/* 6387 */       n--;
/* 6388 */       break;
/*      */     default:
/* 6390 */       d1 = 0.0D;
/*      */     }
/*      */ 
/* 6394 */     while (n > 0)
/*      */     {
/* 6396 */       m = ((arrayOfByte[j] * 100 + arrayOfByte[(j + 1)]) * 100 + arrayOfByte[(j + 2)]) * 100 + arrayOfByte[(j + 3)];
/*      */ 
/* 6400 */       i += 4;
/* 6401 */       d2 = factorTable[i][1];
/* 6402 */       if (d2 < 1.0D)
/* 6403 */         d1 += m / factorTable[i][2];
/*      */       else
/* 6405 */         d1 += m * factorTable[i][1];
/* 6406 */       j += 4;
/* 6407 */       n -= 4;
/*      */     }
/*      */ 
/* 6410 */     if (i1 != 0)
/*      */     {
/* 6412 */       if (i2 != 0)
/*      */       {
/* 6414 */         if (arrayOfByte[j] > 50)
/*      */         {
/* 6416 */           m = 1;
/* 6417 */           d1 += m * factorTable[i][1];
/*      */         }
/*      */       }
/*      */       else
/*      */       {
/* 6422 */         j--;
/* 6423 */         if (arrayOfByte[j] % 10 >= 5)
/*      */         {
/* 6425 */           m = (arrayOfByte[j] / 10 + 1) * 10;
/*      */         }
/*      */         else
/*      */         {
/* 6429 */           m = arrayOfByte[j] / 10 * 10;
/*      */         }
/* 6431 */         m -= arrayOfByte[j];
/* 6432 */         d1 += m * factorTable[i][1];
/*      */       }
/*      */     }
/*      */ 
/* 6436 */     if (i3 != 0)
/*      */     {
/* 6438 */       int k = 0;
/* 6439 */       while (i3 > 0)
/*      */       {
/* 6441 */         if ((int)powerTable[k][0] <= i3)
/*      */         {
/* 6443 */           i3 -= (int)powerTable[k][0];
/* 6444 */           d1 *= powerTable[k][1];
/*      */         }
/* 6446 */         k++;
/*      */       }
/* 6448 */       while (i3 < 0)
/*      */       {
/* 6450 */         if ((int)powerTable[k][0] <= -i3)
/*      */         {
/* 6452 */           i3 += (int)powerTable[k][0];
/* 6453 */           d1 *= powerTable[k][2];
/*      */         }
/* 6455 */         k++;
/*      */       }
/*      */     }
/*      */ 
/* 6459 */     return NUMBER._isPositive(paramArrayOfByte) ? d1 : -d1;
/*      */   }
/*      */ 
/*      */   public long lnxsni(byte[] paramArrayOfByte) throws SQLException
/*      */   {
/* 6464 */     long l = 0L;
/* 6465 */     byte[] arrayOfByte = NUMBER._fromLnxFmt(paramArrayOfByte);
/* 6466 */     int i = arrayOfByte[0];
/* 6467 */     int j = (byte)(arrayOfByte.length - 1);
/*      */ 
/* 6474 */     int k = j > i + 1 ? i + 1 : j;
/*      */ 
/* 6476 */     for (int m = 0; m < k; m++) {
/* 6477 */       l = l * 100L + arrayOfByte[(m + 1)];
/*      */     }
/*      */ 
/* 6482 */     for (m = i - j; m >= 0; m--) {
/* 6483 */       l *= 100L;
/*      */     }
/* 6485 */     return NUMBER._isPositive(paramArrayOfByte) ? l : -l;
/*      */   }
/*      */ 
/*      */   private byte[] lnxqh2n(char[] paramArrayOfChar)
/*      */   {
/* 7906 */     int i = 0;
/* 7907 */     int j = paramArrayOfChar.length;
/*      */ 
/* 7909 */     long[] arrayOfLong = new long[14];
/* 7910 */     int k = 13;
/* 7911 */     int m = 13;
/*      */ 
/* 7914 */     byte[] arrayOfByte1 = new byte[42];
/* 7915 */     int i1 = 1;
/*      */ 
/* 7924 */     while ((j != 0) && (paramArrayOfChar[(j - 1)] == 0))
/*      */     {
/* 7926 */       j--;
/*      */     }
/*      */ 
/* 7931 */     while ((j != 0) && (paramArrayOfChar[i] == '0'))
/*      */     {
/* 7933 */       i++;
/* 7934 */       j--;
/*      */     }
/*      */ 
/* 7939 */     if (j == 0)
/*      */     {
/* 7941 */       return NUMBER._makeZero();
/*      */     }
/*      */ 
/* 7946 */     arrayOfLong[m] = 0L;
/*      */ 
/* 7948 */     switch (j % 3)
/*      */     {
/*      */     case 0:
/* 7951 */       arrayOfLong[m] = LNXQH2N_DIGIT(paramArrayOfChar[i], 8, arrayOfLong[m]);
/* 7952 */       i++;
/* 7953 */       j--;
/*      */     case 2:
/* 7956 */       arrayOfLong[m] = LNXQH2N_DIGIT(paramArrayOfChar[i], 4, arrayOfLong[m]);
/* 7957 */       i++;
/* 7958 */       j--;
/*      */     case 1:
/* 7961 */       arrayOfLong[m] = LNXQH2N_DIGIT(paramArrayOfChar[i], 0, arrayOfLong[m]);
/* 7962 */       i++;
/* 7963 */       j--;
/* 7964 */       break;
/*      */     }
/*      */ 
/* 7972 */     while (j != 0)
/*      */     {
/* 7975 */       long l = 0L;
/* 7976 */       l = LNXQH2N_DIGIT(paramArrayOfChar[i], 8, l);
/* 7977 */       l = LNXQH2N_DIGIT(paramArrayOfChar[(i + 1)], 4, l);
/* 7978 */       l = LNXQH2N_DIGIT(paramArrayOfChar[(i + 2)], 0, l);
/*      */ 
/* 7980 */       for (n = m; n >= k; n--)
/*      */       {
/* 7982 */         l += (arrayOfLong[n] << 12);
/* 7983 */         arrayOfLong[n] = (l % 1000000L);
/* 7984 */         l /= 1000000L;
/*      */       }
/*      */ 
/* 7987 */       if (l != 0L)
/*      */       {
/* 7989 */         k--;
/* 7990 */         arrayOfLong[k] = l;
/*      */       }
/*      */ 
/* 7993 */       i += 3;
/* 7994 */       j -= 3;
/*      */     }
/*      */ 
/* 7999 */     int i4 = 3 * (m - k) + 1;
/* 8000 */     i4 += (arrayOfLong[k] >= 100L ? 1 : 0);
/* 8001 */     i4 += (arrayOfLong[k] >= 10000L ? 1 : 0);
/*      */ 
/* 8005 */     byte[] arrayOfByte3 = new byte[22];
/* 8006 */     int i5 = 0;
/*      */ 
/* 8010 */     arrayOfByte3[i5] = (byte)(i4 + 192);
/*      */     byte[] arrayOfByte2;
/*      */     int i3;
/* 8014 */     if (i4 > 20)
/*      */     {
/* 8016 */       arrayOfByte2 = arrayOfByte1;
/* 8017 */       i2 = i1;
/* 8018 */       i3 = 21;
/*      */     }
/*      */     else
/*      */     {
/* 8022 */       arrayOfByte2 = arrayOfByte3;
/* 8023 */       i2 = i5 + 1;
/* 8024 */       i3 = i4 + 1;
/*      */     }
/*      */ 
/* 8029 */     switch (i4 % 3)
/*      */     {
/*      */     case 0:
/* 8032 */       arrayOfByte2[i2] = (byte)(int)(arrayOfLong[k] / 10000L + 1L);
/* 8033 */       i2++;
/*      */     case 2:
/* 8036 */       arrayOfByte2[i2] = (byte)(int)(arrayOfLong[k] % 10000L / 100L + 1L);
/* 8037 */       i2++;
/*      */     case 1:
/* 8040 */       arrayOfByte2[i2] = (byte)(int)(arrayOfLong[k] % 100L + 1L);
/* 8041 */       i2++;
/* 8042 */       break;
/*      */     }
/*      */ 
/* 8050 */     for (int n = k + 1; n <= m; n++)
/*      */     {
/* 8053 */       arrayOfByte2[i2] = (byte)(int)(arrayOfLong[n] / 10000L + 1L);
/* 8054 */       arrayOfByte2[(i2 + 1)] = (byte)(int)(arrayOfLong[n] % 10000L / 100L + 1L);
/* 8055 */       arrayOfByte2[(i2 + 2)] = (byte)(int)(arrayOfLong[n] % 100L + 1L);
/*      */ 
/* 8057 */       i2 += 3;
/*      */     }
/*      */ 
/* 8062 */     if (i4 > 20)
/*      */     {
/* 8065 */       i2 = i1 + 20;
/*      */ 
/* 8067 */       if (arrayOfByte1[i2] > 50)
/*      */       {
/* 8070 */         arrayOfByte1[(i1 - 1)] = 1;
/*      */ 
/* 8072 */         i2--;
/* 8073 */         while (arrayOfByte1[i2] == 100)
/*      */         {
/* 8075 */           i2--;
/* 8076 */           i3--;
/*      */         }
/*      */         int tmp684_682 = i2;
/*      */         byte[] tmp684_680 = arrayOfByte1; tmp684_680[tmp684_682] = (byte)(tmp684_680[tmp684_682] + 1);
/*      */ 
/* 8081 */         if (i2 < i1)
/*      */         {
/* 8083 */           i1--;
/*      */           int tmp704_702 = tmp684_680;
/*      */           byte[] tmp704_700 = tmp684_682; tmp704_700[tmp704_702] = (byte)(tmp704_700[tmp704_702] + 1);
/* 8085 */           i3 = 2;
/*      */         }
/*      */       }
/* 8088 */       for (int i6 = 0; i6 < i3; i6++) {
/* 8089 */         tmp684_682[(tmp684_680 + 1 + i6)] = arrayOfByte1[(i1 + i6)];
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 8094 */     int i2 = tmp684_680 + (i3 - 1);
/*      */ 
/* 8096 */     while (arrayOfByte2[i2] == 1)
/*      */     {
/* 8098 */       i2--;
/* 8099 */       i3--;
/*      */     }
/*      */ 
/* 8102 */     byte[] arrayOfByte4 = new byte[i3];
/* 8103 */     System.arraycopy(tmp684_682, 0, arrayOfByte4, 0, i3);
/*      */ 
/* 8105 */     return arrayOfByte4;
/*      */   }
/*      */ 
/*      */   private long LNXQH2N_DIGIT(char paramChar, int paramInt, long paramLong)
/*      */   {
/* 8121 */     if ((paramChar >= 'a') && (paramChar <= 'f'))
/*      */     {
/* 8123 */       l = paramLong + (paramChar - 'a' + 10 << paramInt);
/* 8124 */       return l;
/*      */     }
/*      */ 
/* 8127 */     if ((paramChar >= 'A') && (paramChar <= 'F'))
/*      */     {
/* 8129 */       l = paramLong + (paramChar - 'A' + 10 << paramInt);
/* 8130 */       return l;
/*      */     }
/*      */ 
/* 8133 */     long l = paramLong + (paramChar - '0' << paramInt);
/* 8134 */     return l;
/*      */   }
/*      */ 
/*      */   private byte[] lnxqtra(byte[] paramArrayOfByte, int paramInt)
/*      */     throws SQLException
/*      */   {
/* 8166 */     byte[] arrayOfByte1 = null;
/* 8167 */     byte[] arrayOfByte2 = null;
/* 8168 */     byte[] arrayOfByte3 = null;
/*      */ 
/* 8170 */     byte[] arrayOfByte4 = NUMBER.pi().shareBytes();
/* 8171 */     byte[] arrayOfByte5 = lnxmin(-1L);
/*      */ 
/* 8173 */     long l = 0L;
/*      */ 
/* 8177 */     if ((paramInt == 3) || (paramInt == 4) || (paramInt == 5))
/*      */     {
/* 8180 */       arrayOfByte3 = lnxmul(lnxqtwo, arrayOfByte4);
/*      */ 
/* 8183 */       arrayOfByte1 = lnxabs(paramArrayOfByte);
/*      */ 
/* 8190 */       arrayOfByte1 = lnxmod(arrayOfByte1, arrayOfByte3);
/* 8191 */       if (lnxcmp(arrayOfByte1, arrayOfByte4) > 0)
/*      */       {
/* 8193 */         arrayOfByte1 = lnxsub(arrayOfByte1, arrayOfByte3);
/*      */       }
/*      */ 
/* 8201 */       if (lnxsgn(paramArrayOfByte) == -1)
/*      */       {
/* 8203 */         arrayOfByte1 = lnxneg(arrayOfByte1);
/*      */       }
/*      */ 
/* 8207 */       arrayOfByte2 = lnxmul(arrayOfByte1, arrayOfByte1);
/*      */     }
/* 8209 */     else if (paramInt == 9)
/*      */     {
/* 8212 */       arrayOfByte1 = lnxmod(paramArrayOfByte, lnxqone);
/* 8213 */       arrayOfByte3 = lnxsub(paramArrayOfByte, arrayOfByte1);
/*      */ 
/* 8216 */       if ((arrayOfByte3[0] & 0xFF) < 60)
/*      */       {
/* 8218 */         return NUMBER._makeZero();
/*      */       }
/*      */ 
/* 8222 */       if ((arrayOfByte3[0] & 0xFF) > 195)
/*      */       {
/* 8224 */         return NUMBER._makePosInf();
/*      */       }
/*      */ 
/* 8228 */       l = lnxsni(arrayOfByte3);
/*      */ 
/* 8231 */       arrayOfByte2 = lnxmul(arrayOfByte1, arrayOfByte1);
/*      */     }
/*      */     else
/*      */     {
/* 8236 */       arrayOfByte1 = new byte[paramArrayOfByte.length];
/* 8237 */       System.arraycopy(paramArrayOfByte, 0, arrayOfByte1, 0, paramArrayOfByte.length);
/*      */ 
/* 8240 */       arrayOfByte2 = lnxmul(arrayOfByte1, arrayOfByte1);
/*      */     }
/*      */ 
/* 8244 */     byte[] arrayOfByte6 = null;
/* 8245 */     byte[] arrayOfByte7 = null;
/*      */     int i;
/* 8249 */     if ((paramInt != 4) && (paramInt != 7))
/*      */     {
/* 8252 */       arrayOfByte3 = lnxqone;
/* 8253 */       arrayOfByte6 = lnxqone;
/* 8254 */       arrayOfByte7 = NUMBER._makeZero();
/*      */ 
/* 8257 */       int j = 0;
/*      */       while (true)
/*      */       {
/* 8260 */         arrayOfByte3 = lnxmul(arrayOfByte2, arrayOfByte3);
/* 8261 */         i = (j + 1) * (j + 2);
/* 8262 */         j += 2;
/*      */ 
/* 8264 */         arrayOfByte3 = lnxqIDiv(arrayOfByte3, i);
/*      */ 
/* 8266 */         arrayOfByte7 = lnxadd(arrayOfByte7, arrayOfByte3);
/* 8267 */         arrayOfByte3 = lnxmul(arrayOfByte2, arrayOfByte3);
/* 8268 */         i = (j + 1) * (j + 2);
/* 8269 */         j += 2;
/*      */ 
/* 8271 */         arrayOfByte3 = lnxqIDiv(arrayOfByte3, i);
/*      */ 
/* 8273 */         arrayOfByte6 = lnxadd(arrayOfByte6, arrayOfByte3);
/*      */ 
/* 8275 */         if ((arrayOfByte3[0] & 0xFF) + 20 < (arrayOfByte6[0] & 0xFF)) break; if ((arrayOfByte7[0] & 0xFF) != 255)
/*      */         {
/*      */           continue;
/*      */         }
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 8283 */     byte[] arrayOfByte8 = null;
/* 8284 */     byte[] arrayOfByte9 = null;
/*      */ 
/* 8287 */     if ((paramInt != 3) && (paramInt != 6))
/*      */     {
/* 8290 */       arrayOfByte3 = new byte[arrayOfByte1.length];
/* 8291 */       System.arraycopy(arrayOfByte1, 0, arrayOfByte3, 0, arrayOfByte1.length);
/*      */ 
/* 8293 */       arrayOfByte8 = new byte[arrayOfByte1.length];
/* 8294 */       System.arraycopy(arrayOfByte1, 0, arrayOfByte8, 0, arrayOfByte1.length);
/*      */ 
/* 8296 */       arrayOfByte9 = NUMBER._makeZero();
/*      */ 
/* 8299 */       int k = 1;
/*      */       while (true)
/*      */       {
/* 8302 */         arrayOfByte3 = lnxmul(arrayOfByte2, arrayOfByte3);
/* 8303 */         i = (k + 1) * (k + 2);
/* 8304 */         k += 2;
/*      */ 
/* 8306 */         arrayOfByte3 = lnxqIDiv(arrayOfByte3, i);
/*      */ 
/* 8308 */         arrayOfByte9 = lnxadd(arrayOfByte9, arrayOfByte3);
/* 8309 */         arrayOfByte3 = lnxmul(arrayOfByte2, arrayOfByte3);
/* 8310 */         i = (k + 1) * (k + 2);
/* 8311 */         k += 2;
/*      */ 
/* 8313 */         arrayOfByte3 = lnxqIDiv(arrayOfByte3, i);
/*      */ 
/* 8315 */         arrayOfByte8 = lnxadd(arrayOfByte8, arrayOfByte3);
/*      */ 
/* 8317 */         if (((arrayOfByte3[0] & 0xFF) == 128) && (arrayOfByte3.length == 1))
/*      */         {
/*      */           break;
/*      */         }
/*      */ 
/* 8322 */         if (((arrayOfByte3[0] & 0xFF) >= 128) && ((arrayOfByte3[0] & 0xFF) + 20 < (arrayOfByte8[0] & 0xFF)))
/*      */         {
/*      */           break;
/*      */         }
/*      */ 
/* 8328 */         if (((arrayOfByte3[0] & 0xFF) < 128) && ((arrayOfByte3[0] & 0xFF) > (arrayOfByte8[0] & 0xFF) + 20))
/*      */         {
/*      */           break;
/*      */         }
/*      */ 
/* 8334 */         if ((arrayOfByte9[0] & 0xFF) == 255) break; if ((arrayOfByte9[0] & 0xFF) != 0)
/*      */         {
/*      */           continue;
/*      */         }
/*      */       }
/*      */     }
/*      */ 
/* 8341 */     byte[] arrayOfByte10 = null;
/* 8342 */     byte[] arrayOfByte11 = null;
/*      */ 
/* 8345 */     if ((paramInt == 3) || (paramInt == 4) || (paramInt == 5))
/*      */     {
/* 8348 */       if ((paramInt == 3) || (paramInt == 5))
/*      */       {
/* 8351 */         arrayOfByte10 = lnxsub(arrayOfByte6, arrayOfByte7);
/* 8352 */         if (lnxcmp(arrayOfByte10, lnxqone) > 0)
/*      */         {
/* 8355 */           arrayOfByte10 = lnxqone;
/*      */         }
/* 8357 */         else if (lnxcmp(arrayOfByte10, arrayOfByte5) < 0)
/*      */         {
/* 8360 */           arrayOfByte10 = arrayOfByte5;
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/* 8365 */       if (paramInt == 3)
/*      */       {
/* 8367 */         return arrayOfByte10;
/*      */       }
/*      */ 
/* 8373 */       arrayOfByte11 = lnxsub(arrayOfByte8, arrayOfByte9);
/* 8374 */       if (lnxcmp(arrayOfByte11, lnxqone) > 0)
/*      */       {
/* 8377 */         arrayOfByte11 = lnxqone;
/*      */       }
/* 8379 */       else if (lnxcmp(arrayOfByte11, arrayOfByte5) < 0)
/*      */       {
/* 8382 */         arrayOfByte11 = arrayOfByte5;
/*      */       }
/*      */ 
/* 8386 */       if (paramInt == 4)
/*      */       {
/* 8388 */         return arrayOfByte11;
/*      */       }
/*      */ 
/* 8392 */       return lnxdiv(arrayOfByte11, arrayOfByte10);
/*      */     }
/*      */ 
/* 8397 */     if (paramInt == 6)
/*      */     {
/* 8399 */       return lnxadd(arrayOfByte6, arrayOfByte7);
/*      */     }
/*      */ 
/* 8404 */     if (paramInt == 7)
/*      */     {
/* 8406 */       return lnxadd(arrayOfByte8, arrayOfByte9);
/*      */     }
/*      */ 
/* 8411 */     arrayOfByte11 = lnxadd(arrayOfByte8, arrayOfByte9);
/* 8412 */     arrayOfByte10 = lnxadd(arrayOfByte6, arrayOfByte7);
/*      */ 
/* 8416 */     if (paramInt == 8)
/*      */     {
/* 8418 */       return lnxdiv(arrayOfByte11, arrayOfByte10);
/*      */     }
/*      */ 
/* 8423 */     byte[] arrayOfByte12 = NUMBER.e().shareBytes();
/*      */ 
/* 8425 */     byte[] arrayOfByte13 = lnxadd(arrayOfByte10, arrayOfByte11);
/* 8426 */     arrayOfByte1 = lnxpow(arrayOfByte12, (int)l);
/*      */ 
/* 8428 */     arrayOfByte13 = lnxmul(arrayOfByte13, arrayOfByte1);
/*      */ 
/* 8430 */     return arrayOfByte13;
/*      */   }
/*      */ 
/*      */   private byte[] lnxqtri(byte[] paramArrayOfByte, int paramInt)
/*      */     throws SQLException
/*      */   {
/* 8463 */     Object localObject = null;
/* 8464 */     byte[] arrayOfByte1 = null;
/* 8465 */     byte[] arrayOfByte2 = null;
/*      */ 
/* 8468 */     byte[] arrayOfByte3 = NUMBER.pi().shareBytes();
/* 8469 */     byte[] arrayOfByte4 = lnxdiv(arrayOfByte3, lnxqtwo);
/*      */ 
/* 8472 */     if (paramInt == 2)
/*      */     {
/* 8474 */       if (NUMBER._isPosInf(paramArrayOfByte))
/*      */       {
/* 8477 */         return arrayOfByte4;
/*      */       }
/* 8479 */       if (NUMBER._isNegInf(paramArrayOfByte))
/*      */       {
/* 8482 */         return lnxneg(arrayOfByte4);
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 8490 */     byte[] arrayOfByte5 = lnxabs(paramArrayOfByte);
/*      */ 
/* 8495 */     if ((paramInt == 1) || (paramInt == 0))
/*      */     {
/* 8498 */       if (lnxcmp(arrayOfByte5, lnxqone) > 0)
/*      */       {
/* 8502 */         throw new SQLException(CoreException.getMessage(11));
/*      */       }
/*      */ 
/* 8512 */       if ((arrayOfByte5[0] & 0xFF) <= 183)
/*      */       {
/* 8514 */         if (paramInt == 1)
/*      */         {
/* 8516 */           byte[] arrayOfByte6 = new byte[paramArrayOfByte.length];
/* 8517 */           System.arraycopy(paramArrayOfByte, 0, arrayOfByte6, 0, paramArrayOfByte.length);
/* 8518 */           return arrayOfByte6;
/*      */         }
/*      */ 
/* 8523 */         return lnxsub(arrayOfByte4, paramArrayOfByte);
/*      */       }
/*      */ 
/* 8536 */       localObject = lnxsub(lnxqone, arrayOfByte5);
/* 8537 */       arrayOfByte1 = lnxadd(lnxqone, arrayOfByte5);
/* 8538 */       arrayOfByte5 = lnxdiv(localObject, arrayOfByte1);
/*      */ 
/* 8540 */       arrayOfByte5 = lnxsqr(arrayOfByte5);
/*      */     }
/*      */     int i;
/* 8552 */     if ((i = lnxcmp(arrayOfByte5, lnxqone)) > 0)
/*      */     {
/* 8554 */       arrayOfByte5 = lnxdiv(lnxqone, arrayOfByte5);
/*      */     }
/*      */ 
/* 8558 */     localObject = new byte[arrayOfByte5.length];
/* 8559 */     System.arraycopy(arrayOfByte5, 0, localObject, 0, arrayOfByte5.length);
/*      */ 
/* 8568 */     int j = 1;
/*      */     while (true)
/*      */     {
/* 8591 */       arrayOfByte1 = lnxtan(localObject);
/* 8592 */       arrayOfByte2 = lnxsub(arrayOfByte5, arrayOfByte1);
/* 8593 */       arrayOfByte1 = lnxmul(arrayOfByte1, arrayOfByte1);
/* 8594 */       arrayOfByte1 = lnxadd(arrayOfByte1, lnxqone);
/* 8595 */       arrayOfByte1 = lnxdiv(arrayOfByte2, arrayOfByte1);
/*      */ 
/* 8599 */       int k = (arrayOfByte1[0] & 0xFF) >= 128 ? (arrayOfByte1[0] & 0xFF) - 193 : 62 - (arrayOfByte1[0] & 0xFF);
/*      */ 
/* 8602 */       int m = (localObject[0] & 0xFF) >= 128 ? (localObject[0] & 0xFF) - 193 : 62 - (localObject[0] & 0xFF);
/*      */ 
/* 8606 */       if (((arrayOfByte1[0] & 0xFF) == 128) && (arrayOfByte1.length == 1))
/*      */       {
/*      */         break;
/*      */       }
/*      */ 
/* 8611 */       if ((k & 0xFF) + 15 < (m & 0xFF))
/*      */       {
/*      */         break;
/*      */       }
/*      */ 
/* 8616 */       if (j > 15)
/*      */       {
/*      */         break;
/*      */       }
/* 8620 */       localObject = lnxadd(localObject, arrayOfByte1);
/* 8621 */       j++;
/*      */     }
/*      */ 
/* 8625 */     if (i > 0)
/*      */     {
/* 8628 */       localObject = lnxsub(arrayOfByte4, localObject);
/*      */     }
/*      */ 
/* 8632 */     if ((localObject[0] & 0xFF) < 128)
/*      */     {
/* 8634 */       localObject = NUMBER._makeZero();
/*      */     }
/*      */ 
/* 8638 */     if (lnxcmp(localObject, arrayOfByte4) > 0)
/*      */     {
/* 8640 */       localObject = arrayOfByte4;
/*      */     }
/*      */ 
/* 8648 */     if ((paramInt == 1) || (paramInt == 0))
/*      */     {
/* 8650 */       localObject = lnxmul(localObject, lnxqtwo);
/*      */     }
/*      */ 
/* 8653 */     switch (paramInt)
/*      */     {
/*      */     case 1:
/* 8660 */       if (NUMBER._isPositive(paramArrayOfByte))
/*      */       {
/* 8662 */         return lnxsub(arrayOfByte4, localObject);
/*      */       }
/*      */ 
/* 8666 */       return lnxsub(localObject, arrayOfByte4);
/*      */     case 0:
/* 8674 */       if (NUMBER._isPositive(paramArrayOfByte))
/*      */       {
/* 8676 */         return localObject;
/*      */       }
/*      */ 
/* 8681 */       return lnxsub(arrayOfByte3, localObject);
/*      */     case 2:
/* 8689 */       if (NUMBER._isPositive(paramArrayOfByte))
/*      */       {
/* 8691 */         return localObject;
/*      */       }
/*      */ 
/* 8696 */       return lnxneg(localObject);
/*      */     }
/*      */ 
/* 8705 */     throw new SQLException(CoreException.getMessage(11));
/*      */   }
/*      */ 
/*      */   private int lnxcmp(byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
/*      */   {
/* 8720 */     return NUMBER.compareBytes(paramArrayOfByte1, paramArrayOfByte2);
/*      */   }
/*      */ 
/*      */   private int lnxsgn(byte[] paramArrayOfByte)
/*      */   {
/* 8736 */     if (NUMBER._isZero(paramArrayOfByte)) return 0;
/* 8737 */     if (NUMBER._isPositive(paramArrayOfByte)) {
/* 8738 */       return 1;
/*      */     }
/* 8740 */     return -1;
/*      */   }
/*      */ 
/*      */   private byte[] lnxqIDiv(byte[] paramArrayOfByte, int paramInt)
/*      */     throws SQLException
/*      */   {
/* 8752 */     byte[] arrayOfByte = lnxmin(paramInt);
/*      */ 
/* 8755 */     return lnxdiv(paramArrayOfByte, arrayOfByte);
/*      */   }
/*      */ 
/*      */   private static void _negateNumber(byte[] paramArrayOfByte)
/*      */   {
/* 8766 */     for (int i = paramArrayOfByte.length - 1; i > 0; i--)
/*      */     {
/* 8768 */       paramArrayOfByte[i] = LnxqNegate[paramArrayOfByte[i]];
/*      */     }
/* 8770 */     paramArrayOfByte[0] = (byte)(paramArrayOfByte[0] ^ 0xFFFFFFFF);
/*      */   }
/*      */ 
/*      */   private static byte[] _setLength(byte[] paramArrayOfByte, int paramInt)
/*      */   {
/* 8780 */     boolean bool = NUMBER._isPositive(paramArrayOfByte);
/*      */     byte[] arrayOfByte;
/* 8784 */     if (bool)
/*      */     {
/* 8786 */       arrayOfByte = new byte[paramInt];
/*      */     }
/* 8791 */     else if ((paramInt <= 20) && (paramArrayOfByte[(paramInt - 1)] != 102))
/*      */     {
/* 8794 */       arrayOfByte = new byte[paramInt + 1];
/* 8795 */       arrayOfByte[paramInt] = 102;
/*      */     }
/*      */     else
/*      */     {
/* 8799 */       arrayOfByte = new byte[paramInt];
/*      */     }
/*      */ 
/* 8802 */     System.arraycopy(paramArrayOfByte, 0, arrayOfByte, 0, paramInt);
/* 8803 */     return arrayOfByte;
/*      */   }
/*      */ 
/*      */   private class lnxqc
/*      */   {
/*      */     static final int LNXQC0 = 0;
/*      */     static final int LNXQC1 = 1;
/*      */     static final int LNXQC2 = 2;
/*      */     static final int LNXQC3 = 3;
/*      */     static final int LNXQC4 = 4;
/*      */     static final int LNXQC5 = 5;
/*      */     static final int LNXQC6 = 6;
/*      */     static final int LNXQC7 = 7;
/*      */     static final int LNXQC8 = 8;
/*      */     static final int LNXQC9 = 9;
/*      */     static final int LNXQCPLUS = 10;
/*      */     static final int LNXQCMINUS = 11;
/*      */     static final int LNXQCSPACE = 12;
/*      */     static final int LNXQCDOT = 13;
/*      */     static final int LNXQCCOMMA = 14;
/*      */     static final int LNXQCDOLLR = 15;
/*      */     static final int LNXQCLT = 16;
/*      */     static final int LNXQCGRT = 17;
/*      */     static final int LNXQCLPT = 18;
/*      */     static final int LNXQCRPT = 19;
/*      */     static final int LNXQCHASH = 20;
/*      */     static final int LNXQCTILDE = 21;
/*      */     static final int LNXQCASML = 22;
/*      */     static final int LNXQCBSML = 23;
/*      */     static final int LNXQCCSML = 24;
/*      */     static final int LNXQCDSML = 25;
/*      */     static final int LNXQCESML = 26;
/*      */     static final int LNXQCFSML = 27;
/*      */     static final int LNXQCGSML = 28;
/*      */     static final int LNXQCISML = 29;
/*      */     static final int LNXQCLSML = 30;
/*      */     static final int LNXQCMSML = 31;
/*      */     static final int LNXQCPSML = 32;
/*      */     static final int LNXQCRSML = 33;
/*      */     static final int LNXQCSSML = 34;
/*      */     static final int LNXQCTSML = 35;
/*      */     static final int LNXQCVSML = 36;
/*      */     static final int LNXQCALRG = 37;
/*      */     static final int LNXQCBLRG = 38;
/*      */     static final int LNXQCCLRG = 39;
/*      */     static final int LNXQCDLRG = 40;
/*      */     static final int LNXQCELRG = 41;
/*      */     static final int LNXQCFLRG = 42;
/*      */     static final int LNXQCILRG = 43;
/*      */     static final int LNXQCLLRG = 44;
/*      */     static final int LNXQCMLRG = 45;
/*      */     static final int LNXQCPLRG = 46;
/*      */     static final int LNXQCRLRG = 47;
/*      */     static final int LNXQCSLRG = 48;
/*      */     static final int LNXQCTLRG = 49;
/*      */ 
/*      */     private lnxqc()
/*      */     {
/*      */     }
/*      */   }
/*      */ }

/* Location:           /Users/admin/.m2/repository/com/alibaba/external/jdbc.oracle/10.2.0.2/jdbc.oracle-10.2.0.2.jar
 * Qualified Name:     oracle.sql.LnxLibThin
 * JD-Core Version:    0.6.0
 */